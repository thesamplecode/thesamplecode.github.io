(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{489:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试"}},[t._v("#")]),t._v(" 面试")]),t._v(" "),a("h3",{attrs:{id:"const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),a("h4",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),a("ol",[a("li",[t._v("修饰变量，说明该变量不可以被改变；")]),t._v(" "),a("li",[t._v("修饰指针，分为指向常量的指针（pointer to const）和自身是常量的指针（常量指针，const pointer）；")]),t._v(" "),a("li",[t._v("修饰引用，指向常量的引用（reference to const），用于形参类型，即避免了拷贝，又避免了函数对值的修改；")]),t._v(" "),a("li",[t._v("修饰成员函数，说明该成员函数内不能修改成员变量。")])]),t._v(" "),a("h4",{attrs:{id:"const-的指针与引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-的指针与引用"}},[t._v("#")]),t._v(" const 的指针与引用")]),t._v(" "),a("ul",[a("li",[t._v("指针\n"),a("ul",[a("li",[t._v("指向常量的指针（pointer to const）")]),t._v(" "),a("li",[t._v("自身是常量的指针（常量指针，const pointer）")])])]),t._v(" "),a("li",[t._v("引用\n"),a("ul",[a("li",[t._v("指向常量的引用（reference to const）")]),t._v(" "),a("li",[t._v("没有 const reference，因为引用本身就是 const pointer")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("（为了方便记忆可以想成）被 const 修饰（在 const 后面）的值不可改变，如下文使用例子中的 "),a("code",[t._v("p2")]),t._v("、"),a("code",[t._v("p3")])])]),t._v(" "),a("h4",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("const 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常对象成员，只能在初始化列表赋值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化列表")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const可用于对重载函数的区分")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通成员函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常成员函数，不得修改类中的任何数据成员的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象")]),t._v("\n    A b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通对象，可以调用全部成员函数、更新常成员变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" A a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常对象，只能调用常成员函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指针变量，指向常对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("q "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向常对象的引用")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指针")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指针变量，指向字符数组变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指针变量，指向字符数组常量（const 后面是 char，说明指向的字符（char）不可改变）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自身是常量的指针，指向字符数组变量（const 后面是 p3，说明 p3 指针自身不可改变）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自身是常量的指针，指向字符数组常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传递过来的参数在函数内不可变")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数指针所指内容为常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数指针为常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用参数在函数内为常量")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数返回值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个常数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个指向常量的指针变量，使用：const int *p = function6();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个指向变量的常指针，使用：int* const p = function7();")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br")])]),a("h3",{attrs:{id:"static"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static"}},[t._v("#")]),t._v(" static")]),t._v(" "),a("h4",{attrs:{id:"作用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用-2"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),a("ol",[a("li",[t._v("修饰普通变量，修改变量的存储区域和生命周期，使变量存储在静态区，在 main 函数运行前就分配了空间，如果有初始值就用初始值初始化它，如果没有初始值系统用默认值初始化它。")]),t._v(" "),a("li",[t._v("修饰普通函数，表明函数的作用范围，仅在定义该函数的文件内才能使用。在多人开发项目时，为了防止与他人命名空间里的函数重名，可以将函数定位为 static。")]),t._v(" "),a("li",[t._v("修饰成员变量，修饰成员变量使所有的对象只保存一个该变量，而且不需要生成对象就可以访问该成员。")]),t._v(" "),a("li",[t._v("修饰成员函数，修饰成员函数使得不需要生成对象就可以访问该函数，但是在 static 函数内不能访问非静态成员。")])]),t._v(" "),a("h3",{attrs:{id:"this-指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-指针"}},[t._v("#")]),t._v(" this 指针")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("this")]),t._v(" 指针是一个隐含于每一个非静态成员函数中的特殊指针。它指向调用该成员函数的那个对象。")]),t._v(" "),a("li",[t._v("当对一个对象调用成员函数时，编译程序先将对象的地址赋给 "),a("code",[t._v("this")]),t._v(" 指针，然后调用成员函数，每次成员函数存取数据成员时，都隐式使用 "),a("code",[t._v("this")]),t._v(" 指针。")]),t._v(" "),a("li",[t._v("当一个成员函数被调用时，自动向它传递一个隐含的参数，该参数是一个指向这个成员函数所在的对象的指针。")]),t._v(" "),a("li",[a("code",[t._v("this")]),t._v(" 指针被隐含地声明为: "),a("code",[t._v("ClassName *const this")]),t._v("，这意味着不能给 "),a("code",[t._v("this")]),t._v(" 指针赋值；在 "),a("code",[t._v("ClassName")]),t._v(" 类的 "),a("code",[t._v("const")]),t._v(" 成员函数中，"),a("code",[t._v("this")]),t._v(" 指针的类型为："),a("code",[t._v("const ClassName* const")]),t._v("，这说明不能对 "),a("code",[t._v("this")]),t._v(" 指针所指向的这种对象是不可修改的（即不能对这种对象的数据成员进行赋值操作）；")]),t._v(" "),a("li",[a("code",[t._v("this")]),t._v(" 并不是一个常规变量，而是个右值，所以不能取得 "),a("code",[t._v("this")]),t._v(" 的地址（不能 "),a("code",[t._v("&this")]),t._v("）。")]),t._v(" "),a("li",[t._v("在以下场景中，经常需要显式引用 "),a("code",[t._v("this")]),t._v(" 指针：\n"),a("ol",[a("li",[t._v("为实现对象的链式引用；")]),t._v(" "),a("li",[t._v("为避免对同一对象进行赋值操作；")]),t._v(" "),a("li",[t._v("在实现一些数据结构时，如 "),a("code",[t._v("list")]),t._v("。")])])])]),t._v(" "),a("h3",{attrs:{id:"inline-内联函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inline-内联函数"}},[t._v("#")]),t._v(" inline 内联函数")]),t._v(" "),a("h4",{attrs:{id:"特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[t._v("#")]),t._v(" 特征")]),t._v(" "),a("ul",[a("li",[t._v("相当于把内联函数里面的内容写在调用内联函数处；")]),t._v(" "),a("li",[t._v("相当于不用执行进入函数的步骤，直接执行函数体；")]),t._v(" "),a("li",[t._v("相当于宏，却比宏多了类型检查，真正具有函数特性；")]),t._v(" "),a("li",[t._v("编译器一般不内联包含循环、递归、switch 等复杂操作的内联函数；")]),t._v(" "),a("li",[t._v("在类声明中定义的函数，除了虚函数的其他函数都会自动隐式地当成内联函数。")])]),t._v(" "),a("h4",{attrs:{id:"使用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-2"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("inline 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明1（加 inline，建议使用）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("functionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明2（不加 inline）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("functionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("functionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/****/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类内定义，隐式内联")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 隐式内联")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类外定义，需要显式内联")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要显式内联")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h4",{attrs:{id:"编译器对-inline-函数的处理步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译器对-inline-函数的处理步骤"}},[t._v("#")]),t._v(" 编译器对 inline 函数的处理步骤")]),t._v(" "),a("ol",[a("li",[t._v("将 inline 函数体复制到 inline 函数调用点处；")]),t._v(" "),a("li",[t._v("为所用 inline 函数中的局部变量分配内存空间；")]),t._v(" "),a("li",[t._v("将 inline 函数的的输入参数和返回值映射到调用方法的局部变量空间中；")]),t._v(" "),a("li",[t._v("如果 inline 函数有多个返回点，将其转变为 inline 函数代码块末尾的分支（使用 GOTO）。")])]),t._v(" "),a("h4",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ol",[a("li",[t._v("内联函数同宏函数一样将在被调用处进行代码展开，省去了参数压栈、栈帧开辟与回收，结果返回等，从而提高程序运行速度。")]),t._v(" "),a("li",[t._v("内联函数相比宏函数来说，在代码展开时，会做安全检查或自动类型转换（同普通函数），而宏定义则不会。")]),t._v(" "),a("li",[t._v("在类中声明同时定义的成员函数，自动转化为内联函数，因此内联函数可以访问类的成员变量，宏定义则不能。")]),t._v(" "),a("li",[t._v("内联函数在运行时可调试，而宏定义不可以。")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ol",[a("li",[t._v("代码膨胀。内联是以代码膨胀（复制）为代价，消除函数调用带来的开销。如果执行函数体内代码的时间，相比于函数调用的开销较大，那么效率的收获会很少。另一方面，每一处内联函数的调用都要复制代码，将使程序的总代码量增大，消耗更多的内存空间。")]),t._v(" "),a("li",[t._v("inline 函数无法随着函数库升级而升级。inline函数的改变需要重新编译，不像 non-inline 可以直接链接。")]),t._v(" "),a("li",[t._v("是否内联，程序员不可控。内联函数只是对编译器的建议，是否对函数内联，决定权在于编译器。")])]),t._v(" "),a("h4",{attrs:{id:"虚函数（virtual）可以是内联函数（inline）吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚函数（virtual）可以是内联函数（inline）吗？"}},[t._v("#")]),t._v(" 虚函数（virtual）可以是内联函数（inline）吗？")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"http://www.cs.technion.ac.il/users/yechiel/c++-faq/inline-virtuals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v('Are "inline virtual" member functions ever actually "inlined"?'),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("虚函数可以是内联函数，内联是可以修饰虚函数的，但是当虚函数表现多态性的时候不能内联。")]),t._v(" "),a("li",[t._v("内联是在编译器建议编译器内联，而虚函数的多态性在运行期，编译器无法知道运行期调用哪个代码，因此虚函数表现为多态性时（运行期）不可以内联。")]),t._v(" "),a("li",[a("code",[t._v("inline virtual")]),t._v(" 唯一可以内联的时候是：编译器知道所调用的对象是哪个类（如 "),a("code",[t._v("Base::who()")]),t._v("），这只有在编译器具有实际对象而不是对象的指针或引用时才会发生。")])]),t._v(" "),a("p",[t._v("虚函数内联使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")]),t._v("  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Base\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Derived")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不写inline时隐式内联")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Derived\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处的虚函数 who()，是通过类（Base）的具体对象（b）来调用的，编译期间就能确定了，所以它可以是内联的，但最终是否内联取决于编译器。 ")]),t._v("\n\tBase b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处的虚函数是通过指针调用的，呈现多态性，需要在运行时期间才能确定，所以不能为内联。  ")]),t._v("\n\tBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Derived")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为Base有虚析构函数（virtual ~Base() {}），所以 delete 时，会先调用派生类（Derived）析构函数，再调用基类（Base）析构函数，防止内存泄漏。")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br")])]),a("h3",{attrs:{id:"volatile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[t._v("#")]),t._v(" volatile")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("volatile 关键字是一种类型修饰符，用它声明的类型变量表示可以被某些编译器未知的因素（操作系统、硬件、其它线程等）更改。所以使用 volatile 告诉编译器不应对这样的对象进行优化。")]),t._v(" "),a("li",[t._v("volatile 关键字声明的变量，每次访问时都必须从内存中取出值（没有被 volatile 修饰的变量，可能由于编译器的优化，从 CPU 寄存器中取值）")]),t._v(" "),a("li",[t._v("const 可以是 volatile （如只读的状态寄存器）")]),t._v(" "),a("li",[t._v("指针可以是 volatile")])]),t._v(" "),a("h3",{attrs:{id:"assert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assert"}},[t._v("#")]),t._v(" assert()")]),t._v(" "),a("p",[t._v("断言，是宏，而非函数。assert 宏的原型定义在 "),a("code",[t._v("<assert.h>")]),t._v("（C）、"),a("code",[t._v("<cassert>")]),t._v("（C++）中，其作用是如果它的条件返回错误，则终止程序执行。可以通过定义 "),a("code",[t._v("NDEBUG")]),t._v(" 来关闭 assert，但是需要在源代码的开头，"),a("code",[t._v("include <assert.h>")]),t._v(" 之前。")]),t._v(" "),a("p",[t._v("assert() 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("NDEBUG          ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加上这行，则 assert 不可用")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<assert.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// assert 不可用")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"sizeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sizeof"}},[t._v("#")]),t._v(" sizeof()")]),t._v(" "),a("ul",[a("li",[t._v("sizeof 对数组，得到整个数组所占空间大小。")]),t._v(" "),a("li",[t._v("sizeof 对指针，得到指针本身所占空间大小。")])]),t._v(" "),a("h3",{attrs:{id:"pragma-pack-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pragma-pack-n"}},[t._v("#")]),t._v(" #pragma pack(n)")]),t._v(" "),a("p",[t._v("设定结构体、联合以及类成员变量以 n 字节方式对齐")]),t._v(" "),a("p",[t._v("#pragma pack(n) 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存对齐状态")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设定为 4 字节对齐")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" m4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" m3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 恢复对齐状态")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"位域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位域"}},[t._v("#")]),t._v(" 位域")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("Bit mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode 占 2 位")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("类可以将其（非静态）数据成员定义为位域（bit-field），在一个位域中含有一定数量的二进制位。当一个程序需要向其他程序或硬件设备传递二进制数据时，通常会用到位域。")]),t._v(" "),a("ul",[a("li",[t._v("位域在内存中的布局是与机器有关的")]),t._v(" "),a("li",[t._v("位域的类型必须是整型或枚举类型，带符号类型中的位域的行为将因具体实现而定")]),t._v(" "),a("li",[t._v("取地址运算符（&）不能作用于位域，任何指针都无法指向类的位域")])]),t._v(" "),a("h3",{attrs:{id:"extern-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extern-c"}},[t._v("#")]),t._v(' extern "C"')]),t._v(" "),a("ul",[a("li",[t._v("被 extern 限定的函数或变量是 extern 类型的")]),t._v(" "),a("li",[t._v("被 "),a("code",[t._v('extern "C"')]),t._v(" 修饰的变量和函数是按照 C 语言方式编译和链接的")])]),t._v(" "),a("p",[a("code",[t._v('extern "C"')]),t._v(" 的作用是让 C++ 编译器将 "),a("code",[t._v('extern "C"')]),t._v(" 声明的代码当作 C 语言代码处理，可以避免 C++ 因符号修饰导致代码不能和C语言库中的符号进行链接的问题。")]),t._v(" "),a("p",[t._v('extern "C" 使用')]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"struct-和-typedef-struct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#struct-和-typedef-struct"}},[t._v("#")]),t._v(" struct 和 typedef struct")]),t._v(" "),a("h4",{attrs:{id:"c-中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-中"}},[t._v("#")]),t._v(" C 中")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("等价于")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("此时 "),a("code",[t._v("S")]),t._v(" 等价于 "),a("code",[t._v("struct Student")]),t._v("，但两个标识符名称空间不相同。")]),t._v(" "),a("p",[t._v("另外还可以定义与 "),a("code",[t._v("struct Student")]),t._v(" 不冲突的 "),a("code",[t._v("void Student() {}")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"c-中-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-中-2"}},[t._v("#")]),t._v(" C++ 中")]),t._v(" "),a("p",[t._v("由于编译器定位符号的规则（搜索规则）改变，导致不同于C语言。")]),t._v(" "),a("p",[t._v("一、如果在类标识符空间定义了 "),a("code",[t._v("struct Student {...};")]),t._v("，使用 "),a("code",[t._v("Student me;")]),t._v(" 时，编译器将搜索全局标识符表，"),a("code",[t._v("Student")]),t._v(" 未找到，则在类标识符内搜索。")]),t._v(" "),a("p",[t._v("即表现为可以使用 "),a("code",[t._v("Student")]),t._v(" 也可以使用 "),a("code",[t._v("struct Student")]),t._v("，如下：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cpp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Student me "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 正确，"struct" 关键字可省略')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("二、若定义了与 "),a("code",[t._v("Student")]),t._v(" 同名函数之后，则 "),a("code",[t._v("Student")]),t._v(" 只代表函数，不代表结构体，如下：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 正确，定义后 "Student" 只代表此函数')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//void S() {}               // 错误，符号 "S" 已经被定义为一个 "struct Student" 的别名')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 或者 "S me";')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"c-中-struct-和-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-中-struct-和-class"}},[t._v("#")]),t._v(" C++ 中 struct 和 class")]),t._v(" "),a("p",[t._v("总的来说，struct 更适合看成是一个数据结构的实现体，class 更适合看成是一个对象的实现体。")]),t._v(" "),a("h4",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("ul",[a("li",[t._v("最本质的一个区别就是默认的访问控制\n"),a("ol",[a("li",[t._v("默认的继承访问权限。struct 是 public 的，class 是 private 的。")]),t._v(" "),a("li",[t._v("struct 作为数据结构的实现体，它默认的数据访问控制是 public 的，而 class 作为对象的实现体，它默认的成员变量访问控制是 private 的。")])])])]),t._v(" "),a("h3",{attrs:{id:"union-联合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#union-联合"}},[t._v("#")]),t._v(" union 联合")]),t._v(" "),a("p",[t._v("联合（union）是一种节省空间的特殊的类，一个 union 可以有多个数据成员，但是在任意时刻只有一个数据成员可以有值。当某个成员被赋值后其他成员变为未定义状态。联合有如下特点：")]),t._v(" "),a("ul",[a("li",[t._v("默认访问控制符为 public")]),t._v(" "),a("li",[t._v("可以含有构造函数、析构函数")]),t._v(" "),a("li",[t._v("不能含有引用类型的成员")]),t._v(" "),a("li",[t._v("不能继承自其他类，不能作为基类")]),t._v(" "),a("li",[t._v("不能含有虚函数")]),t._v(" "),a("li",[t._v("匿名 union 在定义所在作用域可直接访问 union 成员")]),t._v(" "),a("li",[t._v("匿名 union 不能包含 protected 成员或 private 成员")]),t._v(" "),a("li",[t._v("全局匿名联合必须是静态（static）的")])]),t._v(" "),a("p",[t._v("union 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" UnionTest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnionTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UnionTest u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 UnionTest 联合的 10")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出全局静态匿名联合的 20")]),t._v("\n\n    i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出局部匿名联合的 30")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br")])]),a("h3",{attrs:{id:"c-实现-c-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-实现-c-类"}},[t._v("#")]),t._v(" C 实现 C++ 类")]),t._v(" "),a("p",[t._v("C 实现 C++ 的面向对象特性（封装、继承、多态）")]),t._v(" "),a("ul",[a("li",[t._v("封装：使用函数指针把属性与方法封装到结构体中")]),t._v(" "),a("li",[t._v("继承：结构体嵌套")]),t._v(" "),a("li",[t._v("多态：父类与子类方法的函数指针不同")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://stackoverflow.com/a/351745",target:"_blank",rel:"noopener noreferrer"}},[t._v("Can you write object-oriented code in C? [closed]"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"explicit（显式）关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explicit（显式）关键字"}},[t._v("#")]),t._v(" explicit（显式）关键字")]),t._v(" "),a("ul",[a("li",[t._v("explicit 修饰构造函数时，可以防止隐式转换和复制初始化")]),t._v(" "),a("li",[t._v("explicit 修饰转换函数时，可以防止隐式转换，但 "),a("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/language/implicit_conversion",target:"_blank",rel:"noopener noreferrer"}},[t._v("按语境转换"),a("OutboundLink")],1),t._v(" 除外")])]),t._v(" "),a("p",[t._v("explicit 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tA "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接初始化")]),t._v("\n\tA a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：复制初始化")]),t._v("\n\tA a3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接列表初始化")]),t._v("\n\tA a4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：复制列表初始化")]),t._v("\n\tA a5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：允许 static_cast 的显式转换 ")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：允许从 int 到 A 的隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：使用转换函数 A::operator bool() 的从 A 到 bool 的隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a6（a1）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：使用转换函数 A::operator bool() 的从 A 到 bool 的隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：使用转换函数 A::operator bool() 的从 A 到 bool 的隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK ：static_cast 进行直接初始化")]),t._v("\n\n\tB "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接初始化")]),t._v("\n\tB b2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰构造函数的对象不可以复制初始化")]),t._v("\n\tB b3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接列表初始化")]),t._v("\n\tB b4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰构造函数的对象不可以复制列表初始化")]),t._v("\n\tB b5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：允许 static_cast 的显式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰构造函数的对象不可以从 int 到 B 的隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：被 explicit 修饰转换函数 B::operator bool() 的对象可以从 B 到 bool 的按语境转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：被 explicit 修饰转换函数 B::operator bool() 的对象可以从 B 到 bool 的按语境转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰转换函数 B::operator bool() 的对象不可以隐式转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：static_cast 进行直接初始化")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br")])]),a("h3",{attrs:{id:"friend-友元类和友元函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-友元类和友元函数"}},[t._v("#")]),t._v(" friend 友元类和友元函数")]),t._v(" "),a("ul",[a("li",[t._v("能访问私有成员")]),t._v(" "),a("li",[t._v("破坏封装性")]),t._v(" "),a("li",[t._v("友元关系不可传递")]),t._v(" "),a("li",[t._v("友元关系的单向性")]),t._v(" "),a("li",[t._v("友元声明的形式及数量不受限制")])]),t._v(" "),a("h3",{attrs:{id:"using"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using"}},[t._v("#")]),t._v(" using")]),t._v(" "),a("h4",{attrs:{id:"using-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-声明"}},[t._v("#")]),t._v(" using 声明")]),t._v(" "),a("p",[t._v("一条 "),a("code",[t._v("using 声明")]),t._v(" 语句一次只引入命名空间的一个成员。它使得我们可以清楚知道程序中所引用的到底是哪个名字。如：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" namespace_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"构造函数的-using-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数的-using-声明"}},[t._v("#")]),t._v(" 构造函数的 using 声明")]),t._v(" "),a("p",[t._v("在 C++11 中，派生类能够重用其直接基类定义的构造函数。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Derived")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" Base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("如上 using 声明，对于基类的每个构造函数，编译器都生成一个与之对应（形参列表完全相同）的派生类构造函数。生成如下类型构造函数：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Derived")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"using-指示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-指示"}},[t._v("#")]),t._v(" using 指示")]),t._v(" "),a("p",[a("code",[t._v("using 指示")]),t._v(" 使得某个特定命名空间中所有名字都可见，这样我们就无需再为它们添加任何前缀限定符了。如：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" namespace_name name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"尽量少使用-using-指示-污染命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尽量少使用-using-指示-污染命名空间"}},[t._v("#")]),t._v(" 尽量少使用 "),a("code",[t._v("using 指示")]),t._v(" 污染命名空间")]),t._v(" "),a("blockquote",[a("p",[t._v("一般说来，使用 using 命令比使用 using 编译命令更安全，这是由于它"),a("strong",[t._v("只导入了指定的名称")]),t._v("。如果该名称与局部名称发生冲突，编译器将"),a("strong",[t._v("发出指示")]),t._v("。using编译命令导入所有的名称，包括可能并不需要的名称。如果与局部名称发生冲突，则"),a("strong",[t._v("局部名称将覆盖名称空间版本")]),t._v("，而编译器"),a("strong",[t._v("并不会发出警告")]),t._v("。另外，名称空间的开放性意味着名称空间的名称可能分散在多个地方，这使得难以准确知道添加了哪些名称。")])]),t._v(" "),a("p",[t._v("using 使用")]),t._v(" "),a("p",[t._v("尽量少使用 "),a("code",[t._v("using 指示")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("应该多使用 "),a("code",[t._v("using 声明")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("或者")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"范围解析运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范围解析运算符"}},[t._v("#")]),t._v(" :: 范围解析运算符")]),t._v(" "),a("h4",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ol",[a("li",[t._v("全局作用域符（"),a("code",[t._v("::name")]),t._v("）：用于类型名称（类、类成员、成员函数、变量等）前，表示作用域为全局命名空间")]),t._v(" "),a("li",[t._v("类作用域符（"),a("code",[t._v("class::name")]),t._v("）：用于表示指定类型的作用域范围是具体某个类的")]),t._v(" "),a("li",[t._v("命名空间作用域符（"),a("code",[t._v("namespace::name")]),t._v("）:用于表示指定类型的作用域范围是具体某个命名空间的")])]),t._v(" "),a("p",[t._v(":: 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局（::）的 count")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类 A 的 count（A::count）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" A"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化局部的 count 为 31")]),t._v("\n\tcount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置局部的 count 的值为 32")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试 1：设置全局的 count 的值为 12")]),t._v("\n\n\tA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试 2：设置类 A 的 count 为 22")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试 3")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h3",{attrs:{id:"enum-枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enum-枚举类型"}},[t._v("#")]),t._v(" enum 枚举类型")]),t._v(" "),a("h4",{attrs:{id:"限定作用域的枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限定作用域的枚举类型"}},[t._v("#")]),t._v(" 限定作用域的枚举类型")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("open_modes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" append "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"不限定作用域的枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不限定作用域的枚举类型"}},[t._v("#")]),t._v(" 不限定作用域的枚举类型")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("color")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" floatPrec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" doublePrec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"decltype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decltype"}},[t._v("#")]),t._v(" decltype")]),t._v(" "),a("p",[t._v("decltype 关键字用于检查实体的声明类型或表达式的类型及值分类。语法：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("decltype")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("decltype 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尾置返回允许我们在参数列表之后声明返回类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("It")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fcn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("It beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" It end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("decltype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理序列")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回序列中一个元素的引用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为了使用模板参数成员，必须用 typename")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("It")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fcn2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("It beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" It end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("remove_reference")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("decltype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("type\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理序列")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("beg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回序列中一个元素的拷贝")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),a("h4",{attrs:{id:"左值引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#左值引用"}},[t._v("#")]),t._v(" 左值引用")]),t._v(" "),a("p",[t._v("常规引用，一般表示对象的身份。")]),t._v(" "),a("h4",{attrs:{id:"右值引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#右值引用"}},[t._v("#")]),t._v(" 右值引用")]),t._v(" "),a("p",[t._v("右值引用就是必须绑定到右值（一个临时对象、将要销毁的对象）的引用，一般表示对象的值。")]),t._v(" "),a("p",[t._v("右值引用可实现转移语义（Move Sementics）和精确传递（Perfect Forwarding），它的主要目的有两个方面：")]),t._v(" "),a("ul",[a("li",[t._v("消除两个对象交互时不必要的对象拷贝，节省运算存储资源，提高效率。")]),t._v(" "),a("li",[t._v("能够更简洁明确地定义泛型函数。")])]),t._v(" "),a("h4",{attrs:{id:"引用折叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用折叠"}},[t._v("#")]),t._v(" 引用折叠")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("X& &")]),t._v("、"),a("code",[t._v("X& &&")]),t._v("、"),a("code",[t._v("X&& &")]),t._v(" 可折叠成 "),a("code",[t._v("X&")])]),t._v(" "),a("li",[a("code",[t._v("X&& &&")]),t._v(" 可折叠成 "),a("code",[t._v("X&&")])])]),t._v(" "),a("h3",{attrs:{id:"宏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏"}},[t._v("#")]),t._v(" 宏")]),t._v(" "),a("ul",[a("li",[t._v("宏定义可以实现类似于函数的功能，但是它终归不是函数，而宏定义中括弧中的“参数”也不是真的参数，在宏展开的时候对 “参数” 进行的是一对一的替换。")])]),t._v(" "),a("h3",{attrs:{id:"成员初始化列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#成员初始化列表"}},[t._v("#")]),t._v(" 成员初始化列表")]),t._v(" "),a("p",[t._v("好处")]),t._v(" "),a("ul",[a("li",[t._v("更高效：少了一次调用默认构造函数的过程。")]),t._v(" "),a("li",[t._v("有些场合必须要用初始化列表：\n"),a("ol",[a("li",[t._v("常量成员，因为常量只能初始化不能赋值，所以必须放在初始化列表里面")]),t._v(" "),a("li",[t._v("引用类型，引用必须在定义的时候初始化，并且不能重新赋值，所以也要写在初始化列表里面")]),t._v(" "),a("li",[t._v("没有默认构造函数的类类型，因为使用初始化列表可以不必调用默认构造函数来初始化")])])])]),t._v(" "),a("h3",{attrs:{id:"initializer-list-列表初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initializer-list-列表初始化"}},[t._v("#")]),t._v(" initializer_list 列表初始化")]),t._v(" "),a("p",[t._v("用花括号初始化器列表初始化一个对象，其中对应构造函数接受一个 "),a("code",[t._v("std::initializer_list")]),t._v(" 参数.")]),t._v(" "),a("p",[t._v("initializer_list 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<vector>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<initializer_list>")])]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("S")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("initializer_list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constructed with a "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-element list\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("initializer_list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("pair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("size_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("c_arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 return 语句中复制列表初始化")]),t._v("\n                                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这不使用 std::initializer_list")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templated_fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    S"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制初始化")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数调用中的列表初始化")]),t._v("\n \n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The vector size is now "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("c_arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ints:\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Range-for over brace-init-list: \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// auto 的规则令此带范围 for 工作")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" al "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// auto 的特殊规则")]),t._v("\n \n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The list bound to auto has size() = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" al"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    templated_fn({1, 2, 3}); // 编译错误！“ {1, 2, 3} ”不是表达式，")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 它无类型，故 T 无法推导")]),t._v("\n    templated_fn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("initializer_list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n    templated_fn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也 OK")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br")])]),a("h3",{attrs:{id:"面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),a("p",[t._v("面向对象程序设计（Object-oriented programming，OOP）是种具有对象概念的程序编程典范，同时也是一种程序开发的抽象方针。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81.png",alt:"面向对象特征"}})]),t._v(" "),a("p",[t._v("面向对象三大特征 —— 封装、继承、多态")]),t._v(" "),a("h3",{attrs:{id:"封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),a("p",[t._v("把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。关键字：public, protected, private。不写默认为 private。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("public")]),t._v(" 成员：可以被任意实体访问")]),t._v(" "),a("li",[a("code",[t._v("protected")]),t._v(" 成员：只允许被子类及本类的成员函数访问")]),t._v(" "),a("li",[a("code",[t._v("private")]),t._v(" 成员：只允许被本类的成员函数、友元类或友元函数访问")])]),t._v(" "),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("ul",[a("li",[t._v("基类（父类）——> 派生类（子类）")])]),t._v(" "),a("h3",{attrs:{id:"多态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多态"}},[t._v("#")]),t._v(" 多态")]),t._v(" "),a("ul",[a("li",[t._v("多态，即多种状态（形态）。简单来说，我们可以将多态定义为消息以多种形式显示的能力。")]),t._v(" "),a("li",[t._v("多态是以封装和继承为基础的。")]),t._v(" "),a("li",[t._v("C++ 多态分类及实现：\n"),a("ol",[a("li",[t._v("重载多态（Ad-hoc Polymorphism，编译期）：函数重载、运算符重载")]),t._v(" "),a("li",[t._v("子类型多态（Subtype Polymorphism，运行期）：虚函数")]),t._v(" "),a("li",[t._v("参数多态性（Parametric Polymorphism，编译期）：类模板、函数模板")]),t._v(" "),a("li",[t._v("强制多态（Coercion Polymorphism，编译期/运行期）：基本类型转换、自定义类型转换")])])])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://catonmat.net/cpp-polymorphism",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Four Polymorphisms in C++"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"静态多态（编译期-早绑定）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态多态（编译期-早绑定）"}},[t._v("#")]),t._v(" 静态多态（编译期/早绑定）")]),t._v(" "),a("p",[t._v("函数重载")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"动态多态（运行期期-晚绑定）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态多态（运行期期-晚绑定）"}},[t._v("#")]),t._v(" 动态多态（运行期期/晚绑定）")]),t._v(" "),a("ul",[a("li",[t._v("虚函数：用 virtual 修饰成员函数，使其成为虚函数")])]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("ul",[a("li",[t._v("普通函数（非类成员函数）不能是虚函数")]),t._v(" "),a("li",[t._v("静态函数（static）不能是虚函数")]),t._v(" "),a("li",[t._v("构造函数不能是虚函数（因为在调用构造函数时，虚表指针并没有在对象的内存空间中，必须要构造函数调用完成后才会形成虚表指针）")]),t._v(" "),a("li",[t._v("内联函数不能是表现多态性时的虚函数，解释见："),a("a",{attrs:{href:"https://github.com/huihut/interview#%E8%99%9A%E5%87%BD%E6%95%B0virtual%E5%8F%AF%E4%BB%A5%E6%98%AF%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0inline%E5%90%97",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚函数（virtual）可以是内联函数（inline）吗？"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("动态多态使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 形状类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Shape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 圆形类")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 矩形类")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Shape "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Shape "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    shape1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用圆形类里面的方法")]),t._v("\n    shape2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用矩形类里面的方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" shape1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    shape1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" shape2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    shape2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h3",{attrs:{id:"虚析构函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚析构函数"}},[t._v("#")]),t._v(" 虚析构函数")]),t._v(" "),a("p",[t._v("虚析构函数是为了解决基类的指针指向派生类对象，并用基类的指针删除派生类对象。")]),t._v(" "),a("p",[t._v("虚析构函数使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Shape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数不能是虚函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Shape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚析构函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 圆形类")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Shape "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    shape1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" shape1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为Shape有虚析构函数，所以delete释放内存时，先调用子类析构函数，再调用基类析构函数，防止内存泄漏。")]),t._v("\n    shape1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h3",{attrs:{id:"纯虚函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纯虚函数"}},[t._v("#")]),t._v(" 纯虚函数")]),t._v(" "),a("p",[t._v("纯虚函数是一种特殊的虚函数，在基类中不能对虚函数给出有意义的实现，而把它声明为纯虚函数，它的实现留给该基类的派生类去做。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"虚函数、纯虚函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚函数、纯虚函数"}},[t._v("#")]),t._v(" 虚函数、纯虚函数")]),t._v(" "),a("ul",[a("li",[t._v("类里如果声明了虚函数，这个函数是实现的，哪怕是空实现，它的作用就是为了能让这个函数在它的子类里面可以被覆盖（override），这样的话，编译器就可以使用后期绑定来达到多态了。纯虚函数只是一个接口，是个函数的声明而已，它要留到子类里去实现。")]),t._v(" "),a("li",[t._v("虚函数在子类里面可以不重写；但纯虚函数必须在子类实现才可以实例化子类。")]),t._v(" "),a("li",[t._v("虚函数的类用于 “实作继承”，继承接口的同时也继承了父类的实现。纯虚函数关注的是接口的统一性，实现由子类完成。")]),t._v(" "),a("li",[t._v("带纯虚函数的类叫抽象类，这种类不能直接生成对象，而只有被继承，并重写其虚函数后，才能使用。抽象类被继承后，子类可以继续是抽象类，也可以是普通类。")]),t._v(" "),a("li",[t._v("虚基类是虚继承中的基类，具体见下文虚继承。")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/u012260238/article/details/53610462",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN . C++ 中的虚函数、纯虚函数区别和联系"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"虚函数指针、虚函数表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚函数指针、虚函数表"}},[t._v("#")]),t._v(" 虚函数指针、虚函数表")]),t._v(" "),a("ul",[a("li",[t._v("虚函数指针：在含有虚函数类的对象中，指向虚函数表，在运行时确定。")]),t._v(" "),a("li",[t._v("虚函数表：在程序只读数据段（"),a("code",[t._v(".rodata section")]),t._v("，见："),a("a",{attrs:{href:"#%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84"}},[t._v("目标文件存储结构")]),t._v("），存放虚函数指针，如果派生类实现了基类的某个虚函数，则在虚表中覆盖原本基类的那个虚函数指针，在编译时根据类的声明创建。")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.twofei.com/496/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++中的虚函数(表)实现机制以及用C语言对其进行的模拟实现"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"虚继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚继承"}},[t._v("#")]),t._v(" 虚继承")]),t._v(" "),a("p",[t._v("虚继承用于解决多继承条件下的菱形继承问题（浪费存储空间、存在二义性）。")]),t._v(" "),a("p",[t._v("底层实现原理与编译器相关，一般通过"),a("strong",[t._v("虚基类指针")]),t._v("和"),a("strong",[t._v("虚基类表")]),t._v("实现，每个虚继承的子类都有一个虚基类指针（占用一个指针的存储空间，4字节）和虚基类表（不占用类对象的存储空间）（需要强调的是，虚基类依旧会在子类里面存在拷贝，只是仅仅最多存在一份而已，并不是不在子类里面了）；当虚继承的子类被当做父类继承时，虚基类指针也会被继承。")]),t._v(" "),a("p",[t._v("实际上，vbptr 指的是虚基类表指针（virtual base table pointer），该指针指向了一个虚基类表（virtual table），虚表中记录了虚基类与本类的偏移地址；通过偏移地址，这样就找到了虚基类成员，而虚继承也不用像普通多继承那样维持着公共基类（虚基类）的两份同样的拷贝，节省了存储空间。")]),t._v(" "),a("h3",{attrs:{id:"虚继承、虚函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚继承、虚函数"}},[t._v("#")]),t._v(" 虚继承、虚函数")]),t._v(" "),a("ul",[a("li",[t._v("相同之处：都利用了虚指针（均占用类的存储空间）和虚表（均不占用类的存储空间）")]),t._v(" "),a("li",[t._v("不同之处：\n"),a("ul",[a("li",[t._v("虚继承\n"),a("ul",[a("li",[t._v("虚基类依旧存在继承类中，只占用存储空间")]),t._v(" "),a("li",[t._v("虚基类表存储的是虚基类相对直接继承类的偏移")])])]),t._v(" "),a("li",[t._v("虚函数\n"),a("ul",[a("li",[t._v("虚函数不占用存储空间")]),t._v(" "),a("li",[t._v("虚函数表存储的是虚函数地址")])])])])])]),t._v(" "),a("h3",{attrs:{id:"模板类、成员模板、虚函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板类、成员模板、虚函数"}},[t._v("#")]),t._v(" 模板类、成员模板、虚函数")]),t._v(" "),a("ul",[a("li",[t._v("模板类中可以使用虚函数")]),t._v(" "),a("li",[t._v("一个类（无论是普通类还是类模板）的成员模板（本身是模板的成员函数）不能是虚函数")])]),t._v(" "),a("h3",{attrs:{id:"抽象类、接口类、聚合类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抽象类、接口类、聚合类"}},[t._v("#")]),t._v(" 抽象类、接口类、聚合类")]),t._v(" "),a("ul",[a("li",[t._v("抽象类：含有纯虚函数的类")]),t._v(" "),a("li",[t._v("接口类：仅含有纯虚函数的抽象类")]),t._v(" "),a("li",[t._v("聚合类：用户可以直接访问其成员，并且具有特殊的初始化语法形式。满足如下特点：\n"),a("ul",[a("li",[t._v("所有成员都是 public")]),t._v(" "),a("li",[t._v("没有定义任何构造函数")]),t._v(" "),a("li",[t._v("没有类内初始化")]),t._v(" "),a("li",[t._v("没有基类，也没有 virtual 函数")])])])]),t._v(" "),a("h3",{attrs:{id:"内存分配和管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存分配和管理"}},[t._v("#")]),t._v(" 内存分配和管理")]),t._v(" "),a("h4",{attrs:{id:"malloc、calloc、realloc、alloca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#malloc、calloc、realloc、alloca"}},[t._v("#")]),t._v(" malloc、calloc、realloc、alloca")]),t._v(" "),a("ol",[a("li",[t._v("malloc：申请指定字节数的内存。申请到的内存中的初始值不确定。")]),t._v(" "),a("li",[t._v("calloc：为指定长度的对象，分配能容纳其指定个数的内存。申请到的内存的每一位（bit）都初始化为 0。")]),t._v(" "),a("li",[t._v("realloc：更改以前分配的内存长度（增加或减少）。当增加长度时，可能需将以前分配区的内容移到另一个足够大的区域，而新增区域内的初始值则不确定。")]),t._v(" "),a("li",[t._v("alloca：在栈上申请内存。程序在出栈的时候，会自动释放内存。但是需要注意的是，alloca 不具可移植性, 而且在没有传统堆栈的机器上很难实现。alloca 不宜使用在必须广泛移植的程序中。C99 中支持变长数组 (VLA)，可以用来替代 alloca。")])]),t._v(" "),a("h4",{attrs:{id:"malloc、free"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#malloc、free"}},[t._v("#")]),t._v(" malloc、free")]),t._v(" "),a("p",[t._v("用于分配、释放内存")]),t._v(" "),a("p",[t._v("malloc、free 使用")]),t._v(" "),a("p",[t._v("申请内存，确认是否申请成功")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("释放内存后指针置空")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \np "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"new、delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new、delete"}},[t._v("#")]),t._v(" new、delete")]),t._v(" "),a("ol",[a("li",[t._v("new / new[]：完成两件事，先底层调用 malloc 分配了内存，然后调用构造函数（创建对象）。")]),t._v(" "),a("li",[t._v("delete/delete[]：也完成两件事，先调用析构函数（清理资源），然后底层调用 free 释放空间。")]),t._v(" "),a("li",[t._v("new 在申请内存时会自动计算所需字节数，而 malloc 则需我们自己输入申请内存空间的字节数。")])]),t._v(" "),a("p",[t._v("new、delete 使用")]),t._v(" "),a("p",[t._v("申请内存，确认是否申请成功")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先内存分配 ，再构造函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先析构函数，再内存释放")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"定位-new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位-new"}},[t._v("#")]),t._v(" 定位 new")]),t._v(" "),a("p",[t._v("定位 new（placement new）允许我们向 new 传递额外的地址参数，从而在预先指定的内存区域创建对象。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("place_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" type\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("place_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initializers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("place_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("place_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" braced initializer list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("place_address")]),t._v(" 是个指针")]),t._v(" "),a("li",[a("code",[t._v("initializers")]),t._v(" 提供一个（可能为空的）以逗号分隔的初始值列表")])]),t._v(" "),a("h3",{attrs:{id:"delete-this-合法吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete-this-合法吗？"}},[t._v("#")]),t._v(" delete this 合法吗？")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://isocpp.org/wiki/faq/freestore-mgmt#delete-this",target:"_blank",rel:"noopener noreferrer"}},[t._v("Is it legal (and moral) for a member function to say delete this?"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("合法，但：")]),t._v(" "),a("ol",[a("li",[t._v("必须保证 this 对象是通过 "),a("code",[t._v("new")]),t._v("（不是 "),a("code",[t._v("new[]")]),t._v("、不是 placement new、不是栈上、不是全局、不是其他对象成员）分配的")]),t._v(" "),a("li",[t._v("必须保证调用 "),a("code",[t._v("delete this")]),t._v(" 的成员函数是最后一个调用 this 的成员函数")]),t._v(" "),a("li",[t._v("必须保证成员函数的 "),a("code",[t._v("delete this")]),t._v(" 后面没有调用 this 了")]),t._v(" "),a("li",[t._v("必须保证 "),a("code",[t._v("delete this")]),t._v(" 后没有人使用了")])]),t._v(" "),a("h3",{attrs:{id:"如何定义一个只能在堆上（栈上）生成对象的类？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何定义一个只能在堆上（栈上）生成对象的类？"}},[t._v("#")]),t._v(" 如何定义一个只能在堆上（栈上）生成对象的类？")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/0a584aa13f804f3ea72b442a065a7618",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何定义一个只能在堆上（栈上）生成对象的类?"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"只能在堆上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只能在堆上"}},[t._v("#")]),t._v(" 只能在堆上")]),t._v(" "),a("p",[t._v("方法：将析构函数设置为私有")]),t._v(" "),a("p",[t._v("原因：C++ 是静态绑定语言，编译器管理栈上对象的生命周期，编译器在为类对象分配栈空间时，会先检查类的析构函数的访问性。若析构函数不可访问，则不能在栈上创建对象。")]),t._v(" "),a("h4",{attrs:{id:"只能在栈上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只能在栈上"}},[t._v("#")]),t._v(" 只能在栈上")]),t._v(" "),a("p",[t._v("方法：将 new 和 delete 重载为私有")]),t._v(" "),a("p",[t._v("原因：在堆上生成对象，使用 new 关键词操作，其过程分为两阶段：第一阶段，使用 new 在堆上寻找可用内存，分配给对象；第二阶段，调用构造函数生成对象。将 new 操作设置为私有，那么第一阶段就无法完成，就不能够在堆上生成对象。")]),t._v(" "),a("h3",{attrs:{id:"智能指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#智能指针"}},[t._v("#")]),t._v(" 智能指针")]),t._v(" "),a("h4",{attrs:{id:"c-标准库（stl）中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-标准库（stl）中"}},[t._v("#")]),t._v(" C++ 标准库（STL）中")]),t._v(" "),a("p",[t._v("头文件："),a("code",[t._v("#include <memory>")])]),t._v(" "),a("h4",{attrs:{id:"c-98"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-98"}},[t._v("#")]),t._v(" C++ 98")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("auto_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"c-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-11"}},[t._v("#")]),t._v(" C++ 11")]),t._v(" "),a("ol",[a("li",[t._v("shared_ptr")]),t._v(" "),a("li",[t._v("unique_ptr")]),t._v(" "),a("li",[t._v("weak_ptr")]),t._v(" "),a("li",[t._v("auto_ptr（被 C++11 弃用）")])]),t._v(" "),a("ul",[a("li",[t._v("Class shared_ptr 实现共享式拥有（shared ownership）概念。多个智能指针指向相同对象，该对象和其相关资源会在 “最后一个 reference 被销毁” 时被释放。为了在结构较复杂的情景中执行上述工作，标准库提供 weak_ptr、bad_weak_ptr 和 enable_shared_from_this 等辅助类。")]),t._v(" "),a("li",[t._v("Class unique_ptr 实现独占式拥有（exclusive ownership）或严格拥有（strict ownership）概念，保证同一时间内只有一个智能指针可以指向该对象。你可以移交拥有权。它对于避免内存泄漏（resource leak）——如 new 后忘记 delete ——特别有用。")])]),t._v(" "),a("h5",{attrs:{id:"shared-ptr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shared-ptr"}},[t._v("#")]),t._v(" shared_ptr")]),t._v(" "),a("p",[t._v("多个智能指针可以共享同一个对象，对象的最末一个拥有着有责任销毁对象，并清理与该对象相关的所有资源。")]),t._v(" "),a("ul",[a("li",[t._v("支持定制型删除器（custom deleter），可防范 Cross-DLL 问题（对象在动态链接库（DLL）中被 new 创建，却在另一个 DLL 内被 delete 销毁）、自动解除互斥锁")])]),t._v(" "),a("h5",{attrs:{id:"weak-ptr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weak-ptr"}},[t._v("#")]),t._v(" weak_ptr")]),t._v(" "),a("p",[t._v("weak_ptr 允许你共享但不拥有某对象，一旦最末一个拥有该对象的智能指针失去了所有权，任何 weak_ptr 都会自动成空（empty）。因此，在 default 和 copy 构造函数之外，weak_ptr 只提供 “接受一个 shared_ptr” 的构造函数。")]),t._v(" "),a("ul",[a("li",[t._v("可打破环状引用（cycles of references，两个其实已经没有被使用的对象彼此互指，使之看似还在 “被使用” 的状态）的问题")])]),t._v(" "),a("h5",{attrs:{id:"unique-ptr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unique-ptr"}},[t._v("#")]),t._v(" unique_ptr")]),t._v(" "),a("p",[t._v("unique_ptr 是 C++11 才开始提供的类型，是一种在异常时可以帮助避免资源泄漏的智能指针。采用独占式拥有，意味着可以确保一个对象和其相应的资源同一时间只被一个 pointer 拥有。一旦拥有着被销毁或编程 empty，或开始拥有另一个对象，先前拥有的那个对象就会被销毁，其任何相应资源亦会被释放。")]),t._v(" "),a("ul",[a("li",[t._v("unique_ptr 用于取代 auto_ptr")])]),t._v(" "),a("h5",{attrs:{id:"auto-ptr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-ptr"}},[t._v("#")]),t._v(" auto_ptr")]),t._v(" "),a("p",[t._v("被 c++11 弃用，原因是缺乏语言特性如 “针对构造和赋值” 的 "),a("code",[t._v("std::move")]),t._v(" 语义，以及其他瑕疵。")]),t._v(" "),a("h5",{attrs:{id:"auto-ptr-与-unique-ptr-比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-ptr-与-unique-ptr-比较"}},[t._v("#")]),t._v(" auto_ptr 与 unique_ptr 比较")]),t._v(" "),a("ul",[a("li",[t._v("auto_ptr 可以赋值拷贝，复制拷贝后所有权转移；unqiue_ptr 无拷贝赋值语义，但实现了"),a("code",[t._v("move")]),t._v(" 语义；")]),t._v(" "),a("li",[t._v("auto_ptr 对象不能管理数组（析构调用 "),a("code",[t._v("delete")]),t._v("），unique_ptr 可以管理数组（析构调用 "),a("code",[t._v("delete[]")]),t._v(" ）；")])]),t._v(" "),a("h3",{attrs:{id:"强制类型转换运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换运算符"}},[t._v("#")]),t._v(" 强制类型转换运算符")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://msdn.microsoft.com/zh-CN/library/5f6c9f8h.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("MSDN . 强制转换运算符"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"static-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-cast"}},[t._v("#")]),t._v(" static_cast")]),t._v(" "),a("ul",[a("li",[t._v("用于非多态类型的转换")]),t._v(" "),a("li",[t._v("不执行运行时类型检查（转换安全性不如 dynamic_cast）")]),t._v(" "),a("li",[t._v("通常用于转换数值数据类型（如 float -> int）")]),t._v(" "),a("li",[t._v("可以在整个类层次结构中移动指针，子类转化为父类安全（向上转换），父类转化为子类不安全（因为子类可能有不在父类的字段或方法）")])]),t._v(" "),a("blockquote",[a("p",[t._v("向上转换是一种隐式转换。")])]),t._v(" "),a("h4",{attrs:{id:"dynamic-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-cast"}},[t._v("#")]),t._v(" dynamic_cast")]),t._v(" "),a("ul",[a("li",[t._v("用于多态类型的转换")]),t._v(" "),a("li",[t._v("执行行运行时类型检查")]),t._v(" "),a("li",[t._v("只适用于指针或引用")]),t._v(" "),a("li",[t._v("对不明确的指针的转换将失败（返回 nullptr），但不引发异常")]),t._v(" "),a("li",[t._v("可以在整个类层次结构中移动指针，包括向上转换、向下转换")])]),t._v(" "),a("h4",{attrs:{id:"const-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-cast"}},[t._v("#")]),t._v(" const_cast")]),t._v(" "),a("ul",[a("li",[t._v("用于删除 const、volatile 和 __unaligned 特性（如将 const int 类型转换为 int 类型 ）")])]),t._v(" "),a("h4",{attrs:{id:"reinterpret-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reinterpret-cast"}},[t._v("#")]),t._v(" reinterpret_cast")]),t._v(" "),a("ul",[a("li",[t._v("用于位的简单重新解释")]),t._v(" "),a("li",[t._v("滥用 reinterpret_cast 运算符可能很容易带来风险。 除非所需转换本身是低级别的，否则应使用其他强制转换运算符之一。")]),t._v(" "),a("li",[t._v("允许将任何指针转换为任何其他指针类型（如 "),a("code",[t._v("char*")]),t._v(" 到 "),a("code",[t._v("int*")]),t._v(" 或 "),a("code",[t._v("One_class*")]),t._v(" 到 "),a("code",[t._v("Unrelated_class*")]),t._v(" 之类的转换，但其本身并不安全）")]),t._v(" "),a("li",[t._v("也允许将任何整数类型转换为任何指针类型以及反向转换。")]),t._v(" "),a("li",[t._v("reinterpret_cast 运算符不能丢掉 const、volatile 或 __unaligned 特性。")]),t._v(" "),a("li",[t._v("reinterpret_cast 的一个实际用途是在哈希函数中，即，通过让两个不同的值几乎不以相同的索引结尾的方式将值映射到索引。")])]),t._v(" "),a("h4",{attrs:{id:"bad-cast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bad-cast"}},[t._v("#")]),t._v(" bad_cast")]),t._v(" "),a("ul",[a("li",[t._v("由于强制转换为引用类型失败，dynamic_cast 运算符引发 bad_cast 异常。")])]),t._v(" "),a("p",[t._v("bad_cast 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    Circle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ref_circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Circle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref_shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bad_cast b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Caught: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("what")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"运行时类型信息-rtti"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行时类型信息-rtti"}},[t._v("#")]),t._v(" 运行时类型信息 (RTTI)")]),t._v(" "),a("h4",{attrs:{id:"dynamic-cast-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-cast-2"}},[t._v("#")]),t._v(" dynamic_cast")]),t._v(" "),a("ul",[a("li",[t._v("用于多态类型的转换")])]),t._v(" "),a("h4",{attrs:{id:"typeid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeid"}},[t._v("#")]),t._v(" typeid")]),t._v(" "),a("ul",[a("li",[t._v("typeid 运算符允许在运行时确定对象的类型")]),t._v(" "),a("li",[t._v("type_id 返回一个 type_info 对象的引用")]),t._v(" "),a("li",[t._v("如果想通过基类的指针获得派生类的数据类型，基类必须带有虚函数")]),t._v(" "),a("li",[t._v("只能获取对象的实际类型")])]),t._v(" "),a("h4",{attrs:{id:"type-info"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-info"}},[t._v("#")]),t._v(" type_info")]),t._v(" "),a("ul",[a("li",[t._v("type_info 类描述编译器在程序中生成的类型信息。 此类的对象可以有效存储指向类型的名称的指针。 type_info 类还可存储适合比较两个类型是否相等或比较其排列顺序的编码值。 类型的编码规则和排列顺序是未指定的，并且可能因程序而异。")]),t._v(" "),a("li",[t._v("头文件："),a("code",[t._v("typeinfo")])])]),t._v(" "),a("p",[t._v("typeid、type_info 使用")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flyable")]),t._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 能飞的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeoff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 起飞")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("land")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降落")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bird")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flyable")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 鸟")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foraging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 觅食")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeoff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("land")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bird")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Plane")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flyable")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 飞机")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("carry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运输")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeoff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("land")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("type_info")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" rhs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" rhs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" rhs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flyable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 做些事情")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeoff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出传入对象类型（"class Bird" or "class Plane"）')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Bird"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断对象类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Bird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Bird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象转化")]),t._v("\n        bird"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foraging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("land")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tBird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bird")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br")])]),a("p",[a("a",{attrs:{id:"effective"}})]),t._v(" "),a("h2",{attrs:{id:"⭐️-effective"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#⭐️-effective"}},[t._v("#")]),t._v(" ⭐️ Effective")]),t._v(" "),a("h3",{attrs:{id:"effective-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#effective-c"}},[t._v("#")]),t._v(" Effective C++")]),t._v(" "),a("ol",[a("li",[t._v("视 C++ 为一个语言联邦（C、Object-Oriented C++、Template C++、STL）")]),t._v(" "),a("li",[t._v("宁可以编译器替换预处理器（尽量以 "),a("code",[t._v("const")]),t._v("、"),a("code",[t._v("enum")]),t._v("、"),a("code",[t._v("inline")]),t._v(" 替换 "),a("code",[t._v("#define")]),t._v("）")]),t._v(" "),a("li",[t._v("尽可能使用 const")]),t._v(" "),a("li",[t._v("确定对象被使用前已先被初始化（构造时赋值（copy 构造函数）比 default 构造后赋值（copy assignment）效率高）")]),t._v(" "),a("li",[t._v("了解 C++ 默默编写并调用哪些函数（编译器暗自为 class 创建 default 构造函数、copy 构造函数、copy assignment 操作符、析构函数）")]),t._v(" "),a("li",[t._v("若不想使用编译器自动生成的函数，就应该明确拒绝（将不想使用的成员函数声明为 private，并且不予实现）")]),t._v(" "),a("li",[t._v("为多态基类声明 virtual 析构函数（如果 class 带有任何 virtual 函数，它就应该拥有一个 virtual 析构函数）")]),t._v(" "),a("li",[t._v("别让异常逃离析构函数（析构函数应该吞下不传播异常，或者结束程序，而不是吐出异常；如果要处理异常应该在非析构的普通函数处理）")]),t._v(" "),a("li",[t._v("绝不在构造和析构过程中调用 virtual 函数（因为这类调用从不下降至 derived class）")]),t._v(" "),a("li",[t._v("令 "),a("code",[t._v("operator=")]),t._v(" 返回一个 "),a("code",[t._v("reference to *this")]),t._v(" （用于连锁赋值）")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("operator=")]),t._v(" 中处理 “自我赋值”")]),t._v(" "),a("li",[t._v("赋值对象时应确保复制 “对象内的所有成员变量” 及 “所有 base class 成分”（调用基类复制构造函数）")]),t._v(" "),a("li",[t._v("以对象管理资源（资源在构造函数获得，在析构函数释放，建议使用智能指针，资源取得时机便是初始化时机（Resource Acquisition Is Initialization，RAII））")]),t._v(" "),a("li",[t._v("在资源管理类中小心 copying 行为（普遍的 RAII class copying 行为是：抑制 copying、引用计数、深度拷贝、转移底部资源拥有权（类似 auto_ptr））")]),t._v(" "),a("li",[t._v("在资源管理类中提供对原始资源（raw resources）的访问（对原始资源的访问可能经过显式转换或隐式转换，一般而言显示转换比较安全，隐式转换对客户比较方便）")]),t._v(" "),a("li",[t._v("成对使用 new 和 delete 时要采取相同形式（"),a("code",[t._v("new")]),t._v(" 中使用 "),a("code",[t._v("[]")]),t._v(" 则 "),a("code",[t._v("delete []")]),t._v("，"),a("code",[t._v("new")]),t._v(" 中不使用 "),a("code",[t._v("[]")]),t._v(" 则 "),a("code",[t._v("delete")]),t._v("）")]),t._v(" "),a("li",[t._v("以独立语句将 newed 对象存储于（置入）智能指针（如果不这样做，可能会因为编译器优化，导致难以察觉的资源泄漏）")]),t._v(" "),a("li",[t._v("让接口容易被正确使用，不易被误用（促进正常使用的办法：接口的一致性、内置类型的行为兼容；阻止误用的办法：建立新类型，限制类型上的操作，约束对象值、消除客户的资源管理责任）")]),t._v(" "),a("li",[t._v("设计 class 犹如设计 type，需要考虑对象创建、销毁、初始化、赋值、值传递、合法值、继承关系、转换、一般化等等。")]),t._v(" "),a("li",[t._v("宁以 pass-by-reference-to-const 替换 pass-by-value （前者通常更高效、避免切割问题（slicing problem），但不适用于内置类型、STL迭代器、函数对象）")]),t._v(" "),a("li",[t._v("必须返回对象时，别妄想返回其 reference（绝不返回 pointer 或 reference 指向一个 local stack 对象，或返回 reference 指向一个 heap-allocated 对象，或返回 pointer 或 reference 指向一个 local static 对象而有可能同时需要多个这样的对象。）")]),t._v(" "),a("li",[t._v("将成员变量声明为 private（为了封装、一致性、对其读写精确控制等）")]),t._v(" "),a("li",[t._v("宁以 non-member、non-friend 替换 member 函数（可增加封装性、包裹弹性（packaging flexibility）、机能扩充性）")]),t._v(" "),a("li",[t._v("若所有参数（包括被this指针所指的那个隐喻参数）皆须要类型转换，请为此采用 non-member 函数")]),t._v(" "),a("li",[t._v("考虑写一个不抛异常的 swap 函数")]),t._v(" "),a("li",[t._v("尽可能延后变量定义式的出现时间（可增加程序清晰度并改善程序效率）")]),t._v(" "),a("li",[t._v("尽量少做转型动作（旧式："),a("code",[t._v("(T)expression")]),t._v("、"),a("code",[t._v("T(expression)")]),t._v("；新式："),a("code",[t._v("const_cast<T>(expression)")]),t._v("、"),a("code",[t._v("dynamic_cast<T>(expression)")]),t._v("、"),a("code",[t._v("reinterpret_cast<T>(expression)")]),t._v("、"),a("code",[t._v("static_cast<T>(expression)")]),t._v("、；尽量避免转型、注重效率避免 dynamic_casts、尽量设计成无需转型、可把转型封装成函数、宁可用新式转型）")]),t._v(" "),a("li",[t._v("避免使用 handles（包括 引用、指针、迭代器）指向对象内部（以增加封装性、使 const 成员函数的行为更像 const、降低 “虚吊号码牌”（dangling handles，如悬空指针等）的可能性）")]),t._v(" "),a("li",[t._v("为 “异常安全” 而努力是值得的（异常安全函数（Exception-safe functions）即使发生异常也不会泄露资源或允许任何数据结构败坏，分为三种可能的保证：基本型、强列型、不抛异常型）")]),t._v(" "),a("li",[t._v("透彻了解 inlining 的里里外外（inlining 在大多数 C++ 程序中是编译期的行为；inline 函数是否真正 inline，取决于编译器；大部分编译器拒绝太过复杂（如带有循环或递归）的函数 inlining，而所有对 virtual 函数的调用（除非是最平淡无奇的）也都会使 inlining 落空；inline 造成的代码膨胀可能带来效率损失；inline 函数无法随着程序库的升级而升级）")]),t._v(" "),a("li",[t._v("将文件间的编译依存关系降至最低（如果使用 object references 或 object pointers 可以完成任务，就不要使用 objects；如果能够，尽量以 class 声明式替换 class 定义式；为声明式和定义式提供不同的头文件）")]),t._v(" "),a("li",[t._v("确定你的 public 继承塑模出 is-a（是一种）关系（适用于 base classes 身上的每一件事情一定适用于 derived classes 身上，因为每一个 derived class 对象也都是一个 base class 对象）")]),t._v(" "),a("li",[t._v("避免遮掩继承而来的名字（可使用 using 声明式或转交函数（forwarding functions）来让被遮掩的名字再见天日）")]),t._v(" "),a("li",[t._v("区分接口继承和实现继承（在 public 继承之下，derived classes 总是继承 base class 的接口；pure virtual 函数只具体指定接口继承；非纯 impure virtual 函数具体指定接口继承及缺省实现继承；non-virtual 函数具体指定接口继承以及强制性实现继承）")]),t._v(" "),a("li",[t._v("考虑 virtual 函数以外的其他选择（如 Template Method 设计模式的 non-virtual interface（NVI）手法，将 virtual 函数替换为 “函数指针成员变量”，以 "),a("code",[t._v("tr1::function")]),t._v(" 成员变量替换 virtual 函数，将继承体系内的 virtual 函数替换为另一个继承体系内的 virtual 函数）")]),t._v(" "),a("li",[t._v("绝不重新定义继承而来的 non-virtual 函数")]),t._v(" "),a("li",[t._v("绝不重新定义继承而来的缺省参数值，因为缺省参数值是静态绑定（statically bound），而 virtual 函数却是动态绑定（dynamically bound）")]),t._v(" "),a("li",[t._v("通过复合塑模 has-a（有一个）或 “根据某物实现出”（在应用域（application domain），复合意味 has-a（有一个）；在实现域（implementation domain），复合意味着 is-implemented-in-terms-of（根据某物实现出））")]),t._v(" "),a("li",[t._v("明智而审慎地使用 private 继承（private 继承意味着 is-implemented-in-terms-of（根据某物实现出），尽可能使用复合，当 derived class 需要访问 protected base class 的成员，或需要重新定义继承而来的时候 virtual 函数，或需要 empty base 最优化时，才使用 private 继承）")]),t._v(" "),a("li",[t._v("明智而审慎地使用多重继承（多继承比单一继承复杂，可能导致新的歧义性，以及对 virtual 继承的需要，但确有正当用途，如 “public 继承某个 interface class” 和 “private 继承某个协助实现的 class”；virtual 继承可解决多继承下菱形继承的二义性问题，但会增加大小、速度、初始化及赋值的复杂度等等成本）")]),t._v(" "),a("li",[t._v("了解隐式接口和编译期多态（class 和 templates 都支持接口（interfaces）和多态（polymorphism）；class 的接口是以签名为中心的显式的（explicit），多态则是通过 virtual 函数发生于运行期；template 的接口是奠基于有效表达式的隐式的（implicit），多态则是通过 template 具现化和函数重载解析（function overloading resolution）发生于编译期）")]),t._v(" "),a("li",[t._v("了解 typename 的双重意义（声明 template 类型参数是，前缀关键字 class 和 typename 的意义完全相同；请使用关键字 typename 标识嵌套从属类型名称，但不得在基类列（base class lists）或成员初值列（member initialization list）内以它作为 base class 修饰符）")]),t._v(" "),a("li",[t._v("学习处理模板化基类内的名称（可在 derived class templates 内通过 "),a("code",[t._v("this->")]),t._v(" 指涉 base class templates 内的成员名称，或藉由一个明白写出的 “base class 资格修饰符” 完成）")]),t._v(" "),a("li",[t._v("将与参数无关的代码抽离 templates（因类型模板参数（non-type template parameters）而造成代码膨胀往往可以通过函数参数或 class 成员变量替换 template 参数来消除；因类型参数（type parameters）而造成的代码膨胀往往可以通过让带有完全相同二进制表述（binary representations）的实现类型（instantiation types）共享实现码）")]),t._v(" "),a("li",[t._v("运用成员函数模板接受所有兼容类型（请使用成员函数模板（member function templates）生成 “可接受所有兼容类型” 的函数；声明 member templates 用于 “泛化 copy 构造” 或 “泛化 assignment 操作” 时还需要声明正常的 copy 构造函数和 copy assignment 操作符）")]),t._v(" "),a("li",[t._v("需要类型转换时请为模板定义非成员函数（当我们编写一个 class template，而它所提供之 “与此 template 相关的” 函数支持 “所有参数之隐式类型转换” 时，请将那些函数定义为 “class template 内部的 friend 函数”）")]),t._v(" "),a("li",[t._v("请使用 traits classes 表现类型信息（traits classes 通过 templates 和 “templates 特化” 使得 “类型相关信息” 在编译期可用，通过重载技术（overloading）实现在编译期对类型执行 if...else 测试）")]),t._v(" "),a("li",[t._v("认识 template 元编程（模板元编程（TMP，template metaprogramming）可将工作由运行期移往编译期，因此得以实现早期错误侦测和更高的执行效率；TMP 可被用来生成 “给予政策选择组合”（based on combinations of policy choices）的客户定制代码，也可用来避免生成对某些特殊类型并不适合的代码）")]),t._v(" "),a("li",[t._v("了解 new-handler 的行为（set_new_handler 允许客户指定一个在内存分配无法获得满足时被调用的函数；nothrow new 是一个颇具局限的工具，因为它只适用于内存分配（operator new），后继的构造函数调用还是可能抛出异常）")]),t._v(" "),a("li",[t._v("了解 new 和 delete 的合理替换时机（为了检测运用错误、收集动态分配内存之使用统计信息、增加分配和归还速度、降低缺省内存管理器带来的空间额外开销、弥补缺省分配器中的非最佳齐位、将相关对象成簇集中、获得非传统的行为）")]),t._v(" "),a("li",[t._v("编写 new 和 delete 时需固守常规（operator new 应该内涵一个无穷循环，并在其中尝试分配内存，如果它无法满足内存需求，就应该调用 new-handler，它也应该有能力处理 0 bytes 申请，class 专属版本则还应该处理 “比正确大小更大的（错误）申请”；operator delete 应该在收到 null 指针时不做任何事，class 专属版本则还应该处理 “比正确大小更大的（错误）申请”）")]),t._v(" "),a("li",[t._v("写了 placement new 也要写 placement delete（当你写一个 placement operator new，请确定也写出了对应的 placement operator delete，否则可能会发生隐微而时断时续的内存泄漏；当你声明 placement new 和 placement delete，请确定不要无意识（非故意）地遮掩了它们地正常版本）")]),t._v(" "),a("li",[t._v("不要轻忽编译器的警告")]),t._v(" "),a("li",[t._v("让自己熟悉包括 TR1 在内的标准程序库（TR1，C++ Technical Report 1，C++11 标准的草稿文件）")]),t._v(" "),a("li",[t._v("让自己熟悉 Boost（准标准库）")])]),t._v(" "),a("h3",{attrs:{id:"more-effective-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-effective-c"}},[t._v("#")]),t._v(" More Effective c++")]),t._v(" "),a("ol",[a("li",[t._v("仔细区别 pointers 和 references（当你知道你需要指向某个东西，而且绝不会改变指向其他东西，或是当你实现一个操作符而其语法需求无法由 pointers 达成，你就应该选择 references；任何其他时候，请采用 pointers）")]),t._v(" "),a("li",[t._v("最好使用 C++ 转型操作符（"),a("code",[t._v("static_cast")]),t._v("、"),a("code",[t._v("const_cast")]),t._v("、"),a("code",[t._v("dynamic_cast")]),t._v("、"),a("code",[t._v("reinterpret_cast")]),t._v("）")]),t._v(" "),a("li",[t._v("绝不要以多态（polymorphically）方式处理数组（多态（polymorphism）和指针算术不能混用；数组对象几乎总是会涉及指针的算术运算，所以数组和多态不要混用）")]),t._v(" "),a("li",[t._v("非必要不提供 default constructor（避免对象中的字段被无意义地初始化）")]),t._v(" "),a("li",[t._v("对定制的 “类型转换函数” 保持警觉（单自变量 constructors 可通过简易法（explicit 关键字）或代理类（proxy classes）来避免编译器误用；隐式类型转换操作符可改为显式的 member function 来避免非预期行为）")]),t._v(" "),a("li",[t._v("区别 increment/decrement 操作符的前置（prefix）和后置（postfix）形式（前置式累加后取出，返回一个 reference；后置式取出后累加，返回一个 const 对象；处理用户定制类型时，应该尽可能使用前置式 increment；后置式的实现应以其前置式兄弟为基础）")]),t._v(" "),a("li",[t._v("千万不要重载 "),a("code",[t._v("&&")]),t._v("，"),a("code",[t._v("||")]),t._v(" 和 "),a("code",[t._v(",")]),t._v(" 操作符（"),a("code",[t._v("&&")]),t._v(" 与 "),a("code",[t._v("||")]),t._v(" 的重载会用 “函数调用语义” 取代 “骤死式语义”；"),a("code",[t._v(",")]),t._v(" 的重载导致不能保证左侧表达式一定比右侧表达式更早被评估）")]),t._v(" "),a("li",[t._v("了解各种不同意义的 new 和 delete（"),a("code",[t._v("new operator")]),t._v("、"),a("code",[t._v("operator new")]),t._v("、"),a("code",[t._v("placement new")]),t._v("、"),a("code",[t._v("operator new[]")]),t._v("；"),a("code",[t._v("delete operator")]),t._v("、"),a("code",[t._v("operator delete")]),t._v("、"),a("code",[t._v("destructor")]),t._v("、"),a("code",[t._v("operator delete[]")]),t._v("）")]),t._v(" "),a("li",[t._v("利用 destructors 避免泄漏资源（在 destructors 释放资源可以避免异常时的资源泄漏）")]),t._v(" "),a("li",[t._v("在 constructors 内阻止资源泄漏（由于 C++ 只会析构已构造完成的对象，因此在构造函数可以使用 try...catch 或者 auto_ptr（以及与之相似的 classes） 处理异常时资源泄露问题）")]),t._v(" "),a("li",[t._v("禁止异常流出 destructors 之外（原因：一、避免 terminate 函数在 exception 传播过程的栈展开（stack-unwinding）机制种被调用；二、协助确保 destructors 完成其应该完成的所有事情）")]),t._v(" "),a("li",[t._v("了解 “抛出一个 exception” 与 “传递一个参数” 或 “调用一个虚函数” 之间的差异（第一，exception objects 总是会被复制（by pointer 除外），如果以 by value 方式捕捉甚至被复制两次，而传递给函数参数的对象则不一定得复制；第二，“被抛出成为 exceptions” 的对象，其被允许的类型转换动作比 “被传递到函数去” 的对象少；第三，catch 子句以其 “出现于源代码的顺序” 被编译器检验对比，其中第一个匹配成功者便执行，而调用一个虚函数，被选中执行的是那个 “与对象类型最佳吻合” 的函数）")]),t._v(" "),a("li",[t._v("以 by reference 方式捕获 exceptions（可避免对象删除问题、exception objects 的切割问题，可保留捕捉标准 exceptions 的能力，可约束 exception object 需要复制的次数）")]),t._v(" "),a("li",[t._v("明智运用 exception specifications（exception specifications 对 “函数希望抛出什么样的 exceptions” 提供了卓越的说明；也有一些缺点，包括编译器只对它们做局部性检验而很容易不经意地违反，与可能会妨碍更上层的 exception 处理函数处理未预期的 exceptions）")]),t._v(" "),a("li",[t._v("了解异常处理的成本（粗略估计，如果使用 try 语句块，代码大约整体膨胀 5%-10%，执行速度亦大约下降这个数；因此请将你对 try 语句块和 exception specifications 的使用限制于非用不可的地点，并且在真正异常的情况下才抛出 exceptions）")]),t._v(" "),a("li",[t._v("谨记 80-20 法则（软件的整体性能几乎总是由其构成要素（代码）的一小部分决定的，可使用程序分析器（program profiler）识别出消耗资源的代码）")]),t._v(" "),a("li",[t._v("考虑使用 lazy evaluation（缓式评估）（可应用于：Reference Counting（引用计数）来避免非必要的对象复制、区分 operator[] 的读和写动作来做不同的事情、Lazy Fetching（缓式取出）来避免非必要的数据库读取动作、Lazy Expression Evaluation（表达式缓评估）来避免非必要的数值计算动作）")]),t._v(" "),a("li",[t._v("分期摊还预期的计算成本（当你必须支持某些运算而其结构几乎总是被需要，或其结果常常被多次需要的时候，over-eager evaluation（超急评估）可以改善程序效率）")])]),t._v(" "),a("h3",{attrs:{id:"google-c-style-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-c-style-guide"}},[t._v("#")]),t._v(" Google C++ Style Guide")]),t._v(" "),a("ul",[a("li",[t._v("英文："),a("a",{attrs:{href:"https://google.github.io/styleguide/cppguide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google C++ Style Guide"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("中文："),a("a",{attrs:{href:"https://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 风格指南"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.stroustrup.com/bs_faq.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bjarne Stroustrup 的常见问题"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.stroustrup.com/bs_faq2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bjarne Stroustrup 的 C++ 风格和技巧常见问题"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{id:"stl"}})]),t._v(" "),a("h2",{attrs:{id:"📦-stl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📦-stl"}},[t._v("#")]),t._v(" 📦 STL")]),t._v(" "),a("h3",{attrs:{id:"stl-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stl-索引"}},[t._v("#")]),t._v(" STL 索引")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL",target:"_blank",rel:"noopener noreferrer"}},[t._v("STL 方法含义索引"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"stl-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stl-容器"}},[t._v("#")]),t._v(" STL 容器")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("容器")]),t._v(" "),a("th",[t._v("底层数据结构")]),t._v(" "),a("th",[t._v("时间复杂度")]),t._v(" "),a("th",[t._v("有无序")]),t._v(" "),a("th",[t._v("可不可重复")]),t._v(" "),a("th",[t._v("其他")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#array",target:"_blank",rel:"noopener noreferrer"}},[t._v("array"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("数组")]),t._v(" "),a("td",[t._v("随机读改 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("支持随机访问")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#vector",target:"_blank",rel:"noopener noreferrer"}},[t._v("vector"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("数组")]),t._v(" "),a("td",[t._v("随机读改、尾部插入、尾部删除 O(1)"),a("br"),t._v("头部插入、头部删除 O(n)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("支持随机访问")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#deque",target:"_blank",rel:"noopener noreferrer"}},[t._v("deque"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("双端队列")]),t._v(" "),a("td",[t._v("头尾插入、头尾删除 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("一个中央控制器 + 多个缓冲区，支持首尾快速增删，支持随机访问")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#forward_list",target:"_blank",rel:"noopener noreferrer"}},[t._v("forward_list"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("单向链表")]),t._v(" "),a("td",[t._v("插入、删除 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("不支持随机访问")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#list",target:"_blank",rel:"noopener noreferrer"}},[t._v("list"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("双向链表")]),t._v(" "),a("td",[t._v("插入、删除 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("不支持随机访问")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#stack",target:"_blank",rel:"noopener noreferrer"}},[t._v("stack"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("deque / list")]),t._v(" "),a("td",[t._v("顶部插入、顶部删除 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#queue",target:"_blank",rel:"noopener noreferrer"}},[t._v("queue"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("deque / list")]),t._v(" "),a("td",[t._v("尾部插入、头部删除 O(1)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#priority_queue",target:"_blank",rel:"noopener noreferrer"}},[t._v("priority_queue"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("vector + max-heap")]),t._v(" "),a("td",[t._v("插入、删除 O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("vector容器+heap处理规则")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#set",target:"_blank",rel:"noopener noreferrer"}},[t._v("set"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("红黑树")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("不可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#multiset",target:"_blank",rel:"noopener noreferrer"}},[t._v("multiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("红黑树")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#map",target:"_blank",rel:"noopener noreferrer"}},[t._v("map"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("红黑树")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("不可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#multimap",target:"_blank",rel:"noopener noreferrer"}},[t._v("multimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("红黑树")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#unordered_set",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_set"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("哈希表")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(1) 最差 O(n)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("不可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#unordered_multiset",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_multiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("哈希表")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(1) 最差 O(n)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#unordered_map",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_map"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("哈希表")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(1) 最差 O(n)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("不可重复")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/STL#unordered_multimap",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_multimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("哈希表")]),t._v(" "),a("td",[t._v("插入、删除、查找 O(1) 最差 O(n)")]),t._v(" "),a("td",[t._v("无序")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"stl-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stl-算法"}},[t._v("#")]),t._v(" STL 算法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("算法")]),t._v(" "),a("th",[t._v("底层算法")]),t._v(" "),a("th",[t._v("时间复杂度")]),t._v(" "),a("th",[t._v("可不可重复")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"http://www.cplusplus.com/reference/algorithm/find/",target:"_blank",rel:"noopener noreferrer"}},[t._v("find"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("顺序查找")]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("可重复")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/gcc-mirror/gcc/blob/master/libstdc++-v3/include/bits/stl_algo.h#L4808",target:"_blank",rel:"noopener noreferrer"}},[t._v("sort"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Introsort",target:"_blank",rel:"noopener noreferrer"}},[t._v("内省排序"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("可重复")])])])]),t._v(" "),a("p",[a("a",{attrs:{id:"data-structure"}})]),t._v(" "),a("h2",{attrs:{id:"〽️-数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#〽️-数据结构"}},[t._v("#")]),t._v(" 〽️ 数据结构")]),t._v(" "),a("h3",{attrs:{id:"顺序结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序结构"}},[t._v("#")]),t._v(" 顺序结构")]),t._v(" "),a("h4",{attrs:{id:"顺序栈（sequence-stack）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序栈（sequence-stack）"}},[t._v("#")]),t._v(" 顺序栈（Sequence Stack）")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/SqStack.cpp"}},[t._v("SqStack.cpp")])]),t._v(" "),a("p",[t._v("顺序栈数据结构和图片")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tElemType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" increment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" SqStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/SqStack.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"队列（sequence-queue）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列（sequence-queue）"}},[t._v("#")]),t._v(" 队列（Sequence Queue）")]),t._v(" "),a("p",[t._v("队列数据结构")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tElemType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" front"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("SqQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h5",{attrs:{id:"非循环队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非循环队列"}},[t._v("#")]),t._v(" 非循环队列")]),t._v(" "),a("p",[t._v("非循环队列图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/SqQueue.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("SqQueue.rear++")])]),t._v(" "),a("h5",{attrs:{id:"循环队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环队列"}},[t._v("#")]),t._v(" 循环队列")]),t._v(" "),a("p",[t._v("循环队列图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/SqLoopStack.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("SqQueue.rear = (SqQueue.rear + 1) % SqQueue.maxSize")])]),t._v(" "),a("h4",{attrs:{id:"顺序表（sequence-list）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序表（sequence-list）"}},[t._v("#")]),t._v(" 顺序表（Sequence List）")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/SqList.cpp"}},[t._v("SqList.cpp")])]),t._v(" "),a("p",[t._v("顺序表数据结构和图片")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tElemType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" increment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" SqList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/SqList.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"链式结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链式结构"}},[t._v("#")]),t._v(" 链式结构")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/LinkList.cpp"}},[t._v("LinkList.cpp")])]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/LinkList_with_head.cpp"}},[t._v("LinkList_with_head.cpp")])]),t._v(" "),a("p",[t._v("链式数据结构")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ElemType data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" LNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("LinkList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"链队列（link-queue）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链队列（link-queue）"}},[t._v("#")]),t._v(" 链队列（Link Queue）")]),t._v(" "),a("p",[t._v("链队列图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/LinkQueue.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"线性表的链式表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性表的链式表示"}},[t._v("#")]),t._v(" 线性表的链式表示")]),t._v(" "),a("h5",{attrs:{id:"单链表（link-list）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单链表（link-list）"}},[t._v("#")]),t._v(" 单链表（Link List）")]),t._v(" "),a("p",[t._v("单链表图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/LinkList.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"双向链表（du-link-list）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双向链表（du-link-list）"}},[t._v("#")]),t._v(" 双向链表（Du-Link-List）")]),t._v(" "),a("p",[t._v("双向链表图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/DuLinkList.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"循环链表（cir-link-list）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环链表（cir-link-list）"}},[t._v("#")]),t._v(" 循环链表（Cir-Link-List）")]),t._v(" "),a("p",[t._v("循环链表图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/CirLinkList.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"哈希表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哈希表"}},[t._v("#")]),t._v(" 哈希表")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/HashTable.cpp"}},[t._v("HashTable.cpp")])]),t._v(" "),a("h4",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("哈希函数："),a("code",[t._v("H(key): K -> D , key ∈ K")])]),t._v(" "),a("h4",{attrs:{id:"构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),a("ul",[a("li",[t._v("直接定址法")]),t._v(" "),a("li",[t._v("除留余数法")]),t._v(" "),a("li",[t._v("数字分析法")]),t._v(" "),a("li",[t._v("折叠法")]),t._v(" "),a("li",[t._v("平方取中法")])]),t._v(" "),a("h4",{attrs:{id:"冲突处理方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#冲突处理方法"}},[t._v("#")]),t._v(" 冲突处理方法")]),t._v(" "),a("ul",[a("li",[t._v("链地址法：key 相同的用单链表链接")]),t._v(" "),a("li",[t._v("开放定址法\n"),a("ul",[a("li",[t._v("线性探测法：key 相同 -> 放到 key 的下一个位置，"),a("code",[t._v("Hi = (H(key) + i) % m")])]),t._v(" "),a("li",[t._v("二次探测法：key 相同 -> 放到 "),a("code",[t._v("Di = 1^2, -1^2, ..., ±（k)^2,(k<=m/2）")])]),t._v(" "),a("li",[t._v("随机探测法："),a("code",[t._v("H = (H(key) + 伪随机数) % m")])])])])]),t._v(" "),a("h4",{attrs:{id:"线性探测的哈希表数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性探测的哈希表数据结构"}},[t._v("#")]),t._v(" 线性探测的哈希表数据结构")]),t._v(" "),a("p",[t._v("线性探测的哈希表数据结构和图片")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" KeyType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tKeyType key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("RcdType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tRcdType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rcd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("HashTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/HashTable.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),a("h4",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("函数直接或间接地调用自身")]),t._v(" "),a("h4",{attrs:{id:"递归与分治"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归与分治"}},[t._v("#")]),t._v(" 递归与分治")]),t._v(" "),a("ul",[a("li",[t._v("分治法\n"),a("ul",[a("li",[t._v("问题的分解")]),t._v(" "),a("li",[t._v("问题规模的分解")])])]),t._v(" "),a("li",[t._v("折半查找（递归）")]),t._v(" "),a("li",[t._v("归并排序（递归）")]),t._v(" "),a("li",[t._v("快速排序（递归）")])]),t._v(" "),a("h4",{attrs:{id:"递归与迭代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归与迭代"}},[t._v("#")]),t._v(" 递归与迭代")]),t._v(" "),a("ul",[a("li",[t._v("迭代：反复利用变量旧值推出新值")]),t._v(" "),a("li",[t._v("折半查找（迭代）")]),t._v(" "),a("li",[t._v("归并排序（迭代）")])]),t._v(" "),a("h4",{attrs:{id:"广义表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广义表"}},[t._v("#")]),t._v(" 广义表")]),t._v(" "),a("h5",{attrs:{id:"头尾链表存储表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头尾链表存储表示"}},[t._v("#")]),t._v(" 头尾链表存储表示")]),t._v(" "),a("p",[t._v("广义表的头尾链表存储表示和图片")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 广义表的头尾链表存储表示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ATOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ElemTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ATOM==0：原子，LIST==1：子表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GLNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ElemTag tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 公共部分，用于区分原子结点和表结点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原子结点和表结点的联合部分")]),t._v("\n        AtomType atom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// atom 是原子结点的值域，AtomType 由用户定义")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GLNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("hp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ptr 是表结点的指针域，prt.hp 和 ptr.tp 分别指向表头和表尾")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("GList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GLNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/GeneralizedList1.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"扩展线性链表存储表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展线性链表存储表示"}},[t._v("#")]),t._v(" 扩展线性链表存储表示")]),t._v(" "),a("p",[t._v("扩展线性链表存储表示和图片")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 广义表的扩展线性链表存储表示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ATOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ElemTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ATOM==0：原子，LIST==1：子表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GLNode1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ElemTag tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 公共部分，用于区分原子结点和表结点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原子结点和表结点的联合部分")]),t._v("\n        AtomType atom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原子结点的值域")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GLNode1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("hp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表结点的表头指针")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GLNode1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于线性链表的 next，指向下一个元素结点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("GList1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GLNode1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/GeneralizedList2.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/BinaryTree.cpp"}},[t._v("BinaryTree.cpp")])]),t._v(" "),a("h4",{attrs:{id:"性质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性质"}},[t._v("#")]),t._v(" 性质")]),t._v(" "),a("ol",[a("li",[t._v("非空二叉树第 i 层最多 2"),a("sup",[t._v("(i-1)")]),t._v(" 个结点 （i >= 1）")]),t._v(" "),a("li",[t._v("深度为 k 的二叉树最多 2"),a("sup",[t._v("k")]),t._v(" - 1 个结点 （k >= 1）")]),t._v(" "),a("li",[t._v("度为 0 的结点数为 n"),a("sub",[t._v("0")]),t._v("，度为 2 的结点数为 n"),a("sub",[t._v("2")]),t._v("，则 n"),a("sub",[t._v("0")]),t._v(" = n"),a("sub",[t._v("2")]),t._v(" + 1")]),t._v(" "),a("li",[t._v("有 n 个结点的完全二叉树深度 k = ⌊ log"),a("sub",[t._v("2")]),t._v("(n) ⌋ + 1")]),t._v(" "),a("li",[t._v("对于含 n 个结点的完全二叉树中编号为 i （1 <= i <= n） 的结点\n"),a("ol",[a("li",[t._v("若 i = 1，为根，否则双亲为 ⌊ i / 2 ⌋")]),t._v(" "),a("li",[t._v("若 2i > n，则 i 结点没有左孩子，否则孩子编号为 2i")]),t._v(" "),a("li",[t._v("若 2i + 1 > n，则 i 结点没有右孩子，否则孩子编号为 2i + 1")])])])]),t._v(" "),a("h4",{attrs:{id:"存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储结构"}},[t._v("#")]),t._v(" 存储结构")]),t._v(" "),a("p",[t._v("二叉树数据结构")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BiTNode")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    TElemType data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BiTNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("lchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("BiTNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("BiTree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h5",{attrs:{id:"顺序存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储"}},[t._v("#")]),t._v(" 顺序存储")]),t._v(" "),a("p",[t._v("二叉树顺序存储图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/SqBinaryTree.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"链式存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链式存储"}},[t._v("#")]),t._v(" 链式存储")]),t._v(" "),a("p",[t._v("二叉树链式存储图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/LinkBinaryTree.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"遍历方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方式"}},[t._v("#")]),t._v(" 遍历方式")]),t._v(" "),a("ul",[a("li",[t._v("先序遍历")]),t._v(" "),a("li",[t._v("中序遍历")]),t._v(" "),a("li",[t._v("后续遍历")]),t._v(" "),a("li",[t._v("层次遍历")])]),t._v(" "),a("h4",{attrs:{id:"分类-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类-2"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ul",[a("li",[t._v("满二叉树")]),t._v(" "),a("li",[t._v("完全二叉树（堆）\n"),a("ul",[a("li",[t._v("大顶堆：根 >= 左 && 根 >= 右")]),t._v(" "),a("li",[t._v("小顶堆：根 <= 左 && 根 <= 右")])])]),t._v(" "),a("li",[t._v("二叉查找树（二叉排序树）：左 < 根 < 右")]),t._v(" "),a("li",[t._v("平衡二叉树（AVL树）：| 左子树树高 - 右子树树高 | <= 1")]),t._v(" "),a("li",[t._v("最小失衡树：平衡二叉树插入新结点导致失衡的子树：调整：\n"),a("ul",[a("li",[t._v("LL型：根的左孩子右旋")]),t._v(" "),a("li",[t._v("RR型：根的右孩子左旋")]),t._v(" "),a("li",[t._v("LR型：根的左孩子左旋，再右旋")]),t._v(" "),a("li",[t._v("RL型：右孩子的左子树，先右旋，再左旋")])])])]),t._v(" "),a("h3",{attrs:{id:"其他树及森林"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他树及森林"}},[t._v("#")]),t._v(" 其他树及森林")]),t._v(" "),a("h4",{attrs:{id:"树的存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树的存储结构"}},[t._v("#")]),t._v(" 树的存储结构")]),t._v(" "),a("ul",[a("li",[t._v("双亲表示法")]),t._v(" "),a("li",[t._v("双亲孩子表示法")]),t._v(" "),a("li",[t._v("孩子兄弟表示法")])]),t._v(" "),a("h4",{attrs:{id:"并查集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并查集"}},[t._v("#")]),t._v(" 并查集")]),t._v(" "),a("p",[t._v("一种不相交的子集所构成的集合 S = {S1, S2, ..., Sn}")]),t._v(" "),a("h4",{attrs:{id:"平衡二叉树（avl树）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树（avl树）"}},[t._v("#")]),t._v(" 平衡二叉树（AVL树）")]),t._v(" "),a("h5",{attrs:{id:"性质-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性质-2"}},[t._v("#")]),t._v(" 性质")]),t._v(" "),a("ul",[a("li",[t._v("| 左子树树高 - 右子树树高 | <= 1")]),t._v(" "),a("li",[t._v("平衡二叉树必定是二叉搜索树，反之则不一定")]),t._v(" "),a("li",[t._v("最小二叉平衡树的节点的公式："),a("code",[t._v("F(n)=F(n-1)+F(n-2)+1")]),t._v(" （1 是根节点，F(n-1) 是左子树的节点数量，F(n-2) 是右子树的节点数量）")])]),t._v(" "),a("p",[t._v("平衡二叉树图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/Self-balancingBinarySearchTree.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"最小失衡树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小失衡树"}},[t._v("#")]),t._v(" 最小失衡树")]),t._v(" "),a("p",[t._v("平衡二叉树插入新结点导致失衡的子树")]),t._v(" "),a("p",[t._v("调整：")]),t._v(" "),a("ul",[a("li",[t._v("LL 型：根的左孩子右旋")]),t._v(" "),a("li",[t._v("RR 型：根的右孩子左旋")]),t._v(" "),a("li",[t._v("LR 型：根的左孩子左旋，再右旋")]),t._v(" "),a("li",[t._v("RL 型：右孩子的左子树，先右旋，再左旋")])]),t._v(" "),a("h4",{attrs:{id:"红黑树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[t._v("#")]),t._v(" 红黑树")]),t._v(" "),a("p",[a("a",{attrs:{href:"DataStructure/RedBlackTree.cpp"}},[t._v("RedBlackTree.cpp")])]),t._v(" "),a("h5",{attrs:{id:"红黑树的特征是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#红黑树的特征是什么？"}},[t._v("#")]),t._v(" 红黑树的特征是什么？")]),t._v(" "),a("ol",[a("li",[t._v("节点是红色或黑色。")]),t._v(" "),a("li",[t._v("根是黑色。")]),t._v(" "),a("li",[t._v("所有叶子都是黑色（叶子是 NIL 节点）。")]),t._v(" "),a("li",[t._v("每个红色节点必须有两个黑色的子节点。（从每个叶子到根的所有路径上不能有两个连续的红色节点。）（新增节点的父节点必须相同）")]),t._v(" "),a("li",[t._v("从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点。（新增节点必须为红）")])]),t._v(" "),a("h5",{attrs:{id:"调整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整"}},[t._v("#")]),t._v(" 调整")]),t._v(" "),a("ol",[a("li",[t._v("变色")]),t._v(" "),a("li",[t._v("左旋")]),t._v(" "),a("li",[t._v("右旋")])]),t._v(" "),a("h5",{attrs:{id:"应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),a("ul",[a("li",[t._v("关联数组：如 STL 中的 map、set")])]),t._v(" "),a("h5",{attrs:{id:"红黑树、b-树、b-树的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#红黑树、b-树、b-树的区别？"}},[t._v("#")]),t._v(" 红黑树、B 树、B+ 树的区别？")]),t._v(" "),a("ul",[a("li",[t._v("红黑树的深度比较大，而 B 树和 B+ 树的深度则相对要小一些")]),t._v(" "),a("li",[t._v("B+ 树则将数据都保存在叶子节点，同时通过链表的形式将他们连接在一起。")])]),t._v(" "),a("h4",{attrs:{id:"b-树（b-tree）、b-树（b-tree）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-树（b-tree）、b-树（b-tree）"}},[t._v("#")]),t._v(" B 树（B-tree）、B+ 树（B+-tree）")]),t._v(" "),a("p",[t._v("B 树、B+ 树图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.stack.imgur.com/l6UyF.png",alt:"B 树（B-tree）、B+ 树（B+-tree）"}})]),t._v(" "),a("h5",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("一般化的二叉查找树（binary search tree）")]),t._v(" "),a("li",[t._v("“矮胖”，内部（非叶子）节点可以拥有可变数量的子节点（数量范围预先定义好）")])]),t._v(" "),a("h5",{attrs:{id:"应用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用-2"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),a("ul",[a("li",[t._v("大部分文件系统、数据库系统都采用B树、B+树作为索引结构")])]),t._v(" "),a("h5",{attrs:{id:"区别-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别-2"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("ul",[a("li",[t._v("B+树中只有叶子节点会带有指向记录的指针（ROWID），而B树则所有节点都带有，在内部节点出现的索引项不会再出现在叶子节点中。")]),t._v(" "),a("li",[t._v("B+树中所有叶子节点都是通过指针连接在一起，而B树不会。")])]),t._v(" "),a("h5",{attrs:{id:"b树的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b树的优点"}},[t._v("#")]),t._v(" B树的优点")]),t._v(" "),a("p",[t._v("对于在内部节点的数据，可直接得到，不必根据叶子节点来定位。")]),t._v(" "),a("h5",{attrs:{id:"b-树的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-树的优点"}},[t._v("#")]),t._v(" B+树的优点")]),t._v(" "),a("ul",[a("li",[t._v("非叶子节点不会带上 ROWID，这样，一个块中可以容纳更多的索引项，一是可以降低树的高度。二是一个内部节点可以定位更多的叶子节点。")]),t._v(" "),a("li",[t._v("叶子节点之间通过指针来连接，范围扫描将十分简单，而对于B树来说，则需要在叶子节点和内部节点不停的往返移动。")])]),t._v(" "),a("blockquote",[a("p",[t._v("B 树、B+ 树区别来自："),a("a",{attrs:{href:"https://stackoverflow.com/questions/870218/differences-between-b-trees-and-b-trees",target:"_blank",rel:"noopener noreferrer"}},[t._v("differences-between-b-trees-and-b-trees"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://www.cnblogs.com/ivictor/p/5849061.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("B树和B+树的区别"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"八叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八叉树"}},[t._v("#")]),t._v(" 八叉树")]),t._v(" "),a("p",[t._v("八叉树图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Octree2.png/400px-Octree2.png",alt:""}})]),t._v(" "),a("p",[t._v("八叉树（octree），或称八元树，是一种用于描述三维空间（划分空间）的树状数据结构。八叉树的每个节点表示一个正方体的体积元素，每个节点有八个子节点，这八个子节点所表示的体积元素加在一起就等于父节点的体积。一般中心点作为节点的分叉中心。")]),t._v(" "),a("h5",{attrs:{id:"用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ul",[a("li",[t._v("三维计算机图形")]),t._v(" "),a("li",[t._v("最邻近搜索")])]),t._v(" "),a("p",[a("a",{attrs:{id:"algorithm"}})]),t._v(" "),a("h2",{attrs:{id:"⚡️-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#⚡️-算法"}},[t._v("#")]),t._v(" ⚡️ 算法")]),t._v(" "),a("h3",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("排序算法")]),t._v(" "),a("th",[t._v("平均时间复杂度")]),t._v(" "),a("th",[t._v("最差时间复杂度")]),t._v(" "),a("th",[t._v("空间复杂度")]),t._v(" "),a("th",[t._v("数据对象稳定性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/BubbleSort.h"}},[t._v("冒泡排序")])]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/SelectionSort.h"}},[t._v("选择排序")])]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("数组不稳定、链表稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/InsertSort.h"}},[t._v("插入排序")])]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/QuickSort.h"}},[t._v("快速排序")])]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("不稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/HeapSort.cpp"}},[t._v("堆排序")])]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("不稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/MergeSort.h"}},[t._v("归并排序")])]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(n*log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/ShellSort.h"}},[t._v("希尔排序")])]),t._v(" "),a("td",[t._v("O(n*log"),a("sup",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("不稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/CountSort.cpp"}},[t._v("计数排序")])]),t._v(" "),a("td",[t._v("O(n+m)")]),t._v(" "),a("td",[t._v("O(n+m)")]),t._v(" "),a("td",[t._v("O(n+m)")]),t._v(" "),a("td",[t._v("稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/BucketSort.cpp"}},[t._v("桶排序")])]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("O(m)")]),t._v(" "),a("td",[t._v("稳定")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/RadixSort.h"}},[t._v("基数排序")])]),t._v(" "),a("td",[t._v("O(k*n)")]),t._v(" "),a("td",[t._v("O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("稳定")])])])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("均按从小到大排列")]),t._v(" "),a("li",[t._v("k：代表数值中的 “数位” 个数")]),t._v(" "),a("li",[t._v("n：代表数据规模")]),t._v(" "),a("li",[t._v("m：代表数据的最大值减最小值")]),t._v(" "),a("li",[t._v("来自："),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("wikipedia . 排序算法"),a("OutboundLink")],1)])])]),t._v(" "),a("h3",{attrs:{id:"查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[t._v("#")]),t._v(" 查找")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("查找算法")]),t._v(" "),a("th",[t._v("平均时间复杂度")]),t._v(" "),a("th",[t._v("空间复杂度")]),t._v(" "),a("th",[t._v("查找条件")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/SequentialSearch.h"}},[t._v("顺序查找")])]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("无序或有序")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/BinarySearch.h"}},[t._v("二分查找（折半查找）")])]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("有序")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/InsertionSearch.h"}},[t._v("插值查找")])]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("(log"),a("sub",[t._v("2")]),t._v("n))")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("有序")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/FibonacciSearch.cpp"}},[t._v("斐波那契查找")])]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("有序")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DataStructure/HashTable.cpp"}},[t._v("哈希查找")])]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("无序或有序")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Algorithm/BSTSearch.h"}},[t._v("二叉查找树（二叉搜索树查找）")])]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DataStructure/RedBlackTree.cpp"}},[t._v("红黑树")])]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("2-3树")]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n - log"),a("sub",[t._v("3")]),t._v("n)")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("B树/B+树")]),t._v(" "),a("td",[t._v("O(log"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"图搜索算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图搜索算法"}},[t._v("#")]),t._v(" 图搜索算法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("图搜索算法")]),t._v(" "),a("th",[t._v("数据结构")]),t._v(" "),a("th",[t._v("遍历时间复杂度")]),t._v(" "),a("th",[t._v("空间复杂度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2",target:"_blank",rel:"noopener noreferrer"}},[t._v("BFS广度优先搜索"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("邻接矩阵"),a("br"),t._v("邻接链表")]),t._v(" "),a("td",[t._v("O(|v|"),a("sup",[t._v("2")]),t._v(")"),a("br"),t._v("O(|v|+|E|)")]),t._v(" "),a("td",[t._v("O(|v|"),a("sup",[t._v("2")]),t._v(")"),a("br"),t._v("O(|v|+|E|)")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2",target:"_blank",rel:"noopener noreferrer"}},[t._v("DFS深度优先搜索"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("邻接矩阵"),a("br"),t._v("邻接链表")]),t._v(" "),a("td",[t._v("O(|v|"),a("sup",[t._v("2")]),t._v(")"),a("br"),t._v("O(|v|+|E|)")]),t._v(" "),a("td",[t._v("O(|v|"),a("sup",[t._v("2")]),t._v(")"),a("br"),t._v("O(|v|+|E|)")])])])]),t._v(" "),a("h3",{attrs:{id:"其他算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他算法"}},[t._v("#")]),t._v(" 其他算法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("算法")]),t._v(" "),a("th",[t._v("思想")]),t._v(" "),a("th",[t._v("应用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%88%86%E6%B2%BB%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("分治法"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/Problems/RoundRobinProblem",target:"_blank",rel:"noopener noreferrer"}},[t._v("循环赛日程安排问题"),a("OutboundLink")],1),t._v("、排序算法（快速排序、归并排序）")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法，适用于有重叠子问题和最优子结构性质的问题")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/huihut/interview/tree/master/Problems/KnapsackProblem",target:"_blank",rel:"noopener noreferrer"}},[t._v("背包问题"),a("OutboundLink")],1),t._v("、斐波那契数列")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B4%AA%E5%BF%83%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("贪心法"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法")]),t._v(" "),a("td",[t._v("旅行推销员问题（最短路径问题）、最小生成树、哈夫曼编码")])])])]),t._v(" "),a("p",[a("a",{attrs:{id:"problems"}})]),t._v(" "),a("h2",{attrs:{id:"❓-problems"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#❓-problems"}},[t._v("#")]),t._v(" ❓ Problems")]),t._v(" "),a("h3",{attrs:{id:"single-problem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#single-problem"}},[t._v("#")]),t._v(" Single Problem")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"Problems/ChessboardCoverageProblem"}},[t._v("Chessboard Coverage Problem（棋盘覆盖问题）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"Problems/KnapsackProblem"}},[t._v("Knapsack Problem（背包问题）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"Problems/NeumannNeighborProblem"}},[t._v("Neumann Neighbor Problem（冯诺依曼邻居问题）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"Problems/RoundRobinProblem"}},[t._v("Round Robin Problem（循环赛日程安排问题）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"Problems/TubingProblem"}},[t._v("Tubing Problem（输油管道问题）")])])]),t._v(" "),a("h3",{attrs:{id:"leetcode-problems"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-problems"}},[t._v("#")]),t._v(" Leetcode Problems")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/haoel/leetcode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . haoel/leetcode"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/pezy/LeetCode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . pezy/LeetCode"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"剑指-offer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer"}},[t._v("#")]),t._v(" 剑指 Offer")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/zhedahht/CodingInterviewChinese2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . zhedahht/CodingInterviewChinese2"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/gatieme/CodingInterviews",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . gatieme/CodingInterviews"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"cracking-the-coding-interview-程序员面试金典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cracking-the-coding-interview-程序员面试金典"}},[t._v("#")]),t._v(" Cracking the Coding Interview 程序员面试金典")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/careercup/ctci",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . careercup/ctci"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/ta/cracking-the-coding-interview",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 程序员面试金典"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"牛客网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#牛客网"}},[t._v("#")]),t._v(" 牛客网")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/activity/oj",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 在线编程专题"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{id:"os"}})]),t._v(" "),a("h2",{attrs:{id:"💻-操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#💻-操作系统"}},[t._v("#")]),t._v(" 💻 操作系统")]),t._v(" "),a("h3",{attrs:{id:"进程与线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),a("p",[t._v("对于有线程系统：")]),t._v(" "),a("ul",[a("li",[t._v("进程是资源分配的独立单位")]),t._v(" "),a("li",[t._v("线程是资源调度的独立单位")])]),t._v(" "),a("p",[t._v("对于无线程系统：")]),t._v(" "),a("ul",[a("li",[t._v("进程是资源调度、分配的独立单位")])]),t._v(" "),a("h4",{attrs:{id:"进程之间的通信方式以及优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程之间的通信方式以及优缺点"}},[t._v("#")]),t._v(" 进程之间的通信方式以及优缺点")]),t._v(" "),a("ul",[a("li",[t._v("管道（PIPE）\n"),a("ul",[a("li",[t._v("有名管道：一种半双工的通信方式，它允许无亲缘关系进程间的通信\n"),a("ul",[a("li",[t._v("优点：可以实现任意关系的进程间的通信")]),t._v(" "),a("li",[t._v("缺点：\n"),a("ol",[a("li",[t._v("长期存于系统中，使用不当容易出错")]),t._v(" "),a("li",[t._v("缓冲区有限")])])])])]),t._v(" "),a("li",[t._v("无名管道：一种半双工的通信方式，只能在具有亲缘关系的进程间使用（父子进程）\n"),a("ul",[a("li",[t._v("优点：简单方便")]),t._v(" "),a("li",[t._v("缺点：\n"),a("ol",[a("li",[t._v("局限于单向通信")]),t._v(" "),a("li",[t._v("只能创建在它的进程以及其有亲缘关系的进程之间")]),t._v(" "),a("li",[t._v("缓冲区有限")])])])])])])]),t._v(" "),a("li",[t._v("信号量（Semaphore）：一个计数器，可以用来控制多个线程对共享资源的访问\n"),a("ul",[a("li",[t._v("优点：可以同步进程")]),t._v(" "),a("li",[t._v("缺点：信号量有限")])])]),t._v(" "),a("li",[t._v("信号（Signal）：一种比较复杂的通信方式，用于通知接收进程某个事件已经发生")]),t._v(" "),a("li",[t._v("消息队列（Message Queue）：是消息的链表，存放在内核中并由消息队列标识符标识\n"),a("ul",[a("li",[t._v("优点：可以实现任意进程间的通信，并通过系统调用函数来实现消息发送和接收之间的同步，无需考虑同步问题，方便")]),t._v(" "),a("li",[t._v("缺点：信息的复制需要额外消耗 CPU 的时间，不适宜于信息量大或操作频繁的场合")])])]),t._v(" "),a("li",[t._v("共享内存（Shared Memory）：映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问\n"),a("ul",[a("li",[t._v("优点：无须复制，快捷，信息量大")]),t._v(" "),a("li",[t._v("缺点：\n"),a("ol",[a("li",[t._v("通信是通过将共享空间缓冲区直接附加到进程的虚拟地址空间中来实现的，因此进程间的读写操作的同步问题")]),t._v(" "),a("li",[t._v("利用内存缓冲区直接交换信息，内存的实体存在于计算机中，只能同一个计算机系统中的诸多进程共享，不方便网络通信")])])])])]),t._v(" "),a("li",[t._v("套接字（Socket）：可用于不同计算机间的进程通信\n"),a("ul",[a("li",[t._v("优点：\n"),a("ol",[a("li",[t._v("传输数据为字节级，传输数据可自定义，数据量小效率高")]),t._v(" "),a("li",[t._v("传输数据时间短，性能高")]),t._v(" "),a("li",[t._v("适合于客户端和服务器端之间信息实时交互")]),t._v(" "),a("li",[t._v("可以加密,数据安全性强")])])]),t._v(" "),a("li",[t._v("缺点：需对传输的数据进行解析，转化成应用级的数据。")])])])]),t._v(" "),a("h4",{attrs:{id:"线程之间的通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程之间的通信方式"}},[t._v("#")]),t._v(" 线程之间的通信方式")]),t._v(" "),a("ul",[a("li",[t._v("锁机制：包括互斥锁/量（mutex）、读写锁（reader-writer lock）、自旋锁（spin lock）、条件变量（condition）\n"),a("ul",[a("li",[t._v("互斥锁/量（mutex）：提供了以排他方式防止数据结构被并发修改的方法。")]),t._v(" "),a("li",[t._v("读写锁（reader-writer lock）：允许多个线程同时读共享数据，而对写操作是互斥的。")]),t._v(" "),a("li",[t._v("自旋锁（spin lock）与互斥锁类似，都是为了保护共享资源。互斥锁是当资源被占用，申请者进入睡眠状态；而自旋锁则循环检测保持者是否已经释放锁。")]),t._v(" "),a("li",[t._v("条件变量（condition）：可以以原子的方式阻塞进程，直到某个特定条件为真为止。对条件的测试是在互斥锁的保护下进行的。条件变量始终与互斥锁一起使用。")])])]),t._v(" "),a("li",[t._v("信号量机制(Semaphore)\n"),a("ul",[a("li",[t._v("无名线程信号量")]),t._v(" "),a("li",[t._v("命名线程信号量")])])]),t._v(" "),a("li",[t._v("信号机制(Signal)：类似进程间的信号处理")]),t._v(" "),a("li",[t._v("屏障（barrier）：屏障允许每个线程等待，直到所有的合作线程都达到某一点，然后从该点继续执行。")])]),t._v(" "),a("p",[t._v("线程间的通信目的主要是用于线程同步，所以线程没有像进程通信中的用于数据交换的通信机制")]),t._v(" "),a("blockquote",[a("p",[t._v("进程之间的通信方式以及优缺点来源于："),a("a",{attrs:{href:"http://blog.csdn.net/wujiafei_njgcxy/article/details/77098977",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程线程面试题总结"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"进程之间私有和共享的资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程之间私有和共享的资源"}},[t._v("#")]),t._v(" 进程之间私有和共享的资源")]),t._v(" "),a("ul",[a("li",[t._v("私有：地址空间、堆、全局变量、栈、寄存器")]),t._v(" "),a("li",[t._v("共享：代码段，公共数据，进程目录，进程 ID")])]),t._v(" "),a("h4",{attrs:{id:"线程之间私有和共享的资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程之间私有和共享的资源"}},[t._v("#")]),t._v(" 线程之间私有和共享的资源")]),t._v(" "),a("ul",[a("li",[t._v("私有：线程栈，寄存器，程序计数器")]),t._v(" "),a("li",[t._v("共享：堆，地址空间，全局变量，静态变量")])]),t._v(" "),a("h4",{attrs:{id:"多进程与多线程间的对比、优劣与选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程与多线程间的对比、优劣与选择"}},[t._v("#")]),t._v(" 多进程与多线程间的对比、优劣与选择")]),t._v(" "),a("h5",{attrs:{id:"对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("对比维度")]),t._v(" "),a("th",[t._v("多进程")]),t._v(" "),a("th",[t._v("多线程")]),t._v(" "),a("th",[t._v("总结")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("数据共享、同步")]),t._v(" "),a("td",[t._v("数据共享复杂，需要用 IPC；数据是分开的，同步简单")]),t._v(" "),a("td",[t._v("因为共享进程数据，数据共享简单，但也是因为这个原因导致同步复杂")]),t._v(" "),a("td",[t._v("各有优势")])]),t._v(" "),a("tr",[a("td",[t._v("内存、CPU")]),t._v(" "),a("td",[t._v("占用内存多，切换复杂，CPU 利用率低")]),t._v(" "),a("td",[t._v("占用内存少，切换简单，CPU 利用率高")]),t._v(" "),a("td",[t._v("线程占优")])]),t._v(" "),a("tr",[a("td",[t._v("创建销毁、切换")]),t._v(" "),a("td",[t._v("创建销毁、切换复杂，速度慢")]),t._v(" "),a("td",[t._v("创建销毁、切换简单，速度很快")]),t._v(" "),a("td",[t._v("线程占优")])]),t._v(" "),a("tr",[a("td",[t._v("编程、调试")]),t._v(" "),a("td",[t._v("编程简单，调试简单")]),t._v(" "),a("td",[t._v("编程复杂，调试复杂")]),t._v(" "),a("td",[t._v("进程占优")])]),t._v(" "),a("tr",[a("td",[t._v("可靠性")]),t._v(" "),a("td",[t._v("进程间不会互相影响")]),t._v(" "),a("td",[t._v("一个线程挂掉将导致整个进程挂掉")]),t._v(" "),a("td",[t._v("进程占优")])]),t._v(" "),a("tr",[a("td",[t._v("分布式")]),t._v(" "),a("td",[t._v("适应于多核、多机分布式；如果一台机器不够，扩展到多台机器比较简单")]),t._v(" "),a("td",[t._v("适应于多核分布式")]),t._v(" "),a("td",[t._v("进程占优")])])])]),t._v(" "),a("h5",{attrs:{id:"优劣"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优劣"}},[t._v("#")]),t._v(" 优劣")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("优劣")]),t._v(" "),a("th",[t._v("多进程")]),t._v(" "),a("th",[t._v("多线程")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("优点")]),t._v(" "),a("td",[t._v("编程、调试简单，可靠性较高")]),t._v(" "),a("td",[t._v("创建、销毁、切换速度快，内存、资源占用小")])]),t._v(" "),a("tr",[a("td",[t._v("缺点")]),t._v(" "),a("td",[t._v("创建、销毁、切换速度慢，内存、资源占用大")]),t._v(" "),a("td",[t._v("编程、调试复杂，可靠性较差")])])])]),t._v(" "),a("h5",{attrs:{id:"选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[t._v("#")]),t._v(" 选择")]),t._v(" "),a("ul",[a("li",[t._v("需要频繁创建销毁的优先用线程")]),t._v(" "),a("li",[t._v("需要进行大量计算的优先使用线程")]),t._v(" "),a("li",[t._v("强相关的处理用线程，弱相关的处理用进程")]),t._v(" "),a("li",[t._v("可能要扩展到多机分布的用进程，多核分布的用线程")]),t._v(" "),a("li",[t._v("都满足需求的情况下，用你最熟悉、最拿手的方式")])]),t._v(" "),a("blockquote",[a("p",[t._v("多进程与多线程间的对比、优劣与选择来自："),a("a",{attrs:{href:"https://blog.csdn.net/lishenglong666/article/details/8557215",target:"_blank",rel:"noopener noreferrer"}},[t._v("多线程还是多进程的选择及区别"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"linux-内核的同步方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-内核的同步方式"}},[t._v("#")]),t._v(" Linux 内核的同步方式")]),t._v(" "),a("h4",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("在现代操作系统里，同一时间可能有多个内核执行流在执行，因此内核其实像多进程多线程编程一样也需要一些同步机制来同步各执行单元对共享数据的访问。尤其是在多处理器系统上，更需要一些同步机制来同步不同处理器上的执行单元对共享的数据的访问。")]),t._v(" "),a("h4",{attrs:{id:"同步方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步方式"}},[t._v("#")]),t._v(" 同步方式")]),t._v(" "),a("ul",[a("li",[t._v("原子操作")]),t._v(" "),a("li",[t._v("信号量（semaphore）")]),t._v(" "),a("li",[t._v("读写信号量（rw_semaphore）")]),t._v(" "),a("li",[t._v("自旋锁（spinlock）")]),t._v(" "),a("li",[t._v("大内核锁（BKL，Big Kernel Lock）")]),t._v(" "),a("li",[t._v("读写锁（rwlock）")]),t._v(" "),a("li",[t._v("大读者锁（brlock-Big Reader Lock）")]),t._v(" "),a("li",[t._v("读-拷贝修改(RCU，Read-Copy Update)")]),t._v(" "),a("li",[t._v("顺序锁（seqlock）")])]),t._v(" "),a("blockquote",[a("p",[t._v("来自："),a("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-synch/part1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux 内核的同步机制，第 1 部分"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/linux/l-synch/part2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux 内核的同步机制，第 2 部分"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"死锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),a("h4",{attrs:{id:"原因-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因-2"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("ul",[a("li",[t._v("系统资源不足")]),t._v(" "),a("li",[t._v("资源分配不当")]),t._v(" "),a("li",[t._v("进程运行推进顺序不合适")])]),t._v(" "),a("h4",{attrs:{id:"产生条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#产生条件"}},[t._v("#")]),t._v(" 产生条件")]),t._v(" "),a("ul",[a("li",[t._v("互斥")]),t._v(" "),a("li",[t._v("请求和保持")]),t._v(" "),a("li",[t._v("不剥夺")]),t._v(" "),a("li",[t._v("环路")])]),t._v(" "),a("h4",{attrs:{id:"预防"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预防"}},[t._v("#")]),t._v(" 预防")]),t._v(" "),a("ul",[a("li",[t._v("打破互斥条件：改造独占性资源为虚拟资源，大部分资源已无法改造。")]),t._v(" "),a("li",[t._v("打破不可抢占条件：当一进程占有一独占性资源后又申请一独占性资源而无法满足，则退出原占有的资源。")]),t._v(" "),a("li",[t._v("打破占有且申请条件：采用资源预先分配策略，即进程运行前申请全部资源，满足则运行，不然就等待，这样就不会占有且申请。")]),t._v(" "),a("li",[t._v("打破循环等待条件：实现资源有序分配策略，对所有设备实现分类编号，所有进程只能采用按序号递增的形式申请资源。")]),t._v(" "),a("li",[t._v("有序资源分配法")]),t._v(" "),a("li",[t._v("银行家算法")])]),t._v(" "),a("h3",{attrs:{id:"文件系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件系统"}},[t._v("#")]),t._v(" 文件系统")]),t._v(" "),a("ul",[a("li",[t._v("Windows：FCB 表 + FAT + 位图")]),t._v(" "),a("li",[t._v("Unix：inode + 混合索引 + 成组链接")])]),t._v(" "),a("h3",{attrs:{id:"主机字节序与网络字节序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机字节序与网络字节序"}},[t._v("#")]),t._v(" 主机字节序与网络字节序")]),t._v(" "),a("h4",{attrs:{id:"主机字节序（cpu-字节序）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机字节序（cpu-字节序）"}},[t._v("#")]),t._v(" 主机字节序（CPU 字节序）")]),t._v(" "),a("h5",{attrs:{id:"概念-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("主机字节序又叫 CPU 字节序，其不是由操作系统决定的，而是由 CPU 指令集架构决定的。主机字节序分为两种：")]),t._v(" "),a("ul",[a("li",[t._v("大端字节序（Big Endian）：高序字节存储在低位地址，低序字节存储在高位地址")]),t._v(" "),a("li",[t._v("小端字节序（Little Endian）：高序字节存储在高位地址，低序字节存储在低位地址")])]),t._v(" "),a("h5",{attrs:{id:"存储方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储方式"}},[t._v("#")]),t._v(" 存储方式")]),t._v(" "),a("p",[t._v("32 位整数 "),a("code",[t._v("0x12345678")]),t._v(" 是从起始位置为 "),a("code",[t._v("0x00")]),t._v(" 的地址开始存放，则：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内存地址")]),t._v(" "),a("th",[t._v("0x00")]),t._v(" "),a("th",[t._v("0x01")]),t._v(" "),a("th",[t._v("0x02")]),t._v(" "),a("th",[t._v("0x03")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("大端")]),t._v(" "),a("td",[t._v("12")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[t._v("56")]),t._v(" "),a("td",[t._v("78")])]),t._v(" "),a("tr",[a("td",[t._v("小端")]),t._v(" "),a("td",[t._v("78")]),t._v(" "),a("td",[t._v("56")]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[t._v("12")])])])]),t._v(" "),a("p",[t._v("大端小端图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/CPU-Big-Endian.svg.png",alt:"大端序"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/CPU-Little-Endian.svg.png",alt:"小端序"}})]),t._v(" "),a("h5",{attrs:{id:"判断大端小端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断大端小端"}},[t._v("#")]),t._v(" 判断大端小端")]),t._v(" "),a("p",[t._v("判断大端小端")]),t._v(" "),a("p",[t._v("可以这样判断自己 CPU 字节序是大端还是小端：")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x12345678")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"大端"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\t\n\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小端"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h5",{attrs:{id:"各架构处理器的字节序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各架构处理器的字节序"}},[t._v("#")]),t._v(" 各架构处理器的字节序")]),t._v(" "),a("ul",[a("li",[t._v("x86（Intel、AMD）、MOS Technology 6502、Z80、VAX、PDP-11 等处理器为小端序；")]),t._v(" "),a("li",[t._v("Motorola 6800、Motorola 68000、PowerPC 970、System/370、SPARC（除 V9 外）等处理器为大端序；")]),t._v(" "),a("li",[t._v("ARM（默认小端序）、PowerPC（除 PowerPC 970 外）、DEC Alpha、SPARC V9、MIPS、PA-RISC 及 IA64 的字节序是可配置的。")])]),t._v(" "),a("h4",{attrs:{id:"网络字节序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络字节序"}},[t._v("#")]),t._v(" 网络字节序")]),t._v(" "),a("p",[t._v("网络字节顺序是 TCP/IP 中规定好的一种数据表示格式，它与具体的 CPU 类型、操作系统等无关，从而可以保证数据在不同主机之间传输时能够被正确解释。")]),t._v(" "),a("p",[t._v("网络字节顺序采用：大端（Big Endian）排列方式。")]),t._v(" "),a("h3",{attrs:{id:"页面置换算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面置换算法"}},[t._v("#")]),t._v(" 页面置换算法")]),t._v(" "),a("p",[t._v("在地址映射过程中，若在页面中发现所要访问的页面不在内存中，则产生缺页中断。当发生缺页中断时，如果操作系统内存中没有空闲页面，则操作系统必须在内存选择一个页面将其移出内存，以便为即将调入的页面让出空间。而用来选择淘汰哪一页的规则叫做页面置换算法。")]),t._v(" "),a("h4",{attrs:{id:"分类-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类-3"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ul",[a("li",[t._v("全局置换：在整个内存空间置换")]),t._v(" "),a("li",[t._v("局部置换：在本进程中进行置换")])]),t._v(" "),a("h4",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("p",[t._v("全局：")]),t._v(" "),a("ul",[a("li",[t._v("工作集算法")]),t._v(" "),a("li",[t._v("缺页率置换算法")])]),t._v(" "),a("p",[t._v("局部：")]),t._v(" "),a("ul",[a("li",[t._v("最佳置换算法（OPT）")]),t._v(" "),a("li",[t._v("先进先出置换算法（FIFO）")]),t._v(" "),a("li",[t._v("最近最久未使用（LRU）算法")]),t._v(" "),a("li",[t._v("时钟（Clock）置换算法")])]),t._v(" "),a("p",[a("a",{attrs:{id:"computer-network"}})]),t._v(" "),a("h2",{attrs:{id:"☁️-计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#☁️-计算机网络"}},[t._v("#")]),t._v(" ☁️ 计算机网络")]),t._v(" "),a("blockquote",[a("p",[t._v("本节部分知识点来自《计算机网络（第 7 版）》")])]),t._v(" "),a("p",[t._v("计算机网络体系结构：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png",alt:"计算机网络体系结构"}})]),t._v(" "),a("h3",{attrs:{id:"各层作用及协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各层作用及协议"}},[t._v("#")]),t._v(" 各层作用及协议")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("分层")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("协议")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("物理层")]),t._v(" "),a("td",[t._v("通过媒介传输比特，确定机械及电气规范（比特 Bit）")]),t._v(" "),a("td",[t._v("RJ45、CLOCK、IEEE802.3（中继器，集线器）")])]),t._v(" "),a("tr",[a("td",[t._v("数据链路层")]),t._v(" "),a("td",[t._v("将比特组装成帧和点到点的传递（帧 Frame）")]),t._v(" "),a("td",[t._v("PPP、FR、HDLC、VLAN、MAC（网桥，交换机）")])]),t._v(" "),a("tr",[a("td",[t._v("网络层")]),t._v(" "),a("td",[t._v("负责数据包从源到宿的传递和网际互连（包 Packet）")]),t._v(" "),a("td",[t._v("IP、ICMP、ARP、RARP、OSPF、IPX、RIP、IGRP（路由器）")])]),t._v(" "),a("tr",[a("td",[t._v("运输层")]),t._v(" "),a("td",[t._v("提供端到端的可靠报文传递和错误恢复（ 段Segment）")]),t._v(" "),a("td",[t._v("TCP、UDP、SPX")])]),t._v(" "),a("tr",[a("td",[t._v("会话层")]),t._v(" "),a("td",[t._v("建立、管理和终止会话（会话协议数据单元 SPDU）")]),t._v(" "),a("td",[t._v("NFS、SQL、NETBIOS、RPC")])]),t._v(" "),a("tr",[a("td",[t._v("表示层")]),t._v(" "),a("td",[t._v("对数据进行翻译、加密和压缩（表示协议数据单元 PPDU）")]),t._v(" "),a("td",[t._v("JPEG、MPEG、ASII")])]),t._v(" "),a("tr",[a("td",[t._v("应用层")]),t._v(" "),a("td",[t._v("允许访问OSI环境的手段（应用协议数据单元 APDU）")]),t._v(" "),a("td",[t._v("FTP、DNS、Telnet、SMTP、HTTP、WWW、NFS")])])])]),t._v(" "),a("h3",{attrs:{id:"物理层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理层"}},[t._v("#")]),t._v(" 物理层")]),t._v(" "),a("ul",[a("li",[t._v("传输数据的单位：比特")]),t._v(" "),a("li",[t._v("数据传输系统：源系统（源点、发送器） --\x3e 传输系统 --\x3e 目的系统（接收器、终点）")])]),t._v(" "),a("p",[t._v("通道：")]),t._v(" "),a("ul",[a("li",[t._v("单向通道（单工通道）：只有一个方向通信，没有反方向交互，如广播")]),t._v(" "),a("li",[t._v("双向交替通信（半双工通信）：通信双方都可发消息，但不能同时发送或接收")]),t._v(" "),a("li",[t._v("双向同时通信（全双工通信）：通信双方可以同时发送和接收信息")])]),t._v(" "),a("p",[t._v("通道复用技术：")]),t._v(" "),a("ul",[a("li",[t._v("频分复用（FDM，Frequency Division Multiplexing）：不同用户在不同频带，所用用户在同样时间占用不同带宽资源")]),t._v(" "),a("li",[t._v("时分复用（TDM，Time Division Multiplexing）：不同用户在同一时间段的不同时间片，所有用户在不同时间占用同样的频带宽度")]),t._v(" "),a("li",[t._v("波分复用（WDM，Wavelength Division Multiplexing）：光的频分复用")]),t._v(" "),a("li",[t._v("码分复用（CDM，Code Division Multiplexing）：不同用户使用不同的码，可以在同样时间使用同样频带通信")])]),t._v(" "),a("h3",{attrs:{id:"数据链路层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[t._v("#")]),t._v(" 数据链路层")]),t._v(" "),a("p",[t._v("主要信道：")]),t._v(" "),a("ul",[a("li",[t._v("点对点信道")]),t._v(" "),a("li",[t._v("广播信道")])]),t._v(" "),a("h4",{attrs:{id:"点对点信道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点对点信道"}},[t._v("#")]),t._v(" 点对点信道")]),t._v(" "),a("ul",[a("li",[t._v("数据单元：帧")])]),t._v(" "),a("p",[t._v("三个基本问题：")]),t._v(" "),a("ul",[a("li",[t._v("封装成帧：把网络层的 IP 数据报封装成帧，"),a("code",[t._v("SOH - 数据部分 - EOT")])]),t._v(" "),a("li",[t._v("透明传输：不管数据部分什么字符，都能传输出去；可以通过字节填充方法解决（冲突字符前加转义字符）")]),t._v(" "),a("li",[t._v("差错检测：降低误码率（BER，Bit Error Rate），广泛使用循环冗余检测（CRC，Cyclic Redundancy Check）")])]),t._v(" "),a("p",[t._v("点对点协议（Point-to-Point Protocol）：")]),t._v(" "),a("ul",[a("li",[t._v("点对点协议（Point-to-Point Protocol）：用户计算机和 ISP 通信时所使用的协议")])]),t._v(" "),a("h4",{attrs:{id:"广播信道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播信道"}},[t._v("#")]),t._v(" 广播信道")]),t._v(" "),a("p",[t._v("广播通信：")]),t._v(" "),a("ul",[a("li",[t._v("硬件地址（物理地址、MAC 地址）")]),t._v(" "),a("li",[t._v("单播（unicast）帧（一对一）：收到的帧的 MAC 地址与本站的硬件地址相同")]),t._v(" "),a("li",[t._v("广播（broadcast）帧（一对全体）：发送给本局域网上所有站点的帧")]),t._v(" "),a("li",[t._v("多播（multicast）帧（一对多）：发送给本局域网上一部分站点的帧")])]),t._v(" "),a("h3",{attrs:{id:"网络层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[t._v("#")]),t._v(" 网络层")]),t._v(" "),a("ul",[a("li",[t._v("IP（Internet Protocol，网际协议）是为计算机网络相互连接进行通信而设计的协议。")]),t._v(" "),a("li",[t._v("ARP（Address Resolution Protocol，地址解析协议）")]),t._v(" "),a("li",[t._v("ICMP（Internet Control Message Protocol，网际控制报文协议）")]),t._v(" "),a("li",[t._v("IGMP（Internet Group Management Protocol，网际组管理协议）")])]),t._v(" "),a("h4",{attrs:{id:"ip-网际协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-网际协议"}},[t._v("#")]),t._v(" IP 网际协议")]),t._v(" "),a("p",[t._v("IP 地址分类：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("IP 地址 ::= {<网络号>,<主机号>}")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("IP 地址类别")]),t._v(" "),a("th",[t._v("网络号")]),t._v(" "),a("th",[t._v("网络范围")]),t._v(" "),a("th",[t._v("主机号")]),t._v(" "),a("th",[t._v("IP 地址范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("A 类")]),t._v(" "),a("td",[t._v("8bit，第一位固定为 0")]),t._v(" "),a("td",[t._v("0 —— 127")]),t._v(" "),a("td",[t._v("24bit")]),t._v(" "),a("td",[t._v("1.0.0.0 —— 127.255.255.255")])]),t._v(" "),a("tr",[a("td",[t._v("B 类")]),t._v(" "),a("td",[t._v("16bit，前两位固定为  10")]),t._v(" "),a("td",[t._v("128.0 —— 191.255")]),t._v(" "),a("td",[t._v("16bit")]),t._v(" "),a("td",[t._v("128.0.0.0 —— 191.255.255.255")])]),t._v(" "),a("tr",[a("td",[t._v("C  类")]),t._v(" "),a("td",[t._v("24bit，前三位固定为  110")]),t._v(" "),a("td",[t._v("192.0.0 —— 223.255.255")]),t._v(" "),a("td",[t._v("8bit")]),t._v(" "),a("td",[t._v("192.0.0.0 —— 223.255.255.255")])]),t._v(" "),a("tr",[a("td",[t._v("D  类")]),t._v(" "),a("td",[t._v("前四位固定为 1110，后面为多播地址")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("E  类")]),t._v(" "),a("td",[t._v("前五位固定为 11110，后面保留为今后所用")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("IP 数据报格式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F.png",alt:"IP 数据报格式"}})]),t._v(" "),a("h4",{attrs:{id:"icmp-网际控制报文协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icmp-网际控制报文协议"}},[t._v("#")]),t._v(" ICMP 网际控制报文协议")]),t._v(" "),a("p",[t._v("ICMP 报文格式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/ICMP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png",alt:"ICMP 报文格式"}})]),t._v(" "),a("p",[t._v("应用：")]),t._v(" "),a("ul",[a("li",[t._v("PING（Packet InterNet Groper，分组网间探测）测试两个主机之间的连通性")]),t._v(" "),a("li",[t._v("TTL（Time To Live，生存时间）该字段指定 IP 包被路由器丢弃之前允许通过的最大网段数量")])]),t._v(" "),a("h4",{attrs:{id:"内部网关协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部网关协议"}},[t._v("#")]),t._v(" 内部网关协议")]),t._v(" "),a("ul",[a("li",[t._v("RIP（Routing Information Protocol，路由信息协议）")]),t._v(" "),a("li",[t._v("OSPF（Open Sortest Path First，开放最短路径优先）")])]),t._v(" "),a("h4",{attrs:{id:"外部网关协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部网关协议"}},[t._v("#")]),t._v(" 外部网关协议")]),t._v(" "),a("ul",[a("li",[t._v("BGP（Border Gateway Protocol，边界网关协议）")])]),t._v(" "),a("h4",{attrs:{id:"ip多播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip多播"}},[t._v("#")]),t._v(" IP多播")]),t._v(" "),a("ul",[a("li",[t._v("IGMP（Internet Group Management Protocol，网际组管理协议）")]),t._v(" "),a("li",[t._v("多播路由选择协议")])]),t._v(" "),a("h4",{attrs:{id:"vpn-和-nat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vpn-和-nat"}},[t._v("#")]),t._v(" VPN 和 NAT")]),t._v(" "),a("ul",[a("li",[t._v("VPN（Virtual Private Network，虚拟专用网）")]),t._v(" "),a("li",[t._v("NAT（Network Address Translation，网络地址转换）")])]),t._v(" "),a("h4",{attrs:{id:"路由表包含什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由表包含什么？"}},[t._v("#")]),t._v(" 路由表包含什么？")]),t._v(" "),a("ol",[a("li",[t._v("网络 ID（Network ID, Network number）：就是目标地址的网络 ID。")]),t._v(" "),a("li",[t._v("子网掩码（subnet mask）：用来判断 IP 所属网络")]),t._v(" "),a("li",[t._v("下一跳地址/接口（Next hop / interface）：就是数据在发送到目标地址的旅途中下一站的地址。其中 interface 指向 next hop（即为下一个 route）。一个自治系统（AS, Autonomous system）中的 route 应该包含区域内所有的子网络，而默认网关（Network id: "),a("code",[t._v("0.0.0.0")]),t._v(", Netmask: "),a("code",[t._v("0.0.0.0")]),t._v("）指向自治系统的出口。")])]),t._v(" "),a("p",[t._v("根据应用和执行的不同，路由表可能含有如下附加信息：")]),t._v(" "),a("ol",[a("li",[t._v("花费（Cost）：就是数据发送过程中通过路径所需要的花费。")]),t._v(" "),a("li",[t._v("路由的服务质量")]),t._v(" "),a("li",[t._v("路由中需要过滤的出/入连接列表")])]),t._v(" "),a("h3",{attrs:{id:"运输层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运输层"}},[t._v("#")]),t._v(" 运输层")]),t._v(" "),a("p",[t._v("协议：")]),t._v(" "),a("ul",[a("li",[t._v("TCP（Transmission Control Protocol，传输控制协议）")]),t._v(" "),a("li",[t._v("UDP（User Datagram Protocol，用户数据报协议）")])]),t._v(" "),a("p",[t._v("端口：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("应用程序")]),t._v(" "),a("th",[t._v("FTP")]),t._v(" "),a("th",[t._v("TELNET")]),t._v(" "),a("th",[t._v("SMTP")]),t._v(" "),a("th",[t._v("DNS")]),t._v(" "),a("th",[t._v("TFTP")]),t._v(" "),a("th",[t._v("HTTP")]),t._v(" "),a("th",[t._v("HTTPS")]),t._v(" "),a("th",[t._v("SNMP")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("端口号")]),t._v(" "),a("td",[t._v("21")]),t._v(" "),a("td",[t._v("23")]),t._v(" "),a("td",[t._v("25")]),t._v(" "),a("td",[t._v("53")]),t._v(" "),a("td",[t._v("69")]),t._v(" "),a("td",[t._v("80")]),t._v(" "),a("td",[t._v("443")]),t._v(" "),a("td",[t._v("161")])])])]),t._v(" "),a("h4",{attrs:{id:"tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),a("ul",[a("li",[t._v("TCP（Transmission Control Protocol，传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议，其传输的单位是报文段。")])]),t._v(" "),a("p",[t._v("特征：")]),t._v(" "),a("ul",[a("li",[t._v("面向连接")]),t._v(" "),a("li",[t._v("只能点对点（一对一）通信")]),t._v(" "),a("li",[t._v("可靠交互")]),t._v(" "),a("li",[t._v("全双工通信")]),t._v(" "),a("li",[t._v("面向字节流")])]),t._v(" "),a("p",[t._v("TCP 如何保证可靠传输：")]),t._v(" "),a("ul",[a("li",[t._v("确认和超时重传")]),t._v(" "),a("li",[t._v("数据合理分片和排序")]),t._v(" "),a("li",[t._v("流量控制")]),t._v(" "),a("li",[t._v("拥塞控制")]),t._v(" "),a("li",[t._v("数据校验")])]),t._v(" "),a("p",[t._v("TCP 报文结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E6%8A%A5%E6%96%87.png",alt:"TCP 报文"}})]),t._v(" "),a("p",[t._v("TCP 首部")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E9%A6%96%E9%83%A8.png",alt:"TCP 首部"}})]),t._v(" "),a("p",[t._v("TCP：状态控制码（Code，Control Flag），占 6 比特，含义如下：")]),t._v(" "),a("ul",[a("li",[t._v("URG：紧急比特（urgent），当 "),a("code",[t._v("URG＝1")]),t._v(" 时，表明紧急指针字段有效，代表该封包为紧急封包。它告诉系统此报文段中有紧急数据，应尽快传送(相当于高优先级的数据)， 且上图中的 Urgent Pointer 字段也会被启用。")]),t._v(" "),a("li",[t._v("ACK：确认比特（Acknowledge）。只有当 "),a("code",[t._v("ACK＝1")]),t._v(" 时确认号字段才有效，代表这个封包为确认封包。当 "),a("code",[t._v("ACK＝0")]),t._v(" 时，确认号无效。")]),t._v(" "),a("li",[t._v("PSH：（Push function）若为 1 时，代表要求对方立即传送缓冲区内的其他对应封包，而无需等缓冲满了才送。")]),t._v(" "),a("li",[t._v("RST：复位比特(Reset)，当 "),a("code",[t._v("RST＝1")]),t._v(" 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。")]),t._v(" "),a("li",[t._v("SYN：同步比特(Synchronous)，SYN 置为 1，就表示这是一个连接请求或连接接受报文，通常带有 SYN 标志的封包表示『主动』要连接到对方的意思。")]),t._v(" "),a("li",[t._v("FIN：终止比特(Final)，用来释放一个连接。当 "),a("code",[t._v("FIN＝1")]),t._v(" 时，表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。")])]),t._v(" "),a("h4",{attrs:{id:"udp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[t._v("#")]),t._v(" UDP")]),t._v(" "),a("ul",[a("li",[t._v("UDP（User Datagram Protocol，用户数据报协议）是 OSI（Open System Interconnection 开放式系统互联） 参考模型中一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务，其传输的单位是用户数据报。")])]),t._v(" "),a("p",[t._v("特征：")]),t._v(" "),a("ul",[a("li",[t._v("无连接")]),t._v(" "),a("li",[t._v("尽最大努力交付")]),t._v(" "),a("li",[t._v("面向报文")]),t._v(" "),a("li",[t._v("没有拥塞控制")]),t._v(" "),a("li",[t._v("支持一对一、一对多、多对一、多对多的交互通信")]),t._v(" "),a("li",[t._v("首部开销小")])]),t._v(" "),a("p",[t._v("UDP 报文结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/UDP%E6%8A%A5%E6%96%87.png",alt:"UDP 报文"}})]),t._v(" "),a("p",[t._v("UDP 首部")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/UDP%E9%A6%96%E9%83%A8.png",alt:"UDP 首部"}})]),t._v(" "),a("blockquote",[a("p",[t._v("TCP/UDP 图片来源于："),a("a",{attrs:{href:"https://github.com/JerryC8080/understand-tcp-udp",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/JerryC8080/understand-tcp-udp"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"tcp-与-udp-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-与-udp-的区别"}},[t._v("#")]),t._v(" TCP 与 UDP 的区别")]),t._v(" "),a("ol",[a("li",[t._v("TCP 面向连接，UDP 是无连接的；")]),t._v(" "),a("li",[t._v("TCP 提供可靠的服务，也就是说，通过 TCP 连接传送的数据，无差错，不丢失，不重复，且按序到达；UDP 尽最大努力交付，即不保证可靠交付")]),t._v(" "),a("li",[t._v("TCP 的逻辑通信信道是全双工的可靠信道；UDP 则是不可靠信道")]),t._v(" "),a("li",[t._v("每一条 TCP 连接只能是点到点的；UDP 支持一对一，一对多，多对一和多对多的交互通信")]),t._v(" "),a("li",[t._v("TCP 面向字节流（可能出现黏包问题），实际上是 TCP 把数据看成一连串无结构的字节流；UDP 是面向报文的（不会出现黏包问题）")]),t._v(" "),a("li",[t._v("UDP 没有拥塞控制，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如 IP 电话，实时视频会议等）")]),t._v(" "),a("li",[t._v("TCP 首部开销20字节；UDP 的首部开销小，只有 8 个字节")])]),t._v(" "),a("h4",{attrs:{id:"tcp-黏包问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-黏包问题"}},[t._v("#")]),t._v(" TCP 黏包问题")]),t._v(" "),a("h5",{attrs:{id:"原因-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因-3"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("TCP 是一个基于字节流的传输服务（UDP 基于报文的），“流” 意味着 TCP 所传输的数据是没有边界的。所以可能会出现两个数据包黏在一起的情况。")]),t._v(" "),a("h5",{attrs:{id:"解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[t._v("#")]),t._v(" 解决")]),t._v(" "),a("ul",[a("li",[t._v("发送定长包。如果每个消息的大小都是一样的，那么在接收对等方只要累计接收数据，直到数据等于一个定长的数值就将它作为一个消息。")]),t._v(" "),a("li",[t._v("包头加上包体长度。包头是定长的 4 个字节，说明了包体的长度。接收对等方先接收包头长度，依据包头长度来接收包体。")]),t._v(" "),a("li",[t._v("在数据包之间设置边界，如添加特殊符号 "),a("code",[t._v("\\r\\n")]),t._v(" 标记。FTP 协议正是这么做的。但问题在于如果数据正文中也含有 "),a("code",[t._v("\\r\\n")]),t._v("，则会误判为消息的边界。")]),t._v(" "),a("li",[t._v("使用更加复杂的应用层协议。")])]),t._v(" "),a("h4",{attrs:{id:"tcp-流量控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-流量控制"}},[t._v("#")]),t._v(" TCP 流量控制")]),t._v(" "),a("h5",{attrs:{id:"概念-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-4"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("流量控制（flow control）就是让发送方的发送速率不要太快，要让接收方来得及接收。")]),t._v(" "),a("h5",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[t._v("利用可变窗口进行流量控制")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/%E5%88%A9%E7%94%A8%E5%8F%AF%E5%8F%98%E7%AA%97%E5%8F%A3%E8%BF%9B%E8%A1%8C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E4%B8%BE%E4%BE%8B.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"tcp-拥塞控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-拥塞控制"}},[t._v("#")]),t._v(" TCP 拥塞控制")]),t._v(" "),a("h5",{attrs:{id:"概念-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-5"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("拥塞控制就是防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。")]),t._v(" "),a("h5",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("慢开始( slow-start )")]),t._v(" "),a("li",[t._v("拥塞避免( congestion avoidance )")]),t._v(" "),a("li",[t._v("快重传( fast retransmit )")]),t._v(" "),a("li",[t._v("快恢复( fast recovery )")])]),t._v(" "),a("p",[t._v("TCP的拥塞控制图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E6%8B%A5%E5%A1%9E%E7%AA%97%E5%8F%A3cwnd%E5%9C%A8%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E6%97%B6%E7%9A%84%E5%8F%98%E5%8C%96%E6%83%85%E5%86%B5.png",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/%E5%BF%AB%E9%87%8D%E4%BC%A0%E7%A4%BA%E6%84%8F%E5%9B%BE.png",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E5%9B%BE.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"tcp-传输连接管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-传输连接管理"}},[t._v("#")]),t._v(" TCP 传输连接管理")]),t._v(" "),a("blockquote",[a("p",[t._v("因为 TCP 三次握手建立连接、四次挥手释放连接很重要，所以附上《计算机网络（第 7 版）-谢希仁》书中对此章的详细描述："),a("a",{attrs:{href:"https://gitee.com/huihut/interview/raw/master/images/TCP-transport-connection-management.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/huihut/interview/raw/master/images/TCP-transport-connection-management.png"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"tcp-三次握手建立连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手建立连接"}},[t._v("#")]),t._v(" TCP 三次握手建立连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5.png",alt:"UDP 报文"}})]),t._v(" "),a("p",[t._v("【TCP 建立连接全过程解释】")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送 SYN 给服务器，说明客户端请求建立连接；")]),t._v(" "),a("li",[t._v("服务端收到客户端发的 SYN，并回复 SYN+ACK 给客户端（同意建立连接）；")]),t._v(" "),a("li",[t._v("客户端收到服务端的 SYN+ACK 后，回复 ACK 给服务端（表示客户端收到了服务端发的同意报文）；")]),t._v(" "),a("li",[t._v("服务端收到客户端的 ACK，连接已建立，可以数据传输。")])]),t._v(" "),a("h5",{attrs:{id:"tcp-为什么要进行三次握手？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-为什么要进行三次握手？"}},[t._v("#")]),t._v(" TCP 为什么要进行三次握手？")]),t._v(" "),a("p",[t._v("【答案一】因为信道不可靠，而 TCP 想在不可靠信道上建立可靠地传输，那么三次通信是理论上的最小值。（而 UDP 则不需建立可靠传输，因此 UDP 不需要三次握手。）")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://groups.google.com/forum/#!msg/pongba/kF6O7-MFxM0/5S7zIJ4yqKUJ",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google Groups . TCP 建立连接为什么是三次握手？{技术}{网络通信}"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("【答案二】因为双方都需要确认对方收到了自己发送的序列号，确认过程最少要进行三次通信。")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/24853633/answer/115173386",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎 . TCP 为什么是三次握手，而不是两次或四次？"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("【答案三】为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误。")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://gitee.com/huihut/interview/raw/master/images/TCP-transport-connection-management.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("《计算机网络（第 7 版）-谢希仁》"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"tcp-四次挥手释放连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-四次挥手释放连接"}},[t._v("#")]),t._v(" TCP 四次挥手释放连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E9%87%8A%E6%94%BE%E8%BF%9E%E6%8E%A5.png",alt:"UDP 报文"}})]),t._v(" "),a("p",[t._v("【TCP 释放连接全过程解释】")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送 FIN 给服务器，说明客户端不必发送数据给服务器了（请求释放从客户端到服务器的连接）；")]),t._v(" "),a("li",[t._v("服务器接收到客户端发的 FIN，并回复 ACK 给客户端（同意释放从客户端到服务器的连接）；")]),t._v(" "),a("li",[t._v("客户端收到服务端回复的 ACK，此时从客户端到服务器的连接已释放（但服务端到客户端的连接还未释放，并且客户端还可以接收数据）；")]),t._v(" "),a("li",[t._v("服务端继续发送之前没发完的数据给客户端；")]),t._v(" "),a("li",[t._v("服务端发送 FIN+ACK 给客户端，说明服务端发送完了数据（请求释放从服务端到客户端的连接，就算没收到客户端的回复，过段时间也会自动释放）；")]),t._v(" "),a("li",[t._v("客户端收到服务端的 FIN+ACK，并回复 ACK 给客户端（同意释放从服务端到客户端的连接）；")]),t._v(" "),a("li",[t._v("服务端收到客户端的 ACK 后，释放从服务端到客户端的连接。")])]),t._v(" "),a("h5",{attrs:{id:"tcp-为什么要进行四次挥手？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-为什么要进行四次挥手？"}},[t._v("#")]),t._v(" TCP 为什么要进行四次挥手？")]),t._v(" "),a("p",[t._v("【问题一】TCP 为什么要进行四次挥手？ / 为什么 TCP 建立连接需要三次，而释放连接则需要四次？")]),t._v(" "),a("p",[t._v("【答案一】因为 TCP 是全双工模式，客户端请求关闭连接后，客户端向服务端的连接关闭（一二次挥手），服务端继续传输之前没传完的数据给客户端（数据传输），服务端向客户端的连接关闭（三四次挥手）。所以 TCP 释放连接时服务器的 ACK 和 FIN 是分开发送的（中间隔着数据传输），而 TCP 建立连接时服务器的 ACK 和 SYN 是一起发送的（第二次握手），所以 TCP 建立连接需要三次，而释放连接则需要四次。")]),t._v(" "),a("p",[t._v("【问题二】为什么 TCP 连接时可以 ACK 和 SYN 一起发送，而释放时则 ACK 和 FIN 分开发送呢？（ACK 和 FIN 分开是指第二次和第三次挥手）")]),t._v(" "),a("p",[t._v("【答案二】因为客户端请求释放时，服务器可能还有数据需要传输给客户端，因此服务端要先响应客户端 FIN 请求（服务端发送 ACK），然后数据传输，传输完成后，服务端再提出 FIN 请求（服务端发送 FIN）；而连接时则没有中间的数据传输，因此连接时可以 ACK 和 SYN 一起发送。")]),t._v(" "),a("p",[t._v("【问题三】为什么客户端释放最后需要 TIME-WAIT 等待 2MSL 呢？")]),t._v(" "),a("p",[t._v("【答案三】")]),t._v(" "),a("ol",[a("li",[t._v("为了保证客户端发送的最后一个 ACK 报文能够到达服务端。若未成功到达，则服务端超时重传 FIN+ACK 报文段，客户端再重传 ACK，并重新计时。")]),t._v(" "),a("li",[t._v("防止已失效的连接请求报文段出现在本连接中。TIME-WAIT 持续 2MSL 可使本连接持续的时间内所产生的所有报文段都从网络中消失，这样可使下次连接中不会出现旧的连接报文段。")])]),t._v(" "),a("h4",{attrs:{id:"tcp-有限状态机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-有限状态机"}},[t._v("#")]),t._v(" TCP 有限状态机")]),t._v(" "),a("p",[t._v("TCP 有限状态机图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/TCP%E7%9A%84%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA.png",alt:"TCP 的有限状态机"}})]),t._v(" "),a("h3",{attrs:{id:"应用层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[t._v("#")]),t._v(" 应用层")]),t._v(" "),a("h4",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),a("ul",[a("li",[t._v("DNS（Domain Name System，域名系统）是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 端口 53。当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能超过 253 个字符。")])]),t._v(" "),a("p",[t._v("域名：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("域名 ::= {<三级域名>.<二级域名>.<顶级域名>}")]),t._v("，如："),a("code",[t._v("blog.huihut.com")])])]),t._v(" "),a("h4",{attrs:{id:"ftp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ftp"}},[t._v("#")]),t._v(" FTP")]),t._v(" "),a("ul",[a("li",[t._v("FTP（File Transfer Protocol，文件传输协议）是用于在网络上进行文件传输的一套标准协议，使用客户/服务器模式，使用 TCP 数据报，提供交互式访问，双向传输。")]),t._v(" "),a("li",[t._v("TFTP（Trivial File Transfer Protocol，简单文件传输协议）一个小且易实现的文件传输协议，也使用客户-服务器方式，使用UDP数据报，只支持文件传输而不支持交互，没有列目录，不能对用户进行身份鉴定")])]),t._v(" "),a("h4",{attrs:{id:"telnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#telnet"}},[t._v("#")]),t._v(" TELNET")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("TELNET 协议是 TCP/IP 协议族中的一员，是 Internet 远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。")])]),t._v(" "),a("li",[a("p",[t._v("HTTP（HyperText Transfer Protocol，超文本传输协议）是用于从 WWW（World Wide Web，万维网）服务器传输超文本到本地浏览器的传送协议。")])]),t._v(" "),a("li",[a("p",[t._v("SMTP（Simple Mail Transfer Protocol，简单邮件传输协议）是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。SMTP 协议属于 TCP/IP 协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。")])]),t._v(" "),a("li",[a("p",[t._v("Socket 建立网络通信连接至少要一对端口号（Socket）。Socket 本质是编程接口（API），对 TCP/IP 的封装，TCP/IP 也要提供可供程序员做网络开发所用的接口，这就是 Socket 编程接口。")])])]),t._v(" "),a("h4",{attrs:{id:"www"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#www"}},[t._v("#")]),t._v(" WWW")]),t._v(" "),a("ul",[a("li",[t._v("WWW（World Wide Web，环球信息网，万维网）是一个由许多互相链接的超文本组成的系统，通过互联网访问")])]),t._v(" "),a("h5",{attrs:{id:"url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),a("ul",[a("li",[t._v("URL（Uniform Resource Locator，统一资源定位符）是因特网上标准的资源的地址（Address）")])]),t._v(" "),a("p",[t._v("标准格式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("协议类型:[//服务器地址[:端口号]][/资源层级UNIX文件路径]文件名[?查询][#片段ID]")])])]),t._v(" "),a("p",[t._v("完整格式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("协议类型:[//[访问资源需要的凭证信息@]服务器地址[:端口号]][/资源层级UNIX文件路径]文件名[?查询][#片段ID]")])])]),t._v(" "),a("blockquote",[a("p",[t._v("其中【访问凭证信息@；:端口号；?查询；#片段ID】都属于选填项"),a("br"),t._v("\n如："),a("code",[t._v("https://github.com/huihut/interview#cc")])])]),t._v(" "),a("h5",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),a("p",[t._v("HTTP（HyperText Transfer Protocol，超文本传输协议）是一种用于分布式、协作式和超媒体信息系统的应用层协议。HTTP 是万维网的数据通信的基础。")]),t._v(" "),a("p",[t._v("请求方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("OPTIONS")]),t._v(" "),a("td",[t._v("请求一些选项信息，允许客户端查看服务器的性能")])]),t._v(" "),a("tr",[a("td",[t._v("GET")]),t._v(" "),a("td",[t._v("请求指定的页面信息，并返回实体主体")])]),t._v(" "),a("tr",[a("td",[t._v("HEAD")]),t._v(" "),a("td",[t._v("类似于 get 请求，只不过返回的响应中没有具体的内容，用于获取报头")])]),t._v(" "),a("tr",[a("td",[t._v("POST")]),t._v(" "),a("td",[t._v("向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改")])]),t._v(" "),a("tr",[a("td",[t._v("PUT")]),t._v(" "),a("td",[t._v("从客户端向服务器传送的数据取代指定的文档的内容")])]),t._v(" "),a("tr",[a("td",[t._v("DELETE")]),t._v(" "),a("td",[t._v("请求服务器删除指定的页面")])]),t._v(" "),a("tr",[a("td",[t._v("TRACE")]),t._v(" "),a("td",[t._v("回显服务器收到的请求，主要用于测试或诊断")])])])]),t._v(" "),a("p",[t._v("状态码（Status-Code）")]),t._v(" "),a("ul",[a("li",[t._v("1xx：表示通知信息，如请求收到了或正在进行处理\n"),a("ul",[a("li",[t._v("100 Continue：继续，客户端应继续其请求")]),t._v(" "),a("li",[t._v("101 Switching Protocols 切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到 HTTP 的新版本协议")])])]),t._v(" "),a("li",[t._v("2xx：表示成功，如接收或知道了\n"),a("ul",[a("li",[t._v("200 OK: 请求成功")])])]),t._v(" "),a("li",[t._v("3xx：表示重定向，如要完成请求还必须采取进一步的行动\n"),a("ul",[a("li",[t._v("301 Moved Permanently: 永久移动。请求的资源已被永久的移动到新 URL，返回信息会包括新的 URL，浏览器会自动定向到新 URL。今后任何新的请求都应使用新的 URL 代替")])])]),t._v(" "),a("li",[t._v("4xx：表示客户的差错，如请求中有错误的语法或不能完成\n"),a("ul",[a("li",[t._v("400 Bad Request: 客户端请求的语法错误，服务器无法理解")]),t._v(" "),a("li",[t._v("401 Unauthorized: 请求要求用户的身份认证")]),t._v(" "),a("li",[t._v("403 Forbidden: 服务器理解请求客户端的请求，但是拒绝执行此请求（权限不够）")]),t._v(" "),a("li",[t._v("404 Not Found: 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置 “您所请求的资源无法找到” 的个性页面")]),t._v(" "),a("li",[t._v("408 Request Timeout: 服务器等待客户端发送的请求时间过长，超时")])])]),t._v(" "),a("li",[t._v("5xx：表示服务器的差错，如服务器失效无法完成请求\n"),a("ul",[a("li",[t._v("500 Internal Server Error: 服务器内部错误，无法完成请求")]),t._v(" "),a("li",[t._v("503 Service Unavailable: 由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的 Retry-After 头信息中")]),t._v(" "),a("li",[t._v("504 Gateway Timeout: 充当网关或代理的服务器，未及时从远端服务器获取请求")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("更多状态码："),a("a",{attrs:{href:"http://www.runoob.com/http/http-status-codes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程 . HTTP状态码"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"其他协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他协议"}},[t._v("#")]),t._v(" 其他协议")]),t._v(" "),a("ul",[a("li",[t._v("SMTP（Simple Main Transfer Protocol，简单邮件传输协议）是在 Internet 传输 Email 的标准，是一个相对简单的基于文本的协议。在其之上指定了一条消息的一个或多个接收者（在大多数情况下被确认是存在的），然后消息文本会被传输。可以很简单地通过 Telnet 程序来测试一个 SMTP 服务器。SMTP 使用 TCP 端口 25。")]),t._v(" "),a("li",[t._v("DHCP（Dynamic Host Configuration Protocol，动态主机设置协议）是一个局域网的网络协议，使用 UDP 协议工作，主要有两个用途：\n"),a("ul",[a("li",[t._v("用于内部网络或网络服务供应商自动分配 IP 地址给用户")]),t._v(" "),a("li",[t._v("用于内部网络管理员作为对所有电脑作中央管理的手段")])])]),t._v(" "),a("li",[t._v("SNMP（Simple Network Management Protocol，简单网络管理协议）构成了互联网工程工作小组（IETF，Internet Engineering Task Force）定义的 Internet 协议族的一部分。该协议能够支持网络管理系统，用以监测连接到网络上的设备是否有任何引起管理上关注的情况。")])]),t._v(" "),a("p",[a("a",{attrs:{id:"network-programming"}})]),t._v(" "),a("h2",{attrs:{id:"🌩-网络编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🌩-网络编程"}},[t._v("#")]),t._v(" 🌩 网络编程")]),t._v(" "),a("h3",{attrs:{id:"socket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[t._v("#")]),t._v(" Socket")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/skynet/archive/2010/12/12/1903949.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux Socket 编程（不限 Linux）"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/socket%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%AE%AF.jpg",alt:"Socket 客户端服务器通讯"}})]),t._v(" "),a("h4",{attrs:{id:"socket-中的-read-、write-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket-中的-read-、write-函数"}},[t._v("#")]),t._v(" Socket 中的 read()、write() 函数")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ssize_t "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" fd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nssize_t "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" fd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h5",{attrs:{id:"read"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#read"}},[t._v("#")]),t._v(" read()")]),t._v(" "),a("ul",[a("li",[t._v("read 函数是负责从 fd 中读取内容。")]),t._v(" "),a("li",[t._v("当读成功时，read 返回实际所读的字节数。")]),t._v(" "),a("li",[t._v("如果返回的值是 0 表示已经读到文件的结束了，小于 0 表示出现了错误。")]),t._v(" "),a("li",[t._v("如果错误为 EINTR 说明读是由中断引起的；如果是 ECONNREST 表示网络连接出了问题。")])]),t._v(" "),a("h5",{attrs:{id:"write"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#write"}},[t._v("#")]),t._v(" write()")]),t._v(" "),a("ul",[a("li",[t._v("write 函数将 buf 中的 nbytes 字节内容写入文件描述符 fd。")]),t._v(" "),a("li",[t._v("成功时返回写的字节数。失败时返回 -1，并设置 errno 变量。")]),t._v(" "),a("li",[t._v("在网络程序中，当我们向套接字文件描述符写时有俩种可能。")]),t._v(" "),a("li",[t._v("（1）write 的返回值大于 0，表示写了部分或者是全部的数据。")]),t._v(" "),a("li",[t._v("（2）返回的值小于 0，此时出现了错误。")]),t._v(" "),a("li",[t._v("如果错误为 EINTR 表示在写的时候出现了中断错误；如果为 EPIPE 表示网络连接出现了问题（对方已经关闭了连接）。")])]),t._v(" "),a("h4",{attrs:{id:"socket-中-tcp-的三次握手建立连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket-中-tcp-的三次握手建立连接"}},[t._v("#")]),t._v(" Socket 中 TCP 的三次握手建立连接")]),t._v(" "),a("p",[t._v("我们知道 TCP 建立连接要进行 “三次握手”，即交换三个分组。大致流程如下：")]),t._v(" "),a("ol",[a("li",[t._v("客户端向服务器发送一个 SYN J")]),t._v(" "),a("li",[t._v("服务器向客户端响应一个 SYN K，并对 SYN J 进行确认 ACK J+1")]),t._v(" "),a("li",[t._v("客户端再想服务器发一个确认 ACK K+1")])]),t._v(" "),a("p",[t._v("只有就完了三次握手，但是这个三次握手发生在 Socket 的那几个函数中呢？请看下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://images.cnblogs.com/cnblogs_com/skynet/201012/201012122157467258.png",alt:"socket 中发送的 TCP 三次握手"}})]),t._v(" "),a("p",[t._v("从图中可以看出：")]),t._v(" "),a("ol",[a("li",[t._v("当客户端调用 connect 时，触发了连接请求，向服务器发送了 SYN J 包，这时 connect 进入阻塞状态；")]),t._v(" "),a("li",[t._v("服务器监听到连接请求，即收到 SYN J 包，调用 accept 函数接收请求向客户端发送 SYN K ，ACK J+1，这时 accept 进入阻塞状态；")]),t._v(" "),a("li",[t._v("客户端收到服务器的 SYN K ，ACK J+1 之后，这时 connect 返回，并对 SYN K 进行确认；")]),t._v(" "),a("li",[t._v("服务器收到 ACK K+1 时，accept 返回，至此三次握手完毕，连接建立。")])]),t._v(" "),a("h4",{attrs:{id:"socket-中-tcp-的四次握手释放连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket-中-tcp-的四次握手释放连接"}},[t._v("#")]),t._v(" Socket 中 TCP 的四次握手释放连接")]),t._v(" "),a("p",[t._v("上面介绍了 socket 中 TCP 的三次握手建立过程，及其涉及的 socket 函数。现在我们介绍 socket 中的四次握手释放连接的过程，请看下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://images.cnblogs.com/cnblogs_com/skynet/201012/201012122157487616.png",alt:"socket 中发送的 TCP 四次握手"}})]),t._v(" "),a("p",[t._v("图示过程如下：")]),t._v(" "),a("ol",[a("li",[t._v("某个应用进程首先调用 close 主动关闭连接，这时 TCP 发送一个 FIN M；")]),t._v(" "),a("li",[t._v("另一端接收到 FIN M 之后，执行被动关闭，对这个 FIN 进行确认。它的接收也作为文件结束符传递给应用进程，因为 FIN 的接收意味着应用进程在相应的连接上再也接收不到额外数据；")]),t._v(" "),a("li",[t._v("一段时间之后，接收到文件结束符的应用进程调用 close 关闭它的 socket。这导致它的 TCP 也发送一个 FIN N；")]),t._v(" "),a("li",[t._v("接收到这个 FIN 的源发送端 TCP 对它进行确认。")])]),t._v(" "),a("p",[t._v("这样每个方向上都有一个 FIN 和 ACK。")]),t._v(" "),a("p",[a("a",{attrs:{id:"database"}})]),t._v(" "),a("h2",{attrs:{id:"💾-数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#💾-数据库"}},[t._v("#")]),t._v(" 💾 数据库")]),t._v(" "),a("blockquote",[a("p",[t._v("本节部分知识点来自《数据库系统概论（第 5 版）》")])]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("ul",[a("li",[t._v("数据（data）：描述事物的符号记录称为数据。")]),t._v(" "),a("li",[t._v("数据库（DataBase，DB）：是长期存储在计算机内、有组织的、可共享的大量数据的集合，具有永久存储、有组织、可共享三个基本特点。")]),t._v(" "),a("li",[t._v("数据库管理系统（DataBase Management System，DBMS）：是位于用户与操作系统之间的一层数据管理软件。")]),t._v(" "),a("li",[t._v("数据库系统（DataBase System，DBS）：是有数据库、数据库管理系统（及其应用开发工具）、应用程序和数据库管理员（DataBase Administrator DBA）组成的存储、管理、处理和维护数据的系统。")]),t._v(" "),a("li",[t._v("实体（entity）：客观存在并可相互区别的事物称为实体。")]),t._v(" "),a("li",[t._v("属性（attribute）：实体所具有的某一特性称为属性。")]),t._v(" "),a("li",[t._v("码（key）：唯一标识实体的属性集称为码。")]),t._v(" "),a("li",[t._v("实体型（entity type）：用实体名及其属性名集合来抽象和刻画同类实体，称为实体型。")]),t._v(" "),a("li",[t._v("实体集（entity set）：同一实体型的集合称为实体集。")]),t._v(" "),a("li",[t._v("联系（relationship）：实体之间的联系通常是指不同实体集之间的联系。")]),t._v(" "),a("li",[t._v("模式（schema）：模式也称逻辑模式，是数据库全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。")]),t._v(" "),a("li",[t._v("外模式（external schema）：外模式也称子模式（subschema）或用户模式，它是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。")]),t._v(" "),a("li",[t._v("内模式（internal schema）：内模式也称为存储模式（storage schema），一个数据库只有一个内模式。他是数据物理结构和存储方式的描述，是数据库在数据库内部的组织方式。")])]),t._v(" "),a("h3",{attrs:{id:"常用数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用数据模型"}},[t._v("#")]),t._v(" 常用数据模型")]),t._v(" "),a("ul",[a("li",[t._v("层次模型（hierarchical model）")]),t._v(" "),a("li",[t._v("网状模型（network model）")]),t._v(" "),a("li",[t._v("关系模型（relational model）\n"),a("ul",[a("li",[t._v("关系（relation）：一个关系对应通常说的一张表")]),t._v(" "),a("li",[t._v("元组（tuple）：表中的一行即为一个元组")]),t._v(" "),a("li",[t._v("属性（attribute）：表中的一列即为一个属性")]),t._v(" "),a("li",[t._v("码（key）：表中可以唯一确定一个元组的某个属性组")]),t._v(" "),a("li",[t._v("域（domain）：一组具有相同数据类型的值的集合")]),t._v(" "),a("li",[t._v("分量：元组中的一个属性值")]),t._v(" "),a("li",[t._v("关系模式：对关系的描述，一般表示为 "),a("code",[t._v("关系名(属性1, 属性2, ..., 属性n)")])])])]),t._v(" "),a("li",[t._v("面向对象数据模型（object oriented data model）")]),t._v(" "),a("li",[t._v("对象关系数据模型（object relational data model）")]),t._v(" "),a("li",[t._v("半结构化数据模型（semistructure data model）")])]),t._v(" "),a("h3",{attrs:{id:"常用-sql-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用-sql-操作"}},[t._v("#")]),t._v(" 常用 SQL 操作")]),t._v(" "),a("table",[a("tr",[a("th",[t._v("对象类型")]),t._v(" "),a("th",[t._v("对象")]),t._v(" "),a("th",[t._v("操作类型")])]),t._v(" "),a("tr",[a("td",{attrs:{rowspan:"4"}},[t._v("数据库模式")]),t._v(" "),a("td",[t._v("模式")]),t._v(" "),a("td",[a("code",[t._v("CREATE SCHEMA")])])]),t._v(" "),a("tr",[a("td",[t._v("基本表")]),t._v(" "),a("td",[a("code",[t._v("CREATE SCHEMA")]),t._v("，"),a("code",[t._v("ALTER TABLE")])])]),t._v(" "),a("tr",[a("td",[t._v("视图")]),t._v(" "),a("td",[a("code",[t._v("CREATE VIEW")])])]),t._v(" "),a("tr",[a("td",[t._v("索引")]),t._v(" "),a("td",[a("code",[t._v("CREATE INDEX")])])]),t._v(" "),a("tr",[a("td",{attrs:{rowspan:"2"}},[t._v("数据")]),t._v(" "),a("td",[t._v("基本表和视图")]),t._v(" "),a("td",[a("code",[t._v("SELECT")]),t._v("，"),a("code",[t._v("INSERT")]),t._v("，"),a("code",[t._v("UPDATE")]),t._v("，"),a("code",[t._v("DELETE")]),t._v("，"),a("code",[t._v("REFERENCES")]),t._v("，"),a("code",[t._v("ALL PRIVILEGES")])])]),t._v(" "),a("tr",[a("td",[t._v("属性列")]),t._v(" "),a("td",[a("code",[t._v("SELECT")]),t._v("，"),a("code",[t._v("INSERT")]),t._v("，"),a("code",[t._v("UPDATE")]),t._v("，"),a("code",[t._v("REFERENCES")]),t._v("，"),a("code",[t._v("ALL PRIVILEGES")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("SQL 语法教程："),a("a",{attrs:{href:"http://www.runoob.com/sql/sql-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("runoob . SQL 教程"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"关系型数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库"}},[t._v("#")]),t._v(" 关系型数据库")]),t._v(" "),a("ul",[a("li",[t._v("基本关系操作：查询（选择、投影、连接（等值连接、自然连接、外连接（左外连接、右外连接））、除、并、差、交、笛卡尔积等）、插入、删除、修改")]),t._v(" "),a("li",[t._v("关系模型中的三类完整性约束：实体完整性、参照完整性、用户定义的完整性")])]),t._v(" "),a("h4",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("ul",[a("li",[t._v("数据库索引：顺序索引、B+ 树索引、hash 索引")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.codinglabs.org/articles/theory-of-mysql-index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 索引背后的数据结构及算法原理"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"数据库完整性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库完整性"}},[t._v("#")]),t._v(" 数据库完整性")]),t._v(" "),a("ul",[a("li",[t._v("数据库的完整性是指数据的正确性和相容性。\n"),a("ul",[a("li",[t._v("完整性：为了防止数据库中存在不符合语义（不正确）的数据。")]),t._v(" "),a("li",[t._v("安全性：为了保护数据库防止恶意破坏和非法存取。")])])]),t._v(" "),a("li",[t._v("触发器：是用户定义在关系表中的一类由事件驱动的特殊过程。")])]),t._v(" "),a("h3",{attrs:{id:"关系数据理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系数据理论"}},[t._v("#")]),t._v(" 关系数据理论")]),t._v(" "),a("ul",[a("li",[t._v("数据依赖是一个关系内部属性与属性之间的一种约束关系，是通过属性间值的相等与否体现出来的数据间相关联系。")]),t._v(" "),a("li",[t._v("最重要的数据依赖：函数依赖、多值依赖。")])]),t._v(" "),a("h4",{attrs:{id:"范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[t._v("#")]),t._v(" 范式")]),t._v(" "),a("ul",[a("li",[t._v("第一范式（1NF）：属性（字段）是最小单位不可再分。")]),t._v(" "),a("li",[t._v("第二范式（2NF）：满足 1NF，每个非主属性完全依赖于主键（消除 1NF 非主属性对码的部分函数依赖）。")]),t._v(" "),a("li",[t._v("第三范式（3NF）：满足 2NF，任何非主属性不依赖于其他非主属性（消除 2NF 非主属性对码的传递函数依赖）。")]),t._v(" "),a("li",[t._v("鲍依斯-科得范式（BCNF）：满足 3NF，任何非主属性不能对主键子集依赖（消除 3NF 主属性对码的部分和传递函数依赖）。")]),t._v(" "),a("li",[t._v("第四范式（4NF）：满足 3NF，属性之间不能有非平凡且非函数依赖的多值依赖（消除 3NF 非平凡且非函数依赖的多值依赖）。")])]),t._v(" "),a("h3",{attrs:{id:"数据库恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库恢复"}},[t._v("#")]),t._v(" 数据库恢复")]),t._v(" "),a("ul",[a("li",[t._v("事务：是用户定义的一个数据库操作序列，这些操作要么全做，要么全不做，是一个不可分割的工作单位。")]),t._v(" "),a("li",[t._v("事物的 ACID 特性：原子性、一致性、隔离性、持续性。")]),t._v(" "),a("li",[t._v("恢复的实现技术：建立冗余数据 -> 利用冗余数据实施数据库恢复。")]),t._v(" "),a("li",[t._v("建立冗余数据常用技术：数据转储（动态海量转储、动态增量转储、静态海量转储、静态增量转储）、登记日志文件。")])]),t._v(" "),a("h3",{attrs:{id:"并发控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发控制"}},[t._v("#")]),t._v(" 并发控制")]),t._v(" "),a("ul",[a("li",[t._v("事务是并发控制的基本单位。")]),t._v(" "),a("li",[t._v("并发操作带来的数据不一致性包括：丢失修改、不可重复读、读 “脏” 数据。")]),t._v(" "),a("li",[t._v("并发控制主要技术：封锁、时间戳、乐观控制法、多版本并发控制等。")]),t._v(" "),a("li",[t._v("基本封锁类型：排他锁（X 锁 / 写锁）、共享锁（S 锁 / 读锁）。")]),t._v(" "),a("li",[t._v("活锁死锁：\n"),a("ul",[a("li",[t._v("活锁：事务永远处于等待状态，可通过先来先服务的策略避免。")]),t._v(" "),a("li",[t._v("死锁：事物永远不能结束\n"),a("ul",[a("li",[t._v("预防：一次封锁法、顺序封锁法；")]),t._v(" "),a("li",[t._v("诊断：超时法、等待图法；")]),t._v(" "),a("li",[t._v("解除：撤销处理死锁代价最小的事务，并释放此事务的所有的锁，使其他事务得以继续运行下去。")])])])])]),t._v(" "),a("li",[t._v("可串行化调度：多个事务的并发执行是正确的，当且仅当其结果与按某一次序串行地执行这些事务时的结果相同。可串行性时并发事务正确调度的准则。")])]),t._v(" "),a("p",[a("a",{attrs:{id:"design-pattern"}})]),t._v(" "),a("h2",{attrs:{id:"📏-设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📏-设计模式"}},[t._v("#")]),t._v(" 📏 设计模式")]),t._v(" "),a("blockquote",[a("p",[t._v("各大设计模式例子参考："),a("a",{attrs:{href:"https://blog.csdn.net/liang19890820/article/details/66974516",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN专栏 . C++ 设计模式"),a("OutboundLink")],1),t._v(" 系列博文")])]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern"}},[t._v("设计模式工程目录")])]),t._v(" "),a("h3",{attrs:{id:"单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern/SingletonPattern"}},[t._v("单例模式例子")])]),t._v(" "),a("h3",{attrs:{id:"抽象工厂模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抽象工厂模式"}},[t._v("#")]),t._v(" 抽象工厂模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern/AbstractFactoryPattern"}},[t._v("抽象工厂模式例子")])]),t._v(" "),a("h3",{attrs:{id:"适配器模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式"}},[t._v("#")]),t._v(" 适配器模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern/AdapterPattern"}},[t._v("适配器模式例子")])]),t._v(" "),a("h3",{attrs:{id:"桥接模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#桥接模式"}},[t._v("#")]),t._v(" 桥接模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern/BridgePattern"}},[t._v("桥接模式例子")])]),t._v(" "),a("h3",{attrs:{id:"观察者模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式"}},[t._v("#")]),t._v(" 观察者模式")]),t._v(" "),a("p",[a("a",{attrs:{href:"DesignPattern/ObserverPattern"}},[t._v("观察者模式例子")])]),t._v(" "),a("h3",{attrs:{id:"设计模式的六大原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计模式的六大原则"}},[t._v("#")]),t._v(" 设计模式的六大原则")]),t._v(" "),a("ul",[a("li",[t._v("单一职责原则（SRP，Single Responsibility Principle）")]),t._v(" "),a("li",[t._v("里氏替换原则（LSP，Liskov Substitution Principle）")]),t._v(" "),a("li",[t._v("依赖倒置原则（DIP，Dependence Inversion Principle）")]),t._v(" "),a("li",[t._v("接口隔离原则（ISP，Interface Segregation Principle）")]),t._v(" "),a("li",[t._v("迪米特法则（LoD，Law of Demeter）")]),t._v(" "),a("li",[t._v("开放封闭原则（OCP，Open Close Principle）")])]),t._v(" "),a("p",[a("a",{attrs:{id:"link-loading-library"}})]),t._v(" "),a("h2",{attrs:{id:"⚙️-链接装载库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#⚙️-链接装载库"}},[t._v("#")]),t._v(" ⚙️ 链接装载库")]),t._v(" "),a("blockquote",[a("p",[t._v("本节部分知识点来自《程序员的自我修养——链接装载库》")])]),t._v(" "),a("h3",{attrs:{id:"内存、栈、堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存、栈、堆"}},[t._v("#")]),t._v(" 内存、栈、堆")]),t._v(" "),a("p",[t._v("一般应用程序内存空间有如下区域：")]),t._v(" "),a("ul",[a("li",[t._v("栈：由操作系统自动分配释放，存放函数的参数值、局部变量等的值，用于维护函数调用的上下文")]),t._v(" "),a("li",[t._v("堆：一般由程序员分配释放，若程序员不释放，程序结束时可能由操作系统回收，用来容纳应用程序动态分配的内存区域")]),t._v(" "),a("li",[t._v("可执行文件映像：存储着可执行文件在内存中的映像，由装载器装载是将可执行文件的内存读取或映射到这里")]),t._v(" "),a("li",[t._v("保留区：保留区并不是一个单一的内存区域，而是对内存中受到保护而禁止访问的内存区域的总称，如通常 C 语言讲无效指针赋值为 0（NULL），因此 0 地址正常情况下不可能有效的访问数据")])]),t._v(" "),a("h4",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),a("p",[t._v("栈保存了一个函数调用所需要的维护信息，常被称为堆栈帧（Stack Frame）或活动记录（Activate Record），一般包含以下几方面：")]),t._v(" "),a("ul",[a("li",[t._v("函数的返回地址和参数")]),t._v(" "),a("li",[t._v("临时变量：包括函数的非静态局部变量以及编译器自动生成的其他临时变量")]),t._v(" "),a("li",[t._v("保存上下文：包括函数调用前后需要保持不变的寄存器")])]),t._v(" "),a("h4",{attrs:{id:"堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),a("p",[t._v("堆分配算法：")]),t._v(" "),a("ul",[a("li",[t._v("空闲链表（Free List）")]),t._v(" "),a("li",[t._v("位图（Bitmap）")]),t._v(" "),a("li",[t._v("对象池")])]),t._v(" "),a("h4",{attrs:{id:"段错误（segment-fault）-或-非法操作，该内存地址不能-read-write"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#段错误（segment-fault）-或-非法操作，该内存地址不能-read-write"}},[t._v("#")]),t._v(" “段错误（segment fault）” 或 “非法操作，该内存地址不能 read/write”")]),t._v(" "),a("p",[t._v("典型的非法指针解引用造成的错误。当指针指向一个不允许读写的内存地址，而程序却试图利用指针来读或写该地址时，会出现这个错误。")]),t._v(" "),a("p",[t._v("普遍原因：")]),t._v(" "),a("ul",[a("li",[t._v("将指针初始化为 NULL，之后没有给它一个合理的值就开始使用指针")]),t._v(" "),a("li",[t._v("没用初始化栈中的指针，指针的值一般会是随机数，之后就直接开始使用指针")])]),t._v(" "),a("h3",{attrs:{id:"编译链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译链接"}},[t._v("#")]),t._v(" 编译链接")]),t._v(" "),a("h4",{attrs:{id:"各平台文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各平台文件格式"}},[t._v("#")]),t._v(" 各平台文件格式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("平台")]),t._v(" "),a("th",[t._v("可执行文件")]),t._v(" "),a("th",[t._v("目标文件")]),t._v(" "),a("th",[t._v("动态库/共享对象")]),t._v(" "),a("th",[t._v("静态库")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Windows")]),t._v(" "),a("td",[t._v("exe")]),t._v(" "),a("td",[t._v("obj")]),t._v(" "),a("td",[t._v("dll")]),t._v(" "),a("td",[t._v("lib")])]),t._v(" "),a("tr",[a("td",[t._v("Unix/Linux")]),t._v(" "),a("td",[t._v("ELF、out")]),t._v(" "),a("td",[t._v("o")]),t._v(" "),a("td",[t._v("so")]),t._v(" "),a("td",[t._v("a")])]),t._v(" "),a("tr",[a("td",[t._v("Mac")]),t._v(" "),a("td",[t._v("Mach-O")]),t._v(" "),a("td",[t._v("o")]),t._v(" "),a("td",[t._v("dylib、tbd、framework")]),t._v(" "),a("td",[t._v("a、framework")])])])]),t._v(" "),a("h4",{attrs:{id:"编译链接过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译链接过程"}},[t._v("#")]),t._v(" 编译链接过程")]),t._v(" "),a("ol",[a("li",[t._v("预编译（预编译器处理如 "),a("code",[t._v("#include")]),t._v("、"),a("code",[t._v("#define")]),t._v(" 等预编译指令，生成 "),a("code",[t._v(".i")]),t._v(" 或 "),a("code",[t._v(".ii")]),t._v(" 文件）")]),t._v(" "),a("li",[t._v("编译（编译器进行词法分析、语法分析、语义分析、中间代码生成、目标代码生成、优化，生成 "),a("code",[t._v(".s")]),t._v(" 文件）")]),t._v(" "),a("li",[t._v("汇编（汇编器把汇编码翻译成机器码，生成 "),a("code",[t._v(".o")]),t._v(" 文件）")]),t._v(" "),a("li",[t._v("链接（连接器进行地址和空间分配、符号决议、重定位，生成 "),a("code",[t._v(".out")]),t._v(" 文件）")])]),t._v(" "),a("blockquote",[a("p",[t._v("现在版本 GCC 把预编译和编译合成一步，预编译编译程序 cc1、汇编器 as、连接器 ld")])]),t._v(" "),a("blockquote",[a("p",[t._v("MSVC 编译环境，编译器 cl、连接器 link、可执行文件查看器 dumpbin")])]),t._v(" "),a("h4",{attrs:{id:"目标文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标文件"}},[t._v("#")]),t._v(" 目标文件")]),t._v(" "),a("p",[t._v("编译器编译源代码后生成的文件叫做目标文件。目标文件从结构上讲，它是已经编译后的可执行文件格式，只是还没有经过链接的过程，其中可能有些符号或有些地址还没有被调整。")]),t._v(" "),a("blockquote",[a("p",[t._v("可执行文件（Windows 的 "),a("code",[t._v(".exe")]),t._v(" 和 Linux 的 "),a("code",[t._v("ELF")]),t._v("）、动态链接库（Windows 的 "),a("code",[t._v(".dll")]),t._v(" 和 Linux 的 "),a("code",[t._v(".so")]),t._v("）、静态链接库（Windows 的 "),a("code",[t._v(".lib")]),t._v(" 和 Linux 的 "),a("code",[t._v(".a")]),t._v("）都是按照可执行文件格式存储（Windows 按照 PE-COFF，Linux 按照 ELF）")])]),t._v(" "),a("h5",{attrs:{id:"目标文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标文件格式"}},[t._v("#")]),t._v(" 目标文件格式")]),t._v(" "),a("ul",[a("li",[t._v("Windows 的 PE（Portable Executable），或称为 PE-COFF，"),a("code",[t._v(".obj")]),t._v(" 格式")]),t._v(" "),a("li",[t._v("Linux 的 ELF（Executable Linkable Format），"),a("code",[t._v(".o")]),t._v(" 格式")]),t._v(" "),a("li",[t._v("Intel/Microsoft 的 OMF（Object Module Format）")]),t._v(" "),a("li",[t._v("Unix 的 "),a("code",[t._v("a.out")]),t._v(" 格式")]),t._v(" "),a("li",[t._v("MS-DOS 的 "),a("code",[t._v(".COM")]),t._v(" 格式")])]),t._v(" "),a("blockquote",[a("p",[t._v("PE 和 ELF 都是 COFF（Common File Format）的变种")])]),t._v(" "),a("h5",{attrs:{id:"目标文件存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标文件存储结构"}},[t._v("#")]),t._v(" 目标文件存储结构")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("段")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("File Header")]),t._v(" "),a("td",[t._v("文件头，描述整个文件的文件属性（包括文件是否可执行、是静态链接或动态连接及入口地址、目标硬件、目标操作系统等）")])]),t._v(" "),a("tr",[a("td",[t._v(".text section")]),t._v(" "),a("td",[t._v("代码段，执行语句编译成的机器代码")])]),t._v(" "),a("tr",[a("td",[t._v(".data section")]),t._v(" "),a("td",[t._v("数据段，已初始化的全局变量和局部静态变量")])]),t._v(" "),a("tr",[a("td",[t._v(".bss section")]),t._v(" "),a("td",[t._v("BSS 段（Block Started by Symbol），未初始化的全局变量和局部静态变量（因为默认值为 0，所以只是在此预留位置，不占空间）")])]),t._v(" "),a("tr",[a("td",[t._v(".rodata section")]),t._v(" "),a("td",[t._v("只读数据段，存放只读数据，一般是程序里面的只读变量（如 const 修饰的变量）和字符串常量")])]),t._v(" "),a("tr",[a("td",[t._v(".comment section")]),t._v(" "),a("td",[t._v("注释信息段，存放编译器版本信息")])]),t._v(" "),a("tr",[a("td",[t._v(".note.GNU-stack section")]),t._v(" "),a("td",[t._v("堆栈提示段")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("其他段略")])]),t._v(" "),a("h4",{attrs:{id:"链接的接口-符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接的接口-符号"}},[t._v("#")]),t._v(" 链接的接口————符号")]),t._v(" "),a("p",[t._v("在链接中，目标文件之间相互拼合实际上是目标文件之间对地址的引用，即对函数和变量的地址的引用。我们将函数和变量统称为符号（Symbol），函数名或变量名就是符号名（Symbol Name）。")]),t._v(" "),a("p",[t._v("如下符号表（Symbol Table）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Symbol（符号名）")]),t._v(" "),a("th",[t._v("Symbol Value （地址）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("main")]),t._v(" "),a("td",[t._v("0x100")])]),t._v(" "),a("tr",[a("td",[t._v("Add")]),t._v(" "),a("td",[t._v("0x123")])]),t._v(" "),a("tr",[a("td",[t._v("...")]),t._v(" "),a("td",[t._v("...")])])])]),t._v(" "),a("h3",{attrs:{id:"linux-的共享库（shared-library）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-的共享库（shared-library）"}},[t._v("#")]),t._v(" Linux 的共享库（Shared Library）")]),t._v(" "),a("p",[t._v("Linux 下的共享库就是普通的 ELF 共享对象。")]),t._v(" "),a("p",[t._v("共享库版本更新应该保证二进制接口 ABI（Application Binary Interface）的兼容")]),t._v(" "),a("h4",{attrs:{id:"命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[t._v("#")]),t._v(" 命名")]),t._v(" "),a("p",[a("code",[t._v("libname.so.x.y.z")])]),t._v(" "),a("ul",[a("li",[t._v("x：主版本号，不同主版本号的库之间不兼容，需要重新编译")]),t._v(" "),a("li",[t._v("y：次版本号，高版本号向后兼容低版本号")]),t._v(" "),a("li",[t._v("z：发布版本号，不对接口进行更改，完全兼容")])]),t._v(" "),a("h4",{attrs:{id:"路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径"}},[t._v("#")]),t._v(" 路径")]),t._v(" "),a("p",[t._v("大部分包括 Linux 在内的开源系统遵循 FHS（File Hierarchy Standard）的标准，这标准规定了系统文件如何存放，包括各个目录结构、组织和作用。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/lib")]),t._v("：存放系统最关键和最基础的共享库，如动态链接器、C 语言运行库、数学库等")]),t._v(" "),a("li",[a("code",[t._v("/usr/lib")]),t._v("：存放非系统运行时所需要的关键性的库，主要是开发库")]),t._v(" "),a("li",[a("code",[t._v("/usr/local/lib")]),t._v("：存放跟操作系统本身并不十分相关的库，主要是一些第三方应用程序的库")])]),t._v(" "),a("blockquote",[a("p",[t._v("动态链接器会在 "),a("code",[t._v("/lib")]),t._v("、"),a("code",[t._v("/usr/lib")]),t._v(" 和由 "),a("code",[t._v("/etc/ld.so.conf")]),t._v(" 配置文件指定的，目录中查找共享库")])]),t._v(" "),a("h4",{attrs:{id:"环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("LD_LIBRARY_PATH")]),t._v("：临时改变某个应用程序的共享库查找路径，而不会影响其他应用程序")]),t._v(" "),a("li",[a("code",[t._v("LD_PRELOAD")]),t._v("：指定预先装载的一些共享库甚至是目标文件")]),t._v(" "),a("li",[a("code",[t._v("LD_DEBUG")]),t._v("：打开动态链接器的调试功能")])]),t._v(" "),a("h4",{attrs:{id:"so-共享库的编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#so-共享库的编写"}},[t._v("#")]),t._v(" so 共享库的编写")]),t._v(" "),a("p",[t._v("使用 CLion 编写共享库")]),t._v(" "),a("p",[t._v("创建一个名为 MySharedLib 的共享库")]),t._v(" "),a("p",[t._v("CMakeLists.txt")]),t._v(" "),a("div",{staticClass:"language-cmake line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MySharedLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MySharedLib "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("SHARED")]),t._v(" library.cpp library.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("library.h")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MYSHAREDLIB_LIBRARY_H")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MYSHAREDLIB_LIBRARY_H")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 Hello World!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用可变模版参数求和")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nT "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Types"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nT "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Types "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("library.cpp")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, World!"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"so-共享库的使用（被可执行项目调用）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#so-共享库的使用（被可执行项目调用）"}},[t._v("#")]),t._v(" so 共享库的使用（被可执行项目调用）")]),t._v(" "),a("p",[t._v("使用 CLion 调用共享库")]),t._v(" "),a("p",[t._v("创建一个名为 TestSharedLib 的可执行项目")]),t._v(" "),a("p",[t._v("CMakeLists.txt")]),t._v(" "),a("div",{staticClass:"language-cmake line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TestSharedLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# C++11 编译")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 头文件路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INC_DIR /home/xx/code/clion/MySharedLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 库文件路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LIB_DIR /home/xx/code/clion/MySharedLib/cmake-build-debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("INC_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("link_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("LIB_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MySharedLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TestSharedLib main.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 链接 MySharedLib 库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TestSharedLib MySharedLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("main.cpp")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 + 2 = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 + 2 + 3 = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("执行结果")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Hello, World!\n1 + 2 = 3\n1 + 2 + 3 = 6\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"windows-应用程序入口函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-应用程序入口函数"}},[t._v("#")]),t._v(" Windows 应用程序入口函数")]),t._v(" "),a("ul",[a("li",[t._v("GUI（Graphical User Interface）应用，链接器选项："),a("code",[t._v("/SUBSYSTEM:WINDOWS")])]),t._v(" "),a("li",[t._v("CUI（Console User Interface）应用，链接器选项："),a("code",[t._v("/SUBSYSTEM:CONSOLE")])])]),t._v(" "),a("p",[t._v("_tWinMain 与 _tmain 函数声明")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("Int WINAPI "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_tWinMain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    HINSTANCE hInstanceExe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    HINSTANCE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    PTSTR pszCmdLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nCmdShow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_tmain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    TCHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    TCHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("envp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",[t._v("应用程序类型")]),t._v(" "),a("th",[t._v("入口点函数")]),t._v(" "),a("th",[t._v("嵌入可执行文件的启动函数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("处理ANSI字符（串）的GUI应用程序")]),t._v(" "),a("td",[t._v("_tWinMain(WinMain)")]),t._v(" "),a("td",[t._v("WinMainCRTSartup")])]),t._v(" "),a("tr",[a("td",[t._v("处理Unicode字符（串）的GUI应用程序")]),t._v(" "),a("td",[t._v("_tWinMain(wWinMain)")]),t._v(" "),a("td",[t._v("wWinMainCRTSartup")])]),t._v(" "),a("tr",[a("td",[t._v("处理ANSI字符（串）的CUI应用程序")]),t._v(" "),a("td",[t._v("_tmain(Main)")]),t._v(" "),a("td",[t._v("mainCRTSartup")])]),t._v(" "),a("tr",[a("td",[t._v("处理Unicode字符（串）的CUI应用程序")]),t._v(" "),a("td",[t._v("_tmain(wMain)")]),t._v(" "),a("td",[t._v("wmainCRTSartup")])]),t._v(" "),a("tr",[a("td",[t._v("动态链接库（Dynamic-Link Library）")]),t._v(" "),a("td",[t._v("DllMain")]),t._v(" "),a("td",[t._v("_DllMainCRTStartup")])])])]),t._v(" "),a("h3",{attrs:{id:"windows-的动态链接库（dynamic-link-library）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-的动态链接库（dynamic-link-library）"}},[t._v("#")]),t._v(" Windows 的动态链接库（Dynamic-Link Library）")]),t._v(" "),a("blockquote",[a("p",[t._v("部分知识点来自《Windows 核心编程（第五版）》")])]),t._v(" "),a("h4",{attrs:{id:"用处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用处"}},[t._v("#")]),t._v(" 用处")]),t._v(" "),a("ul",[a("li",[t._v("扩展了应用程序的特性")]),t._v(" "),a("li",[t._v("简化了项目管理")]),t._v(" "),a("li",[t._v("有助于节省内存")]),t._v(" "),a("li",[t._v("促进了资源的共享")]),t._v(" "),a("li",[t._v("促进了本地化")]),t._v(" "),a("li",[t._v("有助于解决平台间的差异")]),t._v(" "),a("li",[t._v("可以用于特殊目的")])]),t._v(" "),a("h4",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("创建 DLL，事实上是在创建可供一个可执行模块调用的函数")]),t._v(" "),a("li",[t._v("当一个模块提供一个内存分配函数（malloc、new）的时候，它必须同时提供另一个内存释放函数（free、delete）")]),t._v(" "),a("li",[t._v('在使用 C 和 C++ 混编的时候，要使用 extern "C" 修饰符')]),t._v(" "),a("li",[t._v("一个 DLL 可以导出函数、变量（避免导出）、C++ 类（导出导入需要同编译器，否则避免导出）")]),t._v(" "),a("li",[t._v("DLL 模块：cpp 文件中的 __declspec(dllexport) 写在 include 头文件之前")]),t._v(" "),a("li",[t._v("调用 DLL 的可执行模块：cpp 文件的 __declspec(dllimport) 之前不应该定义 MYLIBAPI")])]),t._v(" "),a("h4",{attrs:{id:"加载-windows-程序的搜索顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载-windows-程序的搜索顺序"}},[t._v("#")]),t._v(" 加载 Windows 程序的搜索顺序")]),t._v(" "),a("ol",[a("li",[t._v("包含可执行文件的目录")]),t._v(" "),a("li",[t._v("Windows 的系统目录，可以通过 GetSystemDirectory 得到")]),t._v(" "),a("li",[t._v("16 位的系统目录，即 Windows 目录中的 System 子目录")]),t._v(" "),a("li",[t._v("Windows 目录，可以通过 GetWindowsDirectory 得到")]),t._v(" "),a("li",[t._v("进程的当前目录")]),t._v(" "),a("li",[t._v("PATH 环境变量中所列出的目录")])]),t._v(" "),a("h4",{attrs:{id:"dll-入口函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dll-入口函数"}},[t._v("#")]),t._v(" DLL 入口函数")]),t._v(" "),a("p",[t._v("DllMain 函数")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("BOOL WINAPI "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DllMain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HINSTANCE hinstDLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DWORD fdwReason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LPVOID lpvReserved"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fdwReason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" DLL_PROCESS_ATTACH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次将一个DLL映射到进程地址空间时调用")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The DLL is being mapped into the process' address space.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" DLL_THREAD_ATTACH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当进程创建一个线程的时候，用于告诉DLL执行与线程相关的初始化（非主线程执行）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A thread is bing created.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" DLL_THREAD_DETACH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 系统调用 ExitThread 线程退出前，即将终止的线程通过告诉DLL执行与线程相关的清理")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A thread is exiting cleanly.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" DLL_PROCESS_DETACH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将一个DLL从进程的地址空间时调用")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The DLL is being unmapped from the process' address space.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TRUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Used only for DLL_PROCESS_ATTACH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h4",{attrs:{id:"载入卸载库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#载入卸载库"}},[t._v("#")]),t._v(" 载入卸载库")]),t._v(" "),a("p",[t._v("LoadLibrary、LoadLibraryExA、LoadPackagedLibrary、FreeLibrary、FreeLibraryAndExitThread 函数声明")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 载入库")]),t._v("\nHMODULE WINAPI "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadLibrary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  _In_ LPCTSTR lpFileName\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nHMODULE "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadLibraryExA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  LPCSTR lpLibFileName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  HANDLE hFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  DWORD  dwFlags\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若要在通用 Windows 平台（UWP）应用中加载 Win32 DLL，需要调用 LoadPackagedLibrary，而不是 LoadLibrary 或 LoadLibraryEx")]),t._v("\nHMODULE "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadPackagedLibrary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  LPCWSTR lpwLibFileName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  DWORD   Reserved\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 卸载库")]),t._v("\nBOOL WINAPI "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FreeLibrary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  _In_ HMODULE hModule\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 卸载库和退出线程")]),t._v("\nVOID WINAPI "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FreeLibraryAndExitThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  _In_ HMODULE hModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _In_ DWORD   dwExitCode\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h4",{attrs:{id:"显示地链接到导出符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示地链接到导出符号"}},[t._v("#")]),t._v(" 显示地链接到导出符号")]),t._v(" "),a("p",[t._v("GetProcAddress 函数声明")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("FARPROC "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetProcAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  HMODULE hInstDll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  PCSTR pszSymbolName  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只能接受 ANSI 字符串，不能是 Unicode")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"dumpbin-exe-查看-dll-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dumpbin-exe-查看-dll-信息"}},[t._v("#")]),t._v(" DumpBin.exe 查看 DLL 信息")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("VS 的开发人员命令提示符")]),t._v(" 使用 "),a("code",[t._v("DumpBin.exe")]),t._v(" 可查看 DLL 库的导出段（导出的变量、函数、类名的符号）、相对虚拟地址（RVA，relative virtual address）。如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("DUMPBIN -exports D:\\mydll.dll\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"loadlibrary-与-freelibrary-流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loadlibrary-与-freelibrary-流程图"}},[t._v("#")]),t._v(" LoadLibrary 与 FreeLibrary 流程图")]),t._v(" "),a("p",[t._v("LoadLibrary 与 FreeLibrary 流程图")]),t._v(" "),a("h5",{attrs:{id:"loadlibrary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loadlibrary"}},[t._v("#")]),t._v(" LoadLibrary")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/WindowsLoadLibrary.png",alt:"WindowsLoadLibrary"}})]),t._v(" "),a("h5",{attrs:{id:"freelibrary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#freelibrary"}},[t._v("#")]),t._v(" FreeLibrary")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huihut/interview/raw/master/images/WindowsFreeLibrary.png",alt:"WindowsFreeLibrary"}})]),t._v(" "),a("h4",{attrs:{id:"dll-库的编写（导出一个-dll-模块）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dll-库的编写（导出一个-dll-模块）"}},[t._v("#")]),t._v(" DLL 库的编写（导出一个 DLL 模块）")]),t._v(" "),a("p",[t._v("DLL 库的编写（导出一个 DLL 模块）\nDLL 头文件")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MyLib.h")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MYLIBAPI")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// MYLIBAPI 应该在全部 DLL 源文件的 include "Mylib.h" 之前被定义')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全部函数/变量正在被导出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个头文件被一个exe源代码模块包含，意味着全部函数/变量被导入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MYLIBAPI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dllimport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里定义任何的数据结构和符号")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义导出的变量（避免导出变量）")]),t._v("\nMYLIBAPI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" g_nResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义导出函数原型")]),t._v("\nMYLIBAPI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nLeft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nRight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("DLL 源文件")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MyLibFile1.cpp")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含标准Windows和C运行时头文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<windows.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DLL源码文件导出的函数和变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MYLIBAPI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dllexport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包含导出的数据结构、符号、函数、变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyLib.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将此DLL源代码文件的代码放在此处")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" g_nResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nLeft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nRight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    g_nResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nRight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" g_nResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h4",{attrs:{id:"dll-库的使用（运行时动态链接-dll）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dll-库的使用（运行时动态链接-dll）"}},[t._v("#")]),t._v(" DLL 库的使用（运行时动态链接 DLL）")]),t._v(" "),a("p",[t._v("DLL 库的使用（运行时动态链接 DLL）")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A simple program that uses LoadLibrary and ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GetProcAddress to access myPuts from Myputs.dll. ")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<windows.h>")]),t._v(" ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")]),t._v(" ")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__cdecl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("MYPROC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LPWSTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    HINSTANCE hinstLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    MYPROC ProcAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    BOOL fFreeResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fRunTimeLinkSuccess "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FALSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get a handle to the DLL module.")]),t._v("\n \n    hinstLib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadLibrary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TEXT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyPuts.dll"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the handle is valid, try to get the function address.")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hinstLib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        ProcAdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MYPROC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetProcAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hinstLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myPuts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the function address is valid, call the function.")]),t._v("\n \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" ProcAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fRunTimeLinkSuccess "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TRUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ProcAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("L"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Message sent to the DLL function\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Free the DLL module.")]),t._v("\n \n        fFreeResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FreeLibrary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hinstLib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If unable to call the DLL function, use an alternative.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" fRunTimeLinkSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Message printed from executable\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br")])]),a("h3",{attrs:{id:"运行库（runtime-library）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行库（runtime-library）"}},[t._v("#")]),t._v(" 运行库（Runtime Library）")]),t._v(" "),a("h4",{attrs:{id:"典型程序运行步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#典型程序运行步骤"}},[t._v("#")]),t._v(" 典型程序运行步骤")]),t._v(" "),a("ol",[a("li",[t._v("操作系统创建进程，把控制权交给程序的入口（往往是运行库中的某个入口函数）")]),t._v(" "),a("li",[t._v("入口函数对运行库和程序运行环境进行初始化（包括堆、I/O、线程、全局变量构造等等）。")]),t._v(" "),a("li",[t._v("入口函数初始化后，调用 main 函数，正式开始执行程序主体部分。")]),t._v(" "),a("li",[t._v("main 函数执行完毕后，返回到入口函数进行清理工作（包括全局变量析构、堆销毁、关闭I/O等），然后进行系统调用结束进程。")])]),t._v(" "),a("blockquote",[a("p",[t._v("一个程序的 I/O 指代程序与外界的交互，包括文件、管程、网络、命令行、信号等。更广义地讲，I/O 指代操作系统理解为 “文件” 的事物。")])]),t._v(" "),a("h4",{attrs:{id:"glibc-入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glibc-入口"}},[t._v("#")]),t._v(" glibc 入口")]),t._v(" "),a("p",[a("code",[t._v("_start -> __libc_start_main -> exit -> _exit")])]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("main(argc, argv, __environ)")]),t._v(" 函数在 "),a("code",[t._v("__libc_start_main")]),t._v(" 里执行。")]),t._v(" "),a("h4",{attrs:{id:"msvc-crt-入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#msvc-crt-入口"}},[t._v("#")]),t._v(" MSVC CRT 入口")]),t._v(" "),a("p",[a("code",[t._v("int mainCRTStartup(void)")])]),t._v(" "),a("p",[t._v("执行如下操作：")]),t._v(" "),a("ol",[a("li",[t._v("初始化和 OS 版本有关的全局变量。")]),t._v(" "),a("li",[t._v("初始化堆。")]),t._v(" "),a("li",[t._v("初始化 I/O。")]),t._v(" "),a("li",[t._v("获取命令行参数和环境变量。")]),t._v(" "),a("li",[t._v("初始化 C 库的一些数据。")]),t._v(" "),a("li",[t._v("调用 main 并记录返回值。")]),t._v(" "),a("li",[t._v("检查错误并将 main 的返回值返回。")])]),t._v(" "),a("h4",{attrs:{id:"c-语言运行库（crt）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-语言运行库（crt）"}},[t._v("#")]),t._v(" C 语言运行库（CRT）")]),t._v(" "),a("p",[t._v("大致包含如下功能：")]),t._v(" "),a("ul",[a("li",[t._v("启动与退出：包括入口函数及入口函数所依赖的其他函数等。")]),t._v(" "),a("li",[t._v("标准函数：有 C 语言标准规定的C语言标准库所拥有的函数实现。")]),t._v(" "),a("li",[t._v("I/O：I/O 功能的封装和实现。")]),t._v(" "),a("li",[t._v("堆：堆的封装和实现。")]),t._v(" "),a("li",[t._v("语言实现：语言中一些特殊功能的实现。")]),t._v(" "),a("li",[t._v("调试：实现调试功能的代码。")])]),t._v(" "),a("h4",{attrs:{id:"c语言标准库（ansi-c）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言标准库（ansi-c）"}},[t._v("#")]),t._v(" C语言标准库（ANSI C）")]),t._v(" "),a("p",[t._v("包含：")]),t._v(" "),a("ul",[a("li",[t._v("标准输入输出（stdio.h）")]),t._v(" "),a("li",[t._v("文件操作（stdio.h）")]),t._v(" "),a("li",[t._v("字符操作（ctype.h）")]),t._v(" "),a("li",[t._v("字符串操作（string.h）")]),t._v(" "),a("li",[t._v("数学函数（math.h）")]),t._v(" "),a("li",[t._v("资源管理（stdlib.h）")]),t._v(" "),a("li",[t._v("格式转换（stdlib.h）")]),t._v(" "),a("li",[t._v("时间/日期（time.h）")]),t._v(" "),a("li",[t._v("断言（assert.h）")]),t._v(" "),a("li",[t._v("各种类型上的常数（limits.h & float.h）")]),t._v(" "),a("li",[t._v("变长参数（stdarg.h）")]),t._v(" "),a("li",[t._v("非局部跳转（setjmp.h）")])]),t._v(" "),a("p",[a("a",{attrs:{id:"books"}})]),t._v(" "),a("h2",{attrs:{id:"📚-书籍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📚-书籍"}},[t._v("#")]),t._v(" 📚 书籍")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/huihut/CS-Books",target:"_blank",rel:"noopener noreferrer"}},[t._v("huihut/CS-Books"),a("OutboundLink")],1),t._v("：📚 Computer Science Books 计算机技术类书籍 PDF")])]),t._v(" "),a("h3",{attrs:{id:"语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言"}},[t._v("#")]),t._v(" 语言")]),t._v(" "),a("ul",[a("li",[t._v("《C++ Primer》")]),t._v(" "),a("li",[t._v("《Effective C++》")]),t._v(" "),a("li",[t._v("《More Effective C++》")]),t._v(" "),a("li",[t._v("《深度探索 C++ 对象模型》")]),t._v(" "),a("li",[t._v("《深入理解 C++11》")]),t._v(" "),a("li",[t._v("《STL 源码剖析》")])]),t._v(" "),a("h3",{attrs:{id:"算法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法-2"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("ul",[a("li",[t._v("《剑指 Offer》")]),t._v(" "),a("li",[t._v("《编程珠玑》")]),t._v(" "),a("li",[t._v("《程序员面试宝典》")])]),t._v(" "),a("h3",{attrs:{id:"系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统"}},[t._v("#")]),t._v(" 系统")]),t._v(" "),a("ul",[a("li",[t._v("《深入理解计算机系统》")]),t._v(" "),a("li",[t._v("《Windows 核心编程》")]),t._v(" "),a("li",[t._v("《Unix 环境高级编程》")])]),t._v(" "),a("h3",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),a("ul",[a("li",[t._v("《Unix 网络编程》")]),t._v(" "),a("li",[t._v("《TCP/IP 详解》")])]),t._v(" "),a("h3",{attrs:{id:"其他-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他-2"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[t._v("《程序员的自我修养》")])]),t._v(" "),a("p",[a("a",{attrs:{id:"cc-development-direction"}})]),t._v(" "),a("h2",{attrs:{id:"🔱-c-c-发展方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🔱-c-c-发展方向"}},[t._v("#")]),t._v(" 🔱 C/C++ 发展方向")]),t._v(" "),a("blockquote",[a("p",[t._v("C/C++ 发展方向甚广，包括不限于以下方向， 以下列举一些大厂校招岗位要求。")])]),t._v(" "),a("h3",{attrs:{id:"后台-服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后台-服务器"}},[t._v("#")]),t._v(" 后台/服务器")]),t._v(" "),a("p",[t._v("【后台开发】")]),t._v(" "),a("ul",[a("li",[t._v("编程基本功扎实，掌握 C/C++/JAVA 等开发语言、常用算法和数据结构；")]),t._v(" "),a("li",[t._v("熟悉 TCP/UDP 网络协议及相关编程、进程间通讯编程；")]),t._v(" "),a("li",[t._v("了解 Python、Shell、Perl 等脚本语言；")]),t._v(" "),a("li",[t._v("了解 MYSQL 及 SQL 语言、编程，了解 NoSQL, key-value 存储原理；")]),t._v(" "),a("li",[t._v("全面、扎实的软件知识结构，掌握操作系统、软件工程、设计模式、数据结构、数据库系统、网络安全等专业知识；")]),t._v(" "),a("li",[t._v("了解分布式系统设计与开发、负载均衡技术，系统容灾设计，高可用系统等知识。")])]),t._v(" "),a("h3",{attrs:{id:"桌面客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#桌面客户端"}},[t._v("#")]),t._v(" 桌面客户端")]),t._v(" "),a("p",[t._v("【PC 客户端开发】")]),t._v(" "),a("ul",[a("li",[t._v("计算机软件相关专业本科或以上学历，热爱编程，基础扎实，理解算法和数据结构相关知识；")]),t._v(" "),a("li",[t._v("熟悉 windows 操作系统的内存管理、文件系统、进程线程调度；")]),t._v(" "),a("li",[t._v("熟悉 MFC/windows 界面实现机制，熟练使用 VC，精通 C/C++，熟练使用 STL，以及 Windows 下网络编程经验；")]),t._v(" "),a("li",[t._v("熟练掌握 Windows 客户端开发、调试，有 Windows 应用软件开发经验优先；")]),t._v(" "),a("li",[t._v("对于创新及解决具有挑战性的问题充满激情，具有良好的算法基础及系统分析能力。")])]),t._v(" "),a("h3",{attrs:{id:"图形学-游戏-vr-ar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形学-游戏-vr-ar"}},[t._v("#")]),t._v(" 图形学/游戏/VR/AR")]),t._v(" "),a("p",[t._v("【游戏客户端开发】")]),t._v(" "),a("ul",[a("li",[t._v("计算机科学/工程相关专业本科或以上学历，热爱编程，基础扎实，理解算法、数据结构、软件设计相关知识；")]),t._v(" "),a("li",[t._v("至少掌握一种游戏开发常用的编程语言，具 C++/C# 编程经验优先；")]),t._v(" "),a("li",[t._v("具游戏引擎（如 Unity、Unreal）使用经验者优先；")]),t._v(" "),a("li",[t._v("了解某方面的游戏客户端技术（如图形、音频、动画、物理、人工智能、网络同步）者优先考虑；")]),t._v(" "),a("li",[t._v("对于创新及解决具有挑战性的问题充满激情，有较强的学习能力、分析及解决问题能力，具备良好的团队合作意识；")]),t._v(" "),a("li",[t._v("具阅读英文技术文档能力；")]),t._v(" "),a("li",[t._v("热爱游戏。")])]),t._v(" "),a("h3",{attrs:{id:"测试开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试开发"}},[t._v("#")]),t._v(" 测试开发")]),t._v(" "),a("p",[t._v("【测试开发】")]),t._v(" "),a("ul",[a("li",[t._v("计算机或相关专业本科及以上学历；")]),t._v(" "),a("li",[t._v("一至两年的 C/C++/Python 或其他计算机语言的编程经验；")]),t._v(" "),a("li",[t._v("具备撰写测试计划、测试用例、以及实现性能和安全等测试的能力；")]),t._v(" "),a("li",[t._v("具备实现自动化系统的能力；")]),t._v(" "),a("li",[t._v("具备定位调查产品缺陷能力、以及代码级别调试缺陷的能力；")]),t._v(" "),a("li",[t._v("工作主动积极，有责任心，具有良好的团队合作精神。")])]),t._v(" "),a("h3",{attrs:{id:"网络安全-逆向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络安全-逆向"}},[t._v("#")]),t._v(" 网络安全/逆向")]),t._v(" "),a("p",[t._v("【安全技术】")]),t._v(" "),a("ul",[a("li",[t._v("热爱互联网，对操作系统和网络安全有狂热的追求，专业不限；")]),t._v(" "),a("li",[t._v("熟悉漏洞挖掘、网络安全攻防技术，了解常见黑客攻击手法；")]),t._v(" "),a("li",[t._v("掌握基本开发能力，熟练使用 C/C++ 语言；")]),t._v(" "),a("li",[t._v("对数据库、操作系统、网络原理有较好掌握；")]),t._v(" "),a("li",[t._v("具有软件逆向，网络安全攻防或安全系统开发经验者优先。")])]),t._v(" "),a("h3",{attrs:{id:"嵌入式-物联网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌入式-物联网"}},[t._v("#")]),t._v(" 嵌入式/物联网")]),t._v(" "),a("p",[t._v("【嵌入式应用开发】")]),t._v(" "),a("ul",[a("li",[t._v("有良好的编程基础，熟练掌握 C/C++ 语言；")]),t._v(" "),a("li",[t._v("掌握操作系统、数据结构等软件开发必备知识；")]),t._v(" "),a("li",[t._v("具备较强的沟通理解能力及良好的团队合作意识；")]),t._v(" "),a("li",[t._v("有 Linux/Android 系统平台的开发经验者优先。")])]),t._v(" "),a("h3",{attrs:{id:"音视频-流媒体-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#音视频-流媒体-sdk"}},[t._v("#")]),t._v(" 音视频/流媒体/SDK")]),t._v(" "),a("p",[t._v("【音视频编解码】")]),t._v(" "),a("ol",[a("li",[t._v("硕士及以上学历，计算机、信号处理、数学、信息类及相关专业和方向；")]),t._v(" "),a("li",[t._v("视频编解码基础扎实，熟常用的 HEVC 或 H264，有较好的数字信号处理基础；")]),t._v(" "),a("li",[t._v("掌握 C/C++，代码能力强, 熟悉一种汇编语言尤佳；")]),t._v(" "),a("li",[t._v("较强的英文文献阅读能力；")]),t._v(" "),a("li",[t._v("学习能力强，具有团队协作精神，有较强的抗压能力。")])]),t._v(" "),a("h3",{attrs:{id:"计算机视觉-机器学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机视觉-机器学习"}},[t._v("#")]),t._v(" 计算机视觉/机器学习")]),t._v(" "),a("p",[t._v("【计算机视觉研究】")]),t._v(" "),a("ul",[a("li",[t._v("计算机、应用数学、模式识别、人工智能、自控、统计学、运筹学、生物信息、物理学/量子计算、神经科学、社会学/心理学等专业，图像处理、模式识别、机器学习相关研究方向，本科及以上，博士优先；")]),t._v(" "),a("li",[t._v("熟练掌握计算机视觉和图像处理相关的基本算法及应用；")]),t._v(" "),a("li",[t._v("较强的算法实现能力，熟练掌握 C/C++ 编程，熟悉 Shell/Python/Matlab 至少一种编程语言；")]),t._v(" "),a("li",[t._v("在计算机视觉、模式识别等学术会议或者期刊上发表论文、相关国际比赛获奖、及有相关专利者优先。")])]),t._v(" "),a("p",[a("a",{attrs:{id:"review-of-brush-questions-website"}})]),t._v(" "),a("h2",{attrs:{id:"💯-复习刷题网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#💯-复习刷题网站"}},[t._v("#")]),t._v(" 💯 复习刷题网站")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.cplusplus.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cplusplus"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5",target:"_blank",rel:"noopener noreferrer"}},[t._v("cppreference"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.runoob.com/cplusplus/cpp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("runoob"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://leetcode.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("leetcode"),a("OutboundLink")],1),t._v(" | "),a("a",{attrs:{href:"https://leetcode-cn.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("leetcode-cn"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.lintcode.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("lintcode"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{id:"interview-questions-experience"}})]),t._v(" "),a("h2",{attrs:{id:"📝-面试题目经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📝-面试题目经验"}},[t._v("#")]),t._v(" 📝 面试题目经验")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/205497",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2020秋招面经大汇总！（岗位划分）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/197116",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 【备战秋招】2020届秋招备战攻略"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/90907",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2019校招面经大汇总！【每日更新中】"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/146655",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2019校招技术类岗位面经汇总【技术类】"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/68802",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2018校招笔试真题汇总"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/12805",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2017秋季校园招聘笔经面经专题汇总"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/25268",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 史上最全2017春招面经大合集！！"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/discuss/57978",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 面试题干货在此"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/29693016",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎 . 互联网求职路上，你见过哪些写得很好、很用心的面经？最好能分享自己的面经、心路历程。"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/24964987",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎 . 互联网公司最常见的面试算法题有哪些？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.csdn.net/ljzcome/article/details/574158",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN . 全面整理的C++面试题"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.csdn.net/Xiongchao99/article/details/74524807?locationNum=6&fps=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN . 百度研发类面试题（C++方向）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.csdn.net/fakine/article/details/51321544",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN . c++常见面试题30道"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.csdn.net/onever_say_love/article/details/51223886",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN . 腾讯2016实习生面试经验（已经拿到offer)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/Y1Focus/p/6707121.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cnblogs . C++面试集锦( 面试被问到的问题 )"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/fangyukuan/archive/2010/09/18/1829871.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cnblogs . C/C++ 笔试、面试题目大汇总"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/LUO77/p/5771237.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cnblogs . 常见C++面试题及基本知识点总结（一）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000003745529",target:"_blank",rel:"noopener noreferrer"}},[t._v("segmentfault . C++常见面试问题总结"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{id:"recruitment-time-post"}})]),t._v(" "),a("h2",{attrs:{id:"📆-招聘时间岗位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📆-招聘时间岗位"}},[t._v("#")]),t._v(" 📆 招聘时间岗位")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/school/schedule",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客网 . 2020届校招 | 2020 IT名企校招日程"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{id:"recommend"}})]),t._v(" "),a("h2",{attrs:{id:"👍-内推"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#👍-内推"}},[t._v("#")]),t._v(" 👍 内推")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/CyC2018/Job-Recommend",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . CyC2018/Job-Recommend"),a("OutboundLink")],1),t._v("：🔎 互联网内推信息（社招、校招、实习）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/amusi/AI-Job-Recommend",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github . amusi/AI-Job-Recommend"),a("OutboundLink")],1),t._v("：国内公司人工智能方向（含机器学习、深度学习、计算机视觉和自然语言处理）岗位的招聘信息（含全职、实习和校招）")])]),t._v(" "),a("p",[a("a",{attrs:{id:"contributor"}})]),t._v(" "),a("h2",{attrs:{id:"👬-贡献者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#👬-贡献者"}},[t._v("#")]),t._v(" 👬 贡献者")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/huihut/interview/graphs/contributors"}},[a("img",{attrs:{src:"https://opencollective.com/interview/contributors.svg?button=false"}})])]),t._v(" "),a("p",[a("a",{attrs:{id:"support-sponsor"}})]),t._v(" "),a("h2",{attrs:{id:"🍭-支持赞助"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🍭-支持赞助"}},[t._v("#")]),t._v(" 🍭 支持赞助")]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://store.steampowered.com/app/1137770/Avalive/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Avalive"),a("OutboundLink")],1)]),t._v("：一个面部捕捉的虚拟形象扮演软件。")]),t._v(" "),a("p",[a("a",{attrs:{id:"license"}})]),t._v(" "),a("h2",{attrs:{id:"📜-license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📜-license"}},[t._v("#")]),t._v(" 📜 License")]),t._v(" "),a("p",[t._v("本仓库遵循 CC BY-NC-SA 4.0（署名 - 非商业性使用 - 相同方式共享） 协议，转载请注明出处，不得用于商业目的。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/huihut/interview/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png",alt:"CC BY-NC-SA 4.0"}}),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);